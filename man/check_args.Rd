% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_check_args.R
\name{check_args}
\alias{check_args}
\title{Check function arguments for specific types}
\usage{
check_args(args_to_check = NULL, args_type = NULL, arg_length = 1L, ...)
}
\arguments{
\item{args_to_check}{Character vector. Names of the arguments to be checked.}

\item{args_type}{Character. The expected type of the arguments. Must be one
of "character", "logical", or "numeric".}

\item{arg_length}{Numeric vector. Expected length of each argument in
\code{args_to_check}. Default is 1L.}

\item{...}{Additional arguments passed to \link{stop_ctx}.}
}
\value{
The function does not return a value but will stop execution and
throw an error if any of the specified arguments do not match the expected
type.
}
\description{
This function checks if the specified arguments of a function match the
expected type. It is useful for validating function inputs.
}
\examples{
f1 <- function(x = "AA", y = "BB", z = 1) {
 # Check if x and y are a character
 check_args(args_to_check = c("x", "y"), args_type = "character")

 # Check if z is a numeric
 check_args(args_to_check = "z", args_type = "numeric")
}

f1(x = "X", z = 20)
try(f1(x = 1))

try(f1(x = c("X1", "x2", "x3"), y = c(20, 30)))

f2 <- function(x = "AA", y = "BB", z = 1) {
 check_args(
  args_to_check = c("x", "y"), args_type = "character", arg_length = c(3, 2))
}
f2(x = c("X1", "x2", "x3"), y = c("20", "30"))
}
\author{
Ahmed El-Gabbas
}
