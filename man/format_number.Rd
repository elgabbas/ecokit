% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_cat_time.R
\name{format_number}
\alias{format_number}
\title{Format a numbers with thousands separator and crayon styles}
\usage{
format_number(
  number = NULL,
  big_mark = ",",
  blue = TRUE,
  red = FALSE,
  bold = FALSE,
  underline = FALSE
)
}
\arguments{
\item{number}{Numeric vector to format.}

\item{big_mark}{Character of length 1 used as the thousands separator (passed
to \code{format(..., big.mark = big_mark)}). Must be non-NULL, non-empty, and of
length 1. Default: \code{","}.}

\item{blue}{Logical; if \code{TRUE} (default) the formatted output is wrapped with
\code{\link[crayon:crayon]{crayon::blue()}}.}

\item{red}{Logical; if \code{TRUE} the formatted output is wrapped with
\code{\link[crayon:crayon]{crayon::red()}}. Default: \code{FALSE}.}

\item{bold}{Logical; if \code{TRUE} the formatted output is wrapped with
\code{\link[crayon:crayon]{crayon::bold()}}. Default: \code{FALSE}.}

\item{underline}{Logical; if \code{TRUE} the formatted output is wrapped with
\code{\link[crayon:crayon]{crayon::underline()}}. Default: \code{FALSE}.}
}
\value{
A character scalar containing the formatted number(s) with the
requested \code{crayon} styling applied.
}
\description{
Format numeric input using a specified thousands separator and optionally
apply crayon styling (\code{blue}, \code{red}, \code{underline}, \code{bold}). If multiple
numbers are provided they are formatted individually then collapsed into a
single comma-separated string.
}
\details{
Input validation performed by the function:
\itemize{
\item \code{big_mark} must not be \code{NULL}, must be a character of length 1,
and must be non-empty.
\item \code{number} must be numeric; otherwise an error is raised.
\item \code{blue} and \code{red} cannot both be \code{TRUE} (mutually exclusive).

The function first formats numbers using \code{format(..., big.mark = big_mark)}, which returns a character vector. If the numeric input has
length greater than one, it collapses the formatted values into a single
string using \code{toString()}. Finally, the selected \code{crayon} styles are
applied in sequence (\code{blue}, \code{red}, \code{underline}, \code{bold}) to the resulting
character value.
}
}
\examples{
# Single number (default: blue)
cat(format_number(1234567))

# Multiple numbers collapsed to a single string
cat(format_number(c(1000, 2000000)))

# Use a space as the thousands separator and apply red + bold
cat(
  format_number(
    1234567, big_mark = " ", blue = FALSE, red = TRUE, bold = TRUE))

}
\author{
Ahmed El-Gabbas
}
