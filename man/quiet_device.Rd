% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_quiet_device.R
\name{quiet_device}
\alias{quiet_device}
\title{Suppress Future Device Warnings and Startup Messages}
\usage{
quiet_device(expr)
}
\arguments{
\item{expr}{An R expression to evaluate. This is the code block in which
graphics device warnings or startup messages from futures might occur.}
}
\value{
The result of evaluating \code{expr}, with specific future device warnings
and package startup messages suppressed.
}
\description{
This function evaluates an expression and selectively suppresses:
\itemize{
\item Warnings related to device state changes (e.g., opening or closing
graphical devices) that occur inside \code{future} parallel workers (e.g., with
\code{multisession} or \code{multicore} plans).
\item Package startup messages emitted during package loading in parallel workers
(e.g., from \code{ggplot2} or \code{terra} in \code{multicore} plans).
}
}
\details{
When using \code{future.apply::future_lapply()} or similar parallel calls, certain
functions— notably \code{ggplot2::ggplotGrob()}, \code{cowplot::as_grob()}, or
\code{ggExtra::ggMarginal()}—may implicitly trigger graphics device changes (e.g.,
opening a PDF device internally). This causes \code{future} to emit a
\code{DeviceMisuseFutureWarning}, warning that devices were added, removed, or
modified within a future. Additionally, in \code{multicore} plans, forked
processes may emit startup messages from packages (particularly when using
\code{future.packages} argument), cluttering output. This function suppresses both
types of output while allowing other warnings and messages to pass through.
}
\examples{
\dontrun{
  library(future)
  library(future.apply)
  library(ggplot2)
  library(parallelly)

  # Use multicore if supported, otherwise fall back to multisession
  plan_type <- ifelse(
      parallelly::supportsMulticore(), "multicore", "multisession")
  future::plan(plan_type, workers = 2, gc = TRUE)

  fun1 <- function(x) {
    # Loading ecokit triggers startup messages
    library(ecokit)

    p <- data.frame(x = rnorm(100), y = rnorm(100)) \%>\%
      ggplot2::ggplot(ggplot2::aes(x, y)) +
      ggplot2::geom_point()

    # this triggers device warnings
    return(grob)
  }

  # This will trigger device warnings and startup messages
  plots <- future.apply::future_lapply(1:5, fun1, future.seed = TRUE)

  # Run with suppression of device warnings and startup messages
  plots <- future.apply::future_lapply(1:5, fun1, future.seed = TRUE) \%>\%
    quiet_device()
  plot(plots[[1]])

  future::plan("sequential")
}
}
\author{
Ahmed El-Gabbas
}
