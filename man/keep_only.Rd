% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_keep_only.R
\name{keep_only}
\alias{keep_only}
\title{Keep only specified objects in the environment, removing all others.}
\usage{
keep_only(objects, verbose = TRUE)
}
\arguments{
\item{objects}{Character vector. Names of the objects to be kept in the
environment.}

\item{verbose}{Logical. Whether to print the names of kept and removed
variables. Default to \code{TRUE}.}
}
\value{
No return value, called for side effects.
}
\description{
This function selectively retains the objects specified in the \code{objects}
parameter in the current environment, removing all other objects. It is
useful for memory management by clearing unnecessary objects from the
environment. The function also provides an option to print the names of the
kept and removed variables.
}
\examples{
load_packages(terra)

A <- B <- C <- 15
ls()

keep_only("A")

ls()
rm(list = ls())


A <- B <- C <- 15
keep_only(c("A","B"))
ls()

# -------------------------------------------

# use inside a function
function1 <- function(a = 1, b = 2, c = 3) {
  z <- terra::rast()
  print(paste0("available objects before keep_only: ", toString(ls())))

  keep_only(c("a", "b"), verbose = FALSE)
  print(paste0("available objects after keep_only: ", toString(ls())))

  return(invisible(NULL))
}
function1()
}
\author{
Ahmed El-Gabbas
}
