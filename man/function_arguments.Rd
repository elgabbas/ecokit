% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_function_argumentss.R
\name{function_arguments}
\alias{function_arguments}
\title{Print function Arguments}
\usage{
function_arguments(function_name, assign = FALSE, package = NULL)
}
\arguments{
\item{function_name}{A function whose arguments you want to print. Must be a
valid R function.}

\item{assign}{Logical. Whether to assign the arguments as variables in the
global environment. Defaults to \code{FALSE}.}

\item{package}{Character. Name of the R package to be loaded before
processing the function. Default is \code{NULL}.}
}
\value{
The function prints the formatted arguments to the console. If
\code{assign} is TRUE, it also assigns arguments to the global environment.
}
\description{
This function takes another function as input and prints its arguments in the
format \code{ArgumentName = DefaultValue}. The function can optionally assign the
formatted arguments to the global environment and can load a specified
package before processing.
}
\examples{

# loading packages
load_packages(dplyr, purrr)

# ---------------------------------------------
# using formals
# ---------------------------------------------
formals(stats::setNames)

# ---------------------------------------------
# no assignment
# ---------------------------------------------

function_arguments(stats::setNames)

# objects were not assigned to the global environment
any(purrr::map_lgl(c("object", "nm"), exists))     # FALSE

# ---------------------------------------------
# with assignment
# ---------------------------------------------

# Example 1
function_arguments(stats::setNames, assign = TRUE)

all(purrr::map_lgl(c("object", "nm"), exists))     # TRUE
object


# Example 2
function_arguments(get0, assign = TRUE)

c("x", "envir", "mode", "inherits", "ifnotfound") \%>\%
  purrr::map_lgl(exists) \%>\%
  all()                                            # TRUE
}
\author{
Ahmed El-Gabbas
}
