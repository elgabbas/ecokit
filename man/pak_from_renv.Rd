% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_pak_from_renv.R
\name{pak_from_renv}
\alias{pak_from_renv}
\title{Extract Installable Package References from renv.lock for Use with pak}
\usage{
pak_from_renv(lockfile)
}
\arguments{
\item{lockfile}{Path to the \code{renv.lock} file (JSON format).}
}
\value{
A list with the following elements:
\describe{
\item{pak}{Character vector of installable references for \code{pak}
(CRAN/BioC only)}
\item{tarballs}{Character vector of tarball URLs (install with remotes)}
\item{remote}{Character vector of all remote package references
(user/repo, no SHA)}
}
}
\description{
This function parses a given \code{renv.lock} file and extracts all package
references that can be directly installed using the \code{pak} package
\link[pak:pkg_install]{pak::pkg_install}. It supports a wide range of repositories, including CRAN,
Bioconductor, GitHub, GitLab, Bitbucket, and other common remote sources, as
well as tarball URLs (which \code{pak} cannot install directly). The function
returns a list of multiple character vectors:
\itemize{
\item \code{pak}: installable references for \code{pak} (CRAN/BioC only, no remotes)
\item \code{tarballs}: tarball URLs for manual installation (e.g., with remotes)
\item \code{remote}: GitHub/GitLab/Bitbucket package references (user/repo, no
SHA/ref)
}
}
\details{
These lists allow you to separately process packages by source, or install
GitHub/GitLab/Bitbucket packages without strict versioning/commit, which can
sometimes help avoid dependency resolution conflicts in pak (and other
tools).

\href{https://rstudio.github.io/renv/index.html}{\code{renv}} is a popular R
package for project-local dependency management, creating lock files
(\code{renv.lock}) to ensure reproducible environments.
\href{https://pak.r-lib.org/}{\code{pak}} is a fast, parallel package installer that
works with CRAN, GitHub, Bioconductor, and other sources, but does not
natively install from \code{renv.lock}. This function bridges the gap, enabling
fast, parallel installation of all packages specified in a lockfile using
\code{pak}, and allows you to reuse \code{pak}'s cache with \link[renv:restore]{renv::restore} for speed
and reliability.

The function is used to extract a complete list of installable references
from any \code{renv.lock} for rapid, parallel installation via \code{pak}. After
installing with \link[pak:pkg_install]{pak::pkg_install}, you can run \link[renv:restore]{renv::restore} to link
cached packages, ensuring a reproducible environment with minimal download
time.

In addition to the main installable references, the function outputs a
separate list for all remotes (GitHub, GitLab, Bitbucket) without SHA/ref,
which can be useful for alternative install strategies, e.g., to install
all CRAN/Bioc packages first, and then install all remotes without version
pinning.
}
\examples{
lock_path <- file.path(
    "https://raw.githubusercontent.com/cosname/",
    "rmarkdown-guide/master/renv.lock")

(pak_packages <- pak_from_renv(lockfile = lock_path))

# Install packages using pak
# pak::pak_install(pak_packages$pak)

# Install all remote packages (latest HEAD, no SHA)
# pak::pak_install(pak_packages$remote)

}
\seealso{
\code{\link[pak:pkg_install]{pak::pkg_install()}}, \code{\link[renv:restore]{renv::restore()}}, \code{\link[remotes:install_url]{remotes::install_url()}}
}
\author{
Ahmed El-Gabbas
}
