% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_assign_if_not_exist.R
\name{assign_if_not_exist}
\alias{assign_if_not_exist}
\title{Assign a value to a variable if it does not already exist in the specified
environment}
\usage{
assign_if_not_exist(variable, value, environment = globalenv())
}
\arguments{
\item{variable}{Character; the name of the variable to be checked and
potentially assigned a value.}

\item{value}{any; the value to be assigned to the variable if it does not
already exist.}

\item{environment}{environment; the environment in which to check for the
existence of the variable and potentially assign the value. Defaults to the
global environment.}
}
\value{
The function explicitly returns \code{NULL}, but its primary effect is the
side-effect of assigning a value to a variable in an environment or
printing the current value of an existing variable.
}
\description{
This function checks if a given variable exists in the specified environment
(global environment by default). If the variable does not exist, it assigns a
given value to it. If the variable already exists, it prints the current
value of the variable. The function is designed to prevent overwriting
existing variables unintentionally.
}
\examples{
assign_if_not_exist(variable = "x", value = TRUE)
print(x)

# --------------------------------------------------

y <- 10
# y exists and thus its value was not changed
assign_if_not_exist(variable = "y", value = TRUE)
print(y)
}
\author{
Ahmed El-Gabbas
}
