% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spat_set_raster_values.R
\name{set_raster_values}
\alias{set_raster_values}
\title{Load Values for \code{SpatRaster} Objects into Memory}
\usage{
set_raster_values(raster = NULL)
}
\arguments{
\item{raster}{A \code{SpatRaster} object, a file path to a raster file (e.g.,
\code{.tif}, \code{.nc}), or a \code{raster} package object (\code{RasterLayer}, \code{RasterStack},
\code{RasterBrick}). Cannot be \code{NULL} or missing.}
}
\value{
The \code{SpatRaster} object with all values loaded into memory.
}
\description{
Ensures a \code{SpatRaster} object has its values loaded into memory, processing
inputs as a \code{SpatRaster} object, a file path to a raster, or a \code{raster}
package object (\code{RasterLayer}, \code{RasterStack}, \code{RasterBrick}). Converts and
unpacks inputs as needed.
}
\details{
The function handles various types of input:
\itemize{
\item If a file path is provided, it attempts to load the raster using
\code{\link[terra:rast]{terra::rast()}}.
\item If the input is a packed \code{SpatRaster}, it unpacks the raster using
\code{\link[terra:wrap]{terra::unwrap()}}.
\item If the input is a raster object from the \code{raster} package, it is
converted to \code{SpatRaster}.
}
}
\examples{
load_packages(terra, raster)

f <- system.file("ex/elev.tif", package="terra")

# SpatRaster
r <- terra::rast(f)
terra::inMemory(r)
r_mem <- set_raster_values(r)
terra::inMemory(r_mem)

# PackedSpatRaster
r2 <- terra::wrap(terra::rast(f))
r2_mem <- set_raster_values(r2)
terra::inMemory(r2_mem)

# raster
r3 <- raster::raster(f)
raster::inMemory(r3)
r3_mem <- set_raster_values(r3)
terra::inMemory(r3_mem)
}
\author{
Ahmed El-Gabbas
}
