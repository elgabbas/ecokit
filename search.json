[{"path":"https://elgabbas.github.io/ecokit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Ahmed El-Gabbas Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elgabbas.github.io/ecokit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ahmed El-Gabbas. Author, maintainer.","code":""},{"path":"https://elgabbas.github.io/ecokit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"El-Gabbas (2025). ecokit: Tools Ecological General Utilities. R package version 0.1.0, https://github.com/elgabbas/ecokit.","code":"@Manual{,   title = {ecokit: Tools for Ecological and General Utilities},   author = {Ahmed El-Gabbas},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/elgabbas/ecokit}, }"},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"ecokit","text":"ecokit R package designed provide versatile set utility functions ecologists general R users alike. offers tools data manipulation, statistical analysis, spatial data handling.","code":""},{"path":"https://elgabbas.github.io/ecokit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ecokit","text":"can install development version ecokit directly GitHub using following commands:","code":"# Install devtools if you don’t already have it if (!require(\"devtools\")) install.packages(\"devtools\")  # Install ecokit from GitHub devtools::install_github(\"elgabbas/ecokit\")"},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":null,"dir":"Reference","previous_headings":"","what":"Current operating system — OS","title":"Current operating system — OS","text":"function returns name current operating system R session running .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current operating system — OS","text":"","code":"OS()"},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current operating system — OS","text":"character string representing name operating system.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Current operating system — OS","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current operating system — OS","text":"","code":"OS() #> [1] \"Linux\""},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"Create multilinestring (cross middle grid) sf object grid cell","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"","code":"add_cross_to_grid(sf_object = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"sf_object sf object (tibble) representing grid cells. function expects object geometry column polygon geometries. NULL, function stop error message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"sf object multilinestring geometries representing crosses middle input grid cell. returned object CRS (Coordinate Reference System) input DT","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"function requires sf, dplyr, purrr, tibble, tidyr packages installed loaded.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_cross_to_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a multilinestring sf object representing cross in the middle of each grid cell — add_cross_to_grid","text":"","code":"ecokit::load_packages(package_list = c(\"dplyr\", \"sf\", \"raster\", \"ggplot2\"))  Grid <- raster::raster(     nrows = 10, ncols = 10, xmn = 0, xmx = 10,     ymn = 0, ymx = 10, crs = 4326) %>%   setNames(\"Grid\") %>%   raster::setValues(1) %>%   raster::rasterToPolygons() %>%   sf::st_as_sf()  ggplot2::ggplot() +   ggplot2::geom_sf(     Grid, mapping = ggplot2::aes(), color = \"black\",     linewidth = 0.5, fill = \"transparent\") +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()   Grid_X <- add_cross_to_grid(Grid)  ggplot2::ggplot() +   ggplot2::geom_sf(   Grid, mapping = ggplot2::aes(), color = \"black\",     linewidth = 0.5, fill = \"transparent\") +   ggplot2::geom_sf(Grid_X, mapping = ggplot2::aes(), color = \"red\",     linewidth = 0.5, inherit.aes = TRUE) +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()"},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"function takes sf object representing grid creates new sf object grid cell represented multilinestring geometry consisting diagonal -diagonal lines.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"","code":"add_diagonals_to_grid(sf_object = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"sf_object sf object (tibble) representing spatial grid. function expects object geometry column polygons representing grid cells. NULL, function stop error message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"sf object row corresponds grid cell input, represented multilinestring geometry diagonal -diagonal lines. returned object retains coordinate reference system (CRS) input.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"function requires sf, dplyr, purrr, tibble, tidyr packages installed loaded.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_diagonals_to_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a multilinestring sf object for the diagonal and off-diagonal lines for each grid cell — add_diagonals_to_grid","text":"","code":"ecokit::load_packages(package_list = c(\"dplyr\", \"sf\", \"raster\", \"ggplot2\"))  Grid <- raster::raster(nrows = 10, ncols = 10, xmn = 0, xmx = 10,                        ymn = 0, ymx = 10, crs = 4326) %>%   setNames(\"Grid\") %>%   raster::setValues(1) %>%   raster::rasterToPolygons() %>%   sf::st_as_sf()  ggplot2::ggplot() +   ggplot2::geom_sf(Grid, mapping = ggplot2::aes(), color = \"black\",                    linewidth = 0.5, fill = \"transparent\") +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()   Grid_X <- add_diagonals_to_grid(sf_object = Grid)  ggplot2::ggplot() +   ggplot2::geom_sf(Grid, mapping = ggplot2::aes(), color = \"black\",                    linewidth = 0.5, fill = \"transparent\") +   ggplot2::geom_sf(Grid_X, mapping = ggplot2::aes(), color = \"red\",                    linewidth = 0.5, inherit.aes = TRUE) +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()"},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an image to an existing plot in R — add_image_to_plot","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function allows user add image existing plot R specifying image object, position, size. function calculates necessary dimensions places image accordingly. function uses existing plot's coordinate system accounts current plot dimensions ensure accurate placement image. also allows interpolation, can improve visual quality image.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an image to an existing plot in R — add_image_to_plot","text":"","code":"add_image_to_plot(image_object, x, y, width, interpolate = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add an image to an existing plot in R — add_image_to_plot","text":"source code function taken stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an image to an existing plot in R — add_image_to_plot","text":"image_object image object added plot, expected array-like structure (e.g., read png::readPNG jpeg::readJPEG). x, y Numeric, x-coordinate y-coordinate (plot units) centre image placed. width Numeric, desired width image plot units (pixels inches). function calculate corresponding height preserve image's aspect ratio. interpolate Logical, whether apply linear interpolation image drawing. Defaults TRUE. Passed directly graphics::rasterImage. Interpolation can improve image quality may take longer render.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function return value modifies current plot adding image.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function stop error message required arguments (image_object, x, y, width) NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an image to an existing plot in R — add_image_to_plot","text":"","code":"library(png) URL <- paste0(\"https://upload.wikimedia.org/wikipedia/commons/\",     \"e/e1/Jupiter_%28transparent%29.png\") z <- tempfile() utils::download.file(URL, z, mode = \"wb\", quiet = TRUE) pic <- png::readPNG(z) file.remove(z) # cleanup #> [1] TRUE  image(volcano) add_image_to_plot(pic, x = 0.3, y = 0.5, width = 0.2) add_image_to_plot(pic, x = 0.7, y = 0.7, width = 0.2) add_image_to_plot(pic, x = 0.7, y = 0.2, width = 0.1)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a horizontal or vertical line to the current plot — add_line","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Add horizontal vertical line current plot","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a horizontal or vertical line to the current plot — add_line","text":"","code":"add_line(at = NULL, outer = FALSE, horizontal = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add a horizontal or vertical line to the current plot — add_line","text":"source code function taken stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Numeric; relative location line plotted. NULL. outer Logical; TRUE, line plotted outside plotting area. Default FALSE. horizontal Logical; TRUE (default), horizontal line added. FALSE, vertical line added. ... Additional graphical parameters passed graphics::abline.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Invisible; function called side effect drawing current plot.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a horizontal or vertical line to the current plot — add_line","text":"","code":"# Horizontal line par(oma = c(1, 1, 1, 1), mar = c(3, 3, 1, 1)) plot(seq_len(100)) add_line(at = 0.75) add_line(at = 0.25, outer = TRUE, lwd = 2) add_line(at = 0.5, outer = TRUE, lwd = 2, col = \"red\")   # ---------------------------------------------  # Vertical line plot(seq_len(100)) add_line(horizontal = FALSE, at = 0.75) add_line(horizontal = FALSE, at = 0.25, outer = TRUE, lwd = 2) add_line(horizontal = FALSE, at = 0.5, outer = TRUE, lwd = 2, col = \"red\")"},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add missing columns to a data frame with specified fill values — add_missing_columns","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"function checks data frame missing columns specified user. missing, adds columns data frame, filling specified value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"","code":"add_missing_columns(data, fill_value = NA_character_, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"data data frame missing columns added. parameter NULL. fill_value value fill missing columns . parameter defaults NA_character_, can changed scalar value required. ... Column names character strings.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"data frame missing columns added, missing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"","code":"mtcars2 <- dplyr::select(mtcars, seq_len(3)) %>%   head() %>%   tibble::as_tibble()  mtcars2 #> # A tibble: 6 × 3 #>     mpg   cyl  disp #>   <dbl> <dbl> <dbl> #> 1  21       6   160 #> 2  21       6   160 #> 3  22.8     4   108 #> 4  21.4     6   258 #> 5  18.7     8   360 #> 6  18.1     6   225  # -------------------------------------------  mtcars2 %>%  add_missing_columns(fill_value = NA_character_, A, B, C) %>%  add_missing_columns(fill_value = as.integer(10), D) #> # A tibble: 6 × 7 #>     mpg   cyl  disp A     B     C         D #>   <dbl> <dbl> <dbl> <chr> <chr> <chr> <int> #> 1  21       6   160 NA    NA    NA       10 #> 2  21       6   160 NA    NA    NA       10 #> 3  22.8     4   108 NA    NA    NA       10 #> 4  21.4     6   258 NA    NA    NA       10 #> 5  18.7     8   360 NA    NA    NA       10 #> 6  18.1     6   225 NA    NA    NA       10  # -------------------------------------------  AddCols <- c(\"Add1\", \"Add2\") mtcars2 %>%  add_missing_columns(fill_value = NA_real_, AddCols) #> # A tibble: 6 × 5 #>     mpg   cyl  disp  Add1  Add2 #>   <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21       6   160    NA    NA #> 2  21       6   160    NA    NA #> 3  22.8     4   108    NA    NA #> 4  21.4     6   258    NA    NA #> 5  18.7     8   360    NA    NA #> 6  18.1     6   225    NA    NA"},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of objects in memory — all_objects_sizes","title":"Size of objects in memory — all_objects_sizes","text":"function calculates size objects global environment R using lobstr::obj_size prints summary objects greater specified size threshold. useful memory management identifying large objects workspace.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of objects in memory — all_objects_sizes","text":"","code":"all_objects_sizes(   greater_than = 0,   in_function = FALSE,   n_decimals = 2,   n_objects = Inf )"},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of objects in memory — all_objects_sizes","text":"greater_than Numeric. Size threshold MB. objects larger value shown. Default 0, means objects shown. greater_than must non-negative number. in_function Logical. controls scope function. indicates whether execution done inside outside function. Defaults FALSE show sizes objects global environment. set TRUE, sizes objects function returned. n_decimals Integer; representing number decimal places show size_mb column. Defaults 2. n_objects Number objects show. Defaults Inf meaning show available objects.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of objects in memory — all_objects_sizes","text":"function prints tibble containing variables' names, sizes MB, percentage total size variables. objects meet criteria, message printed instead. Output sorted descending order size objects. function also prints total size variables number objects examined.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Size of objects in memory — all_objects_sizes","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Size of objects in memory — all_objects_sizes","text":"","code":"AA1 <<- rep(seq_len(1000), 10000) AA2 <<- rep(seq_len(1000), 100)  # All objects in memory all_objects_sizes() #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object       object_class size_mb percent #>   <chr>        <chr>          <dbl>   <dbl> #> 1 AA1          integer        38.15   99.01 #> 2 AA2          integer         0.38    0.99 #> 3 .Random.seed integer         0       0    #> --------------------------------------------------- #> object sizes are in MB. #> --------------------------------------------------- #>   # Objects larger than 1 MB all_objects_sizes(greater_than = 1) #> --------------------------------------------------- #> \t1 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 1 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 AA1    integer        38.15   99.01 #> --------------------------------------------------- #> object sizes are in MB. #> --------------------------------------------------- #>   # Objects larger than 50 MB all_objects_sizes(greater_than = 50) #> No object has Size > 50 MB #>   # When called with another function, it shows the objects only available # within the function TestFun <- function(XX = 10) {   Y <- 20   C <- matrix(data = seq_len(10000), nrow = 100, ncol = 100)   all_objects_sizes(in_function = TRUE) }  TestFun() #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 C      matrix_array    0.04     100 #> 2 XX     numeric         0          0 #> 3 Y      numeric         0          0 #> --------------------------------------------------- #> object sizes are in MB. #> --------------------------------------------------- #>   TestFun(XX = \"TEST\") #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 C      matrix_array    0.04     100 #> 2 XX     character       0          0 #> 3 Y      numeric         0          0 #> --------------------------------------------------- #> object sizes are in MB. #> --------------------------------------------------- #>"},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function over a list or vector with optional silence — apply_functions","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"Wrapper functions around base base::lapply base::sapply functions allow application function list vector. extends original functions providing option suppress output, effectively allowing operations user may care return value (e.g., plotting). behaviour similar purrr::walk function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"","code":"lapply_(X, FUN, Silent = TRUE, ...)  sapply_(X, FUN, simplify = TRUE, Silent = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"X vector (atomic list) expression     object.  objects (including classed objects) coerced     base::.list. FUN function applied element X:     see ‘Details’.  case functions like     +, %*%, function name must backquoted quoted. Silent Logical; TRUE, function returns invisible(NULL) instead actual result, effectively suppressing output. enhances base base::sapply cases return value necessary output undesired. ... Additional arguments passed FUN. simplify logical character string; result     simplified vector, matrix higher dimensional array     possible?  sapply must named abbreviated.     default value, TRUE, returns vector matrix appropriate,     whereas simplify = \"array\" result may     array “rank”     (\\(=\\)length(dim(.))) one higher result     FUN(X[[]]).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"Silent TRUE, returns NULL invisibly, otherwise returns list length X, element result applying FUN corresponding element X.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"","code":"par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) lapply(list(x = 100:110, y = 110:120), function(V) {     plot(V, las = 1, main = \"lapply\") })  #> $x #> NULL #>  #> $y #> NULL #>   # -------------------------------------------  par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) lapply_(list(x = 100:110, y = 110:120), function(V) {     plot(V, las = 1, main = \"lapply_\") })   # -------------------------------------------  #' par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) sapply(     list(x = 100:110, y = 110:120),     function(V) {         plot(V, las = 1, main = \"sapply\")         })  #> $x #> NULL #>  #> $y #> NULL #>   # -------------------------------------------  # nothing returned or printed, only the plotting par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) sapply_(   list(x = 100:110, y = 110:120),   function(V) {     plot(V, las = 1, main = \"sapply_\")     })"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign environment variables from a .env file — assign_env_vars","title":"Assign environment variables from a .env file — assign_env_vars","text":"function reads environment variables specified .env file assigns variables R environment based data frame containing variable names, values, checks directories files. designed facilitate management environment variables structured reproducible manner.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign environment variables from a .env file — assign_env_vars","text":"","code":"assign_env_vars(env_file = \".env\", env_variables_data = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign environment variables from a .env file — assign_env_vars","text":"env_file Character. Path environment file containing paths data sources. Defaults .env. env_variables_data data.frame. data frame tibble containing columns var_name, value, check_dir, check_file. row specifies environment variable, name assign , whether check directory file. structure allows additional validation checks variables imported.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign environment variables from a .env file — assign_env_vars","text":"function used side effects setting environment variables R environment. assigns variable .env file R environment name specified env_variables_data data frame.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign environment variables from a .env file — assign_env_vars","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"function checks given variable exists specified environment (global environment default). variable exist, assigns given value . variable already exists, prints current value variable. function designed prevent overwriting existing variables unintentionally.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"","code":"assign_if_not_exist(variable, value, environment = globalenv())"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"variable Character; name variable checked potentially assigned value. value ; value assigned variable already exist. environment environment; environment check existence variable potentially assign value. Defaults global environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"function explicitly returns NULL, primary effect side-effect assigning value variable environment printing current value existing variable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"","code":"assign_if_not_exist(variable = \"x\", value = TRUE) print(x) #> [1] TRUE  # --------------------------------------------------  y <- 10 # y exists and thus its value was not changed assign_if_not_exist(variable = \"y\", value = TRUE) print(y) #> [1] 10"},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read command line arguments passed to an R script — bash_variables","title":"Read command line arguments passed to an R script — bash_variables","text":"function reads command line arguments passed R script executed via bash command line assigns global environment R session. allows dynamic passing variables bash script R script.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read command line arguments passed to an R script — bash_variables","text":"","code":"bash_variables()"},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read command line arguments passed to an R script — bash_variables","text":"function return anything side effect assigning variables global environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read command line arguments passed to an R script — bash_variables","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"function constructs Well-Known Text (WKT) string representing polygon outlines specified boundaries. used define area interest downloading GBIF data rgbif::pred_within() function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"","code":"boundary_to_WKT(left = NULL, right = NULL, bottom = NULL, top = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"left, right, bottom, top Numeric, left, right, bottom, top boundary area.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"character string representing WKT polygon outlines specified boundaries.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the boundaries of the requested GBIF data — boundary_to_WKT","text":"","code":"ecokit::boundary_to_WKT(left = 20, right = 30, bottom = 40, top = 50) #> [1] \"POLYGON((20 40,30 40,30 50,20 50,20 40))\""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Print time difference — cat_diff","title":"Print time difference — cat_diff","text":"function calculates time difference given initial time current time prints specified prefix. Optionally, can also print session summary.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print time difference — cat_diff","text":"","code":"cat_diff(   init_time,   chunk_text = \"Session summary\",   prefix = \"Completed in \",   cat_info = FALSE,   level = 0L,   cat_timestamp = FALSE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print time difference — cat_diff","text":"init_time POSIXct. initial time difference calculated. chunk_text Character. message printed chunk info. Default value: Session summary. See: info_chunk information. prefix Character. prefix prepend printed time difference. Defaults \"Completed \". cat_info Logical. TRUE, prints session summary using info_chunk (\"Session summary\"). Defaults FALSE. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. cat_timestamp logical; whether include time timestamp. Default TRUE. FALSE, text printed. ... Additional arguments cat_time.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print time difference — cat_diff","text":"function used side effect printing console return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print time difference — cat_diff","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print time difference — cat_diff","text":"","code":"reference_time <- (lubridate::now() - lubridate::seconds(45)) cat_diff(reference_time) #> Completed in 00:00:45  reference_time <- (lubridate::now() -     (lubridate::minutes(50) + lubridate::seconds(45))) cat_diff(reference_time) #> Completed in 00:50:45  reference_time <- (lubridate::now() - lubridate::minutes(50)) cat_diff(reference_time) #> Completed in 00:50:00  reference_time <- (lubridate::now() - lubridate::minutes(70)) cat_diff(reference_time) #> Completed in 01:10:00  reference_time <- (lubridate::now() - lubridate::hours(4)) cat_diff(reference_time) #> Completed in 04:00:00  reference_time <- lubridate::now() -   (lubridate::hours(4) + lubridate::minutes(50) + lubridate::seconds(45)) cat_diff(reference_time) #> Completed in 04:50:45"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Print separator(s) to the console — cat_sep","title":"Print separator(s) to the console — cat_sep","text":"function prints customizable separator lines console, optionally preceded followed empty lines. useful improving readability console output R scripts interactive sessions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print separator(s) to the console — cat_sep","text":"","code":"cat_sep(   n_separators = 1L,   sep_lines_before = 0L,   sep_lines_after = 1L,   line_char = \"-\",   line_char_rep = 50L,   cat_bold = FALSE,   cat_red = FALSE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print separator(s) to the console — cat_sep","text":"n_separators integer; number separator lines print. Default 1. sep_lines_before, sep_lines_after integer; number extra empty lines print separator lines. Default 0 1, respectively. line_char character; character used construct separator line. Default \"-\". line_char_rep integer; number times character repeated form separator line. Default 50. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. ... additional arguments passed base::cat().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print separator(s) to the console — cat_sep","text":"function called side effect (printing console) return meaningful value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print separator(s) to the console — cat_sep","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print separator(s) to the console — cat_sep","text":"","code":"cat_sep() #> --------------------------------------------------  cat_sep(2) #> -------------------------------------------------- #> --------------------------------------------------  cat_sep(2,2,3) #>  #>  #> -------------------------------------------------- #> -------------------------------------------------- #>  #>   cat_sep(2,2,3, line_char = \"*\") #>  #>  #> ************************************************** #> ************************************************** #>  #>   cat_sep(2,2,3, line_char = \"*\", line_char_rep = 20) #>  #>  #> ******************** #> ******************** #>  #>"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Print text with time stamp — cat_time","title":"Print text with time stamp — cat_time","text":"function prints given text followed current time (optionally date) console. allows customization time zone, inclusion date, number newline characters print message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print text with time stamp — cat_time","text":"","code":"cat_time(   text = \"\",   msg_n_lines = 1L,   cat_timestamp = TRUE,   cat_bold = FALSE,   cat_red = FALSE,   cat_date = FALSE,   time_zone = \"CET\",   level = 0L,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print text with time stamp — cat_time","text":"text character; text print timestamp. empty (default), timestamp printed. msg_n_lines integer; number newline characters print message. Default 1. cat_timestamp logical; whether include time timestamp. Default TRUE. FALSE, text printed. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. cat_date logical; whether include date timestamp. effective time TRUE. Default FALSE, meaning time printed. TRUE, date printed format \"%d/%m/%Y %X\". time_zone character; time zone use timestamp. Default CET. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. ... additional arguments passed cat.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print text with time stamp — cat_time","text":"function called side effect printing console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print text with time stamp — cat_time","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print text with time stamp — cat_time","text":"","code":"cat_time() #> 01:08:05  cat_time(cat_date = TRUE) #> 05/05/2025 01:08:05  cat_time(\"time now\") #> time now - 01:08:05  cat_time(\"\\n\\nTime now\", msg_n_lines = 2L, level = 1L) #>  #>  #>   >>>  Time now - 01:08:05 #>    cat_time(   \"\\ntime now\", cat_date = TRUE, cat_bold = TRUE, cat_red = TRUE,   msg_n_lines = 2L, level = 1L) #>  #>   >>>  time now - 05/05/2025 01:08:05 #>    # The use of levels {   cat_time(\"Task 1\")   cat_time(\"subtask L1\", level = 1L)   cat_time(\"subtask L2\", level = 2L)   cat_time(\"subtask L3\", level = 3L) } #> Task 1 - 01:08:05 #>   >>>  subtask L1 - 01:08:05 #>   >>>  >>>  subtask L2 - 01:08:05 #>   >>>  >>>  >>>  subtask L3 - 01:08:05"},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate without quotes — cc","title":"Concatenate without quotes — cc","text":"function takes one expressions concatenates single string without quotes. particularly useful creating strings variable names expressions without including usual quotes.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate without quotes — cc","text":"","code":"cc(...)"},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate without quotes — cc","text":"... strings concatenated. Note numeric values converted strings passed.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate without quotes — cc","text":"character string representing concatenated values input expressions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concatenate without quotes — cc","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate without quotes — cc","text":"","code":"cc(A, B, C) #> [1] \"A\" \"B\" \"C\"  # -------------------------------------------  cc(A, B, \"A and B\") #> [1] \"A\"       \"B\"       \"A and B\"  # -------------------------------------------  # this does not work try(cc(A, B, \"A and B\", 10)) #> Error in sym(expr) : Can't convert a double vector to a symbol.  # this works cc(A, B, \"A and B\", \"10\") #> [1] \"A\"       \"B\"       \"A and B\" \"10\""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the installed RStudio version is up to date — check_RStudio","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"function checks current installed version RStudio latest version available online. versions match, suggests updating RStudio.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"","code":"check_RStudio()"},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"Side effects include printing messages console regarding status RStudio version.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"function requires internet access check latest version RStudio online. called outside RStudio, fetch display latest version without comparing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the installed RStudio version is up to date — check_RStudio","text":"","code":"try(check_RStudio()) #> This function was not called from RStudio. No version comparison was done. The most recent version of RStudio is 2024.12.1.563"},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a URL — check_URL","title":"Check the validity of a URL — check_URL","text":"function opens connection specified URL check validity. returns TRUE URL valid (.e., connection can opened), FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a URL — check_URL","text":"","code":"check_URL(URL, timeout = 2)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Check the validity of a URL — check_URL","text":"source code function taken stackoverflow discussion.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a URL — check_URL","text":"URL Character. URL checked. timeout Numeric. Timeout seconds connection attempt. Default 2 seconds.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a URL — check_URL","text":"logical value: TRUE URL valid, FALSE .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a URL — check_URL","text":"","code":"urls <- c(      \"http://www.amazon.com\", \"http://this.isafakelink.biz\",      \"https://stackoverflow.com\", \"https://stack-overflow.com\") sapply(urls, check_URL) #>       http://www.amazon.com http://this.isafakelink.biz  #>                        TRUE                       FALSE  #>   https://stackoverflow.com  https://stack-overflow.com  #>                        TRUE                       FALSE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check function arguments for specific types — check_args","title":"Check function arguments for specific types — check_args","text":"function checks specified arguments function match expected type. useful validating function inputs.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check function arguments for specific types — check_args","text":"","code":"check_args(args_all, args_to_check, args_type)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check function arguments for specific types — check_args","text":"args_all Character vector. Input parameters function. Usually result formals() function args_to_check Character vector. Names arguments checked. args_type Character. expected type arguments. Must one \"character\", \"logical\", \"numeric\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check function arguments for specific types — check_args","text":"function return value stop execution throw error specified arguments match expected type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check function arguments for specific types — check_args","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of RData / qs2 / rds / feather files — check_data","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"functions validate given file checking extension attempting load contents. file considered valid loads successfully contains non-null object, returning TRUE. Otherwise, returns FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"","code":"check_data(file, warning = TRUE, n_threads = 5)  check_RData(file, warning = TRUE)  check_qs(file, warning = TRUE, n_threads = 5)  check_rds(file, warning = TRUE)  check_feather(file, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"file Character. path file checked. empty. warning Logical. TRUE (default), warnings printed file exist. n_threads Integer. number threads use reading qs2 files. Default 5.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"Logical. TRUE file valid, otherwise FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"check_data() function determines file type based extension. extension unrecognised, returns FALSE. Supported file types: RData: Checked check_RData(), read using load_as qs2: Checked check_qs(), read using qs2::qs_read rds: Checked check_rds(), read using readRDS feather: Checked check_feather(), read using arrow::read_feather","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the integrity of RData / qs2 / rds / feather files — check_data","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the installed Quarto version is up to date — check_quarto","title":"Check if the installed Quarto version is up to date — check_quarto","text":"function compares installed Quarto version user's system latest version available online. versions differ, suggests user update Quarto. uses web scraping find latest version available Quarto GitHub releases page system command find installed version.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the installed Quarto version is up to date — check_quarto","text":"","code":"check_quarto(pre_release = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the installed Quarto version is up to date — check_quarto","text":"pre_release Logical. Whether check pre-release versions. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the installed Quarto version is up to date — check_quarto","text":"message indicating whether installed Quarto version date suggesting update .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the installed Quarto version is up to date — check_quarto","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the installed Quarto version is up to date — check_quarto","text":"","code":"check_quarto() #> Quarto is not available in the system. #> Latest quarto version is v1.7.29 [installed: NA] #>"},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a raster stack reads from disk or memory — check_stack_in_memory","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"function checks whether layers RasterStack object stored memory read disk.  prints messages indicating whether layers memory, layers disk, mix . mix, specifies layers disk.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"","code":"check_stack_in_memory(stack = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"stack RasterStack object. NULL RasterStack, function stop error.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"return value, prints messages console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"","code":"library(raster) logo <- raster(system.file(\"external/rlogo.grd\", package = \"raster\")) logo@data@inmemory #> [1] FALSE logo@data@fromdisk #> [1] TRUE logo@file@name #> [1] \"/home/runner/work/_temp/Library/raster/external/rlogo.grd\"  # -------------------------------------------  # A raster stack reading from files ST2 <- raster::stack(logo, logo) check_stack_in_memory(ST2) #> All stack layers reads from memory c(ST2[[1]]@data@inmemory, ST2[[2]]@data@inmemory) #> [1] FALSE FALSE c(ST2[[1]]@data@fromdisk, ST2[[2]]@data@fromdisk) #> [1] TRUE TRUE c(ST2[[1]]@file@name, ST2[[2]]@file@name) #> [1] \"/home/runner/work/_temp/Library/raster/external/rlogo.grd\" #> [2] \"/home/runner/work/_temp/Library/raster/external/rlogo.grd\"  # -------------------------------------------  logo2 <- raster::readAll(logo) ST3 <- raster::stack(logo, logo2) check_stack_in_memory(ST3) #> [1] \"Layers numbered (1) reads from disk\" c(ST3[[1]]@data@inmemory, ST3[[2]]@data@inmemory) #> [1] FALSE  TRUE c(ST3[[1]]@data@fromdisk, ST3[[2]]@data@fromdisk) #> [1]  TRUE FALSE c(ST3[[1]]@file@name, ST3[[2]]@file@name) #> [1] \"/home/runner/work/_temp/Library/raster/external/rlogo.grd\" #> [2] \"\""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Check system commands availability — check_system_command","title":"Check system commands availability — check_system_command","text":"function checks list system commands available user's PATH. commands missing, stops execution returns informative error message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check system commands availability — check_system_command","text":"","code":"check_system_command(commands, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check system commands availability — check_system_command","text":"commands character vector system command names check (e.g., c(\"git\", \"Rscript\", \"unzip\")). warning Logical. Whether issue warning command missing. Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check system commands availability — check_system_command","text":"function returns TRUE specified commands available system, FALSE available.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check system commands availability — check_system_command","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check system commands availability — check_system_command","text":"","code":"check_system_command(c(\"unzip\", \"head\", \"curl\", \"missing\")) #> Warning: The following tool(s) are missing: missing #> [1] FALSE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a tiff file corrupted — check_tiff","title":"Check if a tiff file corrupted — check_tiff","text":"function checks provided tiff file corrupted attempting describe using terra package searching presence \"Driver\" string description, indicates valid tiff file. string found, function returns TRUE FALSE otherwise. function works also reading netCDF files terra package.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a tiff file corrupted — check_tiff","text":"","code":"check_tiff(x = NULL, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a tiff file corrupted — check_tiff","text":"x Character; file path tiff file checked. function stop error x NULL file exist. warning Logical. TRUE, function issue warning file exist.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a tiff file corrupted — check_tiff","text":"Logical; returns TRUE tiff file corrupted (.e., can described contains \"Driver\" description), FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a tiff file corrupted — check_tiff","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a tiff file corrupted — check_tiff","text":"","code":"(f <- system.file(\"ex/elev.tif\", package=\"terra\")) #> [1] \"/home/runner/work/_temp/Library/terra/ex/elev.tif\"  check_tiff(x = f) #> [1] TRUE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the Integrity of a ZIP file — check_zip","title":"Check the Integrity of a ZIP file — check_zip","text":"Tests integrity ZIP file using unzip -t command. Verifies file exists, non-empty, detectable errors compressed data. Returns FALSE message file invalid unzip unavailable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the Integrity of a ZIP file — check_zip","text":"","code":"check_zip(file)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the Integrity of a ZIP file — check_zip","text":"file Character. path ZIP file check. Must single, non-empty string.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the Integrity of a ZIP file — check_zip","text":"Logical: TRUE file exists, non-empty, passes integrity check; FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the Integrity of a ZIP file — check_zip","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the console — clear_console","title":"Clear the console — clear_console","text":"function clears console RStudio sending form feed character. run RStudio, prints message indicating function supported.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the console — clear_console","text":"","code":"clear_console()"},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear the console — clear_console","text":"invisible NULL indicate function completed without returning meaningful value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clear the console — clear_console","text":"function checks run RStudio examining RSTUDIO environment variable. function run RStudio, clear console instead print message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear the console — clear_console","text":"","code":"clear_console() #> This function does not work outside of RStudio."},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"function clips raster layer using specified spatial polygon, effectively masking raster outside polygon area. resulting clipped raster retains original raster's properties values within polygon's bounds.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"","code":"clip_raster_by_polygon(raster = NULL, shape = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"raster RasterLayer object clipped. raster layer masked polygon. shape Extent object, object Extent object can extracted.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"RasterLayer object representing portion input raster falls within specified polygon. returned raster contains data original within polygon's bounds masked (set NA) outside .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"function requires 'raster' 'sp' packages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"","code":"library(sp) library(raster) library(rworldmap) #> ### Welcome to rworldmap ### #> For a short introduction type : \t vignette('rworldmap')  # Example Polygon SPDF <- getMap(resolution = \"low\") %>%    subset(NAME == \"Germany\")  # Example RasterLayer r <- raster::raster(nrow = 1e3, ncol = 1e3, crs = proj4string(SPDF)) r[] <- seq_len(length(r)) plot(r) plot(SPDF, add = TRUE)   # ----------------------------------  SPDF_DE <- clip_raster_by_polygon(r, SPDF) plot(raster::extent(SPDF_DE), axes = FALSE, xlab = \"\", ylab = \"\") plot(SPDF_DE, add = TRUE) plot(SPDF, add = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect aliased variables in a linear model — detect_alias","title":"Detect aliased variables in a linear model — detect_alias","text":"function identifies aliased (linearly dependent) variables linear model adding constant column data frame, fitting linear model, using alias function detect aliased variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect aliased variables in a linear model — detect_alias","text":"","code":"detect_alias(data, verbose = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect aliased variables in a linear model — detect_alias","text":"data data frame tibble containing variables checked aliasing. verbose Logical. Whether print aliased variables found (). TRUE, aliased variables printed console. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect aliased variables in a linear model — detect_alias","text":"Returns character vector aliased variable names found; otherwise, returns NULL invisibly. verbose TRUE, function also print message console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect aliased variables in a linear model — detect_alias","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect aliased variables in a linear model — detect_alias","text":"","code":"library(\"car\", warn.conflicts = FALSE, quietly = TRUE, verbose = FALSE) x1 <- rnorm(100) x2 <- 2 * x1 x3 <- rnorm(100) y <- rnorm(100)  model <- lm(y ~ x1 + x2 + x3) summary(model) #>  #> Call: #> lm(formula = y ~ x1 + x2 + x3) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.02755 -0.70035 -0.03393  0.72138  2.50283  #>  #> Coefficients: (1 not defined because of singularities) #>             Estimate Std. Error t value Pr(>|t|)   #> (Intercept) -0.06616    0.10346  -0.639   0.5240   #> x1           0.10764    0.09810   1.097   0.2753   #> x2                NA         NA      NA       NA   #> x3           0.24804    0.10164   2.440   0.0165 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.025 on 97 degrees of freedom #> Multiple R-squared:  0.06749,\tAdjusted R-squared:  0.04826  #> F-statistic:  3.51 on 2 and 97 DF,  p-value: 0.03375 #>   # there are aliased coefficients in the model try(car::vif(model)) #> Error in vif.default(model) : there are aliased coefficients in the model  # The function identifies the aliased variables detect_alias(data = cbind.data.frame(x1, x2, x3)) #> [1] \"x2\"  detect_alias(data = cbind.data.frame(x1, x2, x3), verbose = TRUE) #> aliased variables: x2 #> [1] \"x2\"  # excluding x2 and refit the model model <- lm(y ~ x1 + x3)  summary(model) #>  #> Call: #> lm(formula = y ~ x1 + x3) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.02755 -0.70035 -0.03393  0.72138  2.50283  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)   #> (Intercept) -0.06616    0.10346  -0.639   0.5240   #> x1           0.10764    0.09810   1.097   0.2753   #> x3           0.24804    0.10164   2.440   0.0165 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.025 on 97 degrees of freedom #> Multiple R-squared:  0.06749,\tAdjusted R-squared:  0.04826  #> F-statistic:  3.51 on 2 and 97 DF,  p-value: 0.03375 #>   try(car::vif(model)) #>       x1       x3  #> 1.000718 1.000718"},{"path":"https://elgabbas.github.io/ecokit/reference/ecokit-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ecokit: Tools for Ecological and General Utilities — ecokit-package","title":"ecokit: Tools for Ecological and General Utilities — ecokit-package","text":"collection utility functions designed ecologists general R users, providing tools data manipulation, statistical analysis, spatial data handling.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/ecokit-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ecokit: Tools for Ecological and General Utilities — ecokit-package","text":"Maintainer: Ahmed El-Gabbas elgabbas@outlook.com","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the file extension from a file path — file_extension","title":"Get the file extension from a file path — file_extension","text":"function extracts file extension given file path. first checks input NULL character string. conditions met, uses tools::file_ext function extract return file extension. function check existence file explicitly get file type content. merely guess file extension file name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the file extension from a file path — file_extension","text":"","code":"file_extension(path)"},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the file extension from a file path — file_extension","text":"path character string representing file path file extension extracted. must NULL character string.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the file extension from a file path — file_extension","text":"character string representing file extension given file path. path extension, empty string returned.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the file extension from a file path — file_extension","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the file extension from a file path — file_extension","text":"","code":"file_extension(path = \"File.doc\") #> [1] \"doc\"  file_extension(path = \"D:/File.doc\") #> [1] \"doc\"  file_extension(path = \"File.1.doc\") #> [1] \"doc\"  file_extension(path = \"D:/Files.All\") #> [1] \"All\"  file_extension(path = \"D:/Files.All/\") #> [1] \"\"  file_extension(\"example.txt\") # returns \"txt\" #> [1] \"txt\"  file_extension(\"archive.tar.gz\") # returns \"gz\" #> [1] \"gz\""},{"path":"https://elgabbas.github.io/ecokit/reference/file_size.html","id":null,"dir":"Reference","previous_headings":"","what":"File size in a human-readable format — file_size","title":"File size in a human-readable format — file_size","text":"function takes path file returns size format easy read (e.g., KB, MB, GB), using gdata::humanReadable function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File size in a human-readable format — file_size","text":"","code":"file_size(file, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/file_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File size in a human-readable format — file_size","text":"file character; path file whose size want check. ... additional arguments passed gdata::humanReadable function, allowing customization output format.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File size in a human-readable format — file_size","text":"character string representing size file human-readable format.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File size in a human-readable format — file_size","text":"","code":"(f <- system.file(\"ex/elev.tif\", package=\"terra\")) #> [1] \"/home/runner/work/_temp/Library/terra/ex/elev.tif\"  file_size(file = f) #> [1] \"7.8 KiB\""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the file type of a given file path — file_type","title":"Determine the file type of a given file path — file_type","text":"function uses system's file command determine type file specified path parameter. returns character string describing file type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the file type of a given file path — file_type","text":"","code":"file_type(path)"},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the file type of a given file path — file_type","text":"path Character. path file whose type determined. path must NULL, file must exist.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the file type of a given file path — file_type","text":"character string describing file type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Determine the file type of a given file path — file_type","text":"function relies system's file command therefore might produce different outputs different platforms.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the file type of a given file path — file_type","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the file type of a given file path — file_type","text":"","code":"(f <- system.file(\"ex/elev.tif\", package=\"terra\")) #> [1] \"/home/runner/work/_temp/Library/terra/ex/elev.tif\"  file_type(path = f) #> [1] \"TIFF image data, little-endian, direntries=19, height=90, bps=16, compression=LZW, PhotometricInterpretation=BlackIsZero, width=95\""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function Arguments — function_arguments","title":"Print function Arguments — function_arguments","text":"function takes another function input prints arguments format ArgumentName = DefaultValue. argument printed new line. function can optionally assign formatted arguments global environment can load specified package processing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function Arguments — function_arguments","text":"","code":"function_arguments(function_name, assign = FALSE, package = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function Arguments — function_arguments","text":"function_name function whose arguments want print. Must valid R function. assign Logical. Whether assign arguments variables global environment. Defaults FALSE. package Character. Name R package loaded processing function. Default NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function Arguments — function_arguments","text":"function prints formatted arguments console. assign TRUE, also assigns arguments global environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print function Arguments — function_arguments","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print function Arguments — function_arguments","text":"","code":"formals(stats::setNames) #> $object #> nm #>  #> $nm #>  #>  function_arguments(stats::setNames) #> object = NULL #> nm = NULL"},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode of a numeric vector — get_mode","title":"Calculate the mode of a numeric vector — get_mode","text":"function calculates mode given numeric vector.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode of a numeric vector — get_mode","text":"","code":"get_mode(x)"},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Calculate the mode of a numeric vector — get_mode","text":"source function taken link.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode of a numeric vector — get_mode","text":"x Numeric vector. must NULL empty.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode of a numeric vector — get_mode","text":"mode vector single value. vector uniform distribution (values appear frequency), function returns first value encountered.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode of a numeric vector — get_mode","text":"","code":"get_mode(c(seq_len(10), 1, 1, 3, 3, 3, 3)) #> [1] 3  get_mode(c(1, 2, 2, 3, 4)) #> [1] 2  get_mode(c(1, 1, 2, 3, 3)) #> [1] 1"},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"function checks specified directory Git repository , , executes git log command either print log console return . supports execution Windows Linux operating systems provides visually appealing graph format log, showing commit hash, references, commit message, relative commit date, author name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"","code":"git_log(path = \".\", n_commits = NULL, return_log = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"path Character. Path directory check. Defaults current working directory \".\". path exist, function stop throw error. path git repository, function throw warning. n_commits Integer. Number recent commits display. NULL (default), complete log shown. n_commits NULL positive number, function stop throw error. parameter ignored return_log TRUE. return_log Logical. Whether return log (TRUE) print console (FALSE, default). TRUE, function returns character vector containing log lines.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"return_log TRUE, returns character vector containing git log lines. return_log FALSE, function called side effect printing console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"function stop throw error specified path exist, operating system supported, directory Git repository, Git installed, n_commits parameter NULL positive number.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print or return a detailed git log of the git repository located in the specified directory. — git_log","text":"","code":"# Show the most recent commit git_log(n_commits = 1) #> Error in value[[3L]](cond): Failed to retrieve Git log. Ensure Git is installed and the directory is a valid Git repository. - 01:08:16 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             └─ecokit::git_log(n_commits = 1) #>  34.                               └─base::tryCatch(...) #>  35.                                 └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                                   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                                     └─value[[3L]](cond)  # Show the most recent 5 commits git_log(n_commits = 5) #> Error in value[[3L]](cond): Failed to retrieve Git log. Ensure Git is installed and the directory is a valid Git repository. - 01:08:16 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             └─ecokit::git_log(n_commits = 5) #>  34.                               └─base::tryCatch(...) #>  35.                                 └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                                   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                                     └─value[[3L]](cond)  # Return the log as a character vector Log <- git_log(return_log = TRUE) #> Error in value[[3L]](cond): Failed to retrieve Git log. Ensure Git is installed and the directory is a valid Git repository. - 01:08:16 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             └─ecokit::git_log(return_log = TRUE) #>  34.                               └─base::tryCatch(...) #>  35.                                 └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                                   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                                     └─value[[3L]](cond)  length(Log) #> Error: object 'Log' not found  head(Log, 8) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'head': object 'Log' not found  if (FALSE) { # \\dontrun{   # not a git repo   git_log(path = \"C:/\")   # #> Error: The provided path does not exist. } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":null,"dir":"Reference","previous_headings":"","what":"Print head and tail of data frame — ht","title":"Print head and tail of data frame — ht","text":"function takes data frame optional number rows print top (head) bottom (tail) data frame. useful quickly inspecting first last rows large data frame understand structure contents.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print head and tail of data frame — ht","text":"","code":"ht(data = NULL, n_rows = 5L)"},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print head and tail of data frame — ht","text":"data data.frame. data frame print. parameter NULL`. n_rows Integer. Number rows print head tail data frame. Defaults 5.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print head and tail of data frame — ht","text":"function used side effect (printing) return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print head and tail of data frame — ht","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print head and tail of data frame — ht","text":"","code":"ht(mtcars) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6 160.0   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6 160.0   110  3.90 2.875 17.02     0     1     4     4 #>  3:  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1 #>  4:  21.4     6 258.0   110  3.08 3.215 19.44     1     0     3     1 #>  5:  18.7     8 360.0   175  3.15 3.440 17.02     0     0     3     2 #> ---                                                                   #> 28:  30.4     4  95.1   113  3.77 1.513 16.90     1     1     5     2 #> 29:  15.8     8 351.0   264  4.22 3.170 14.50     0     1     5     4 #> 30:  19.7     6 145.0   175  3.62 2.770 15.50     0     1     5     6 #> 31:  15.0     8 301.0   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4 121.0   109  4.11 2.780 18.60     1     1     4     2  # -------------------------------------------  ht(data = mtcars, n_rows = 2) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6   160   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6   160   110  3.90 2.875 17.02     0     1     4     4 #> ---                                                                   #> 31:  15.0     8   301   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4   121   109  4.11 2.780 18.60     1     1     4     2  # -------------------------------------------  ht(data = mtcars, n_rows = 6) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6 160.0   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6 160.0   110  3.90 2.875 17.02     0     1     4     4 #>  3:  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1 #>  4:  21.4     6 258.0   110  3.08 3.215 19.44     1     0     3     1 #>  5:  18.7     8 360.0   175  3.15 3.440 17.02     0     0     3     2 #>  6:  18.1     6 225.0   105  2.76 3.460 20.22     1     0     3     1 #> ---                                                                   #> 27:  26.0     4 120.3    91  4.43 2.140 16.70     0     1     5     2 #> 28:  30.4     4  95.1   113  3.77 1.513 16.90     1     1     5     2 #> 29:  15.8     8 351.0   264  4.22 3.170 14.50     0     1     5     4 #> 30:  19.7     6 145.0   175  3.62 2.770 15.50     0     1     5     6 #> 31:  15.0     8 301.0   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4 121.0   109  4.11 2.780 18.60     1     1     4     2"},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Information chunk with time stamp — info_chunk","title":"Print Information chunk with time stamp — info_chunk","text":"function prints formatted message timestamp, surrounded separators better readability console outputs logs.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Information chunk with time stamp — info_chunk","text":"","code":"info_chunk(   message = \"\",   cat_date = TRUE,   sep_lines_before = 0L,   sep_lines_after = 1L,   cat_bold = FALSE,   cat_red = FALSE,   cat_timestamp = FALSE,   level = 0L,   msg_n_lines = 1L,   info_lines_before = 0L,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Information chunk with time stamp — info_chunk","text":"message Character. main message timestamped. parameter mandatory NULL empty. cat_date Logical. Whether include date timestamp. Default FALSE, meaning time printed. See cat_time. sep_lines_before, sep_lines_after Integer. Number extra empty lines print separator lines. See cat_sep details. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. cat_timestamp Logical. Whether include time timestamp. Default FALSE. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. msg_n_lines integer; number newline characters print message. Default 1. info_lines_before Integer. Number extra empty lines print message. Default 0L. ... Additional arguments passed cat_sep customizing separators.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Information chunk with time stamp — info_chunk","text":"function return value prints message separators console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Information chunk with time stamp — info_chunk","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Information chunk with time stamp — info_chunk","text":"","code":"info_chunk(message = \"Started\") #>  #> -------------------------------------------------- #> Started - 05/05/2025 #> -------------------------------------------------- #>   info_chunk(message = \"finished\", line_char = \"*\", line_char_rep = 60) #>  #> ************************************************************ #> finished - 05/05/2025 #> ************************************************************ #>   info_chunk(message = \"Started\", cat_bold =  TRUE, cat_red = TRUE) #>  #> -------------------------------------------------- #> Started - 05/05/2025 #> -------------------------------------------------- #>"},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Integer breaks for ggplot axis — integer_breaks","title":"Integer breaks for ggplot axis — integer_breaks","text":"function generates function calculates integer axis values ggplot, ensuring axis breaks integers. particularly useful creating cleaner, readable plots.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integer breaks for ggplot axis — integer_breaks","text":"","code":"integer_breaks(n_breaks = 5L, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integer breaks for ggplot axis — integer_breaks","text":"n_breaks integer (default: 5), desired number breaks axis. Note actual number breaks may slightly differ requested. ... additional arguments passed base::pretty.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integer breaks for ggplot axis — integer_breaks","text":"function takes numeric vector x returns vector integer breaks axis, names attribute set break labels.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integer breaks for ggplot axis — integer_breaks","text":"source function available link.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integer breaks for ggplot axis — integer_breaks","text":"","code":"ggplot2::ggplot(mtcars, ggplot2::aes(x = drat, y = hp)) +   ggplot2::geom_point() +   ggplot2::scale_x_continuous()   ggplot2::ggplot(mtcars, ggplot2::aes(x = drat, y = hp)) +   ggplot2::geom_point() +   ggplot2::scale_x_continuous(breaks = integer_breaks(5))"},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep only specified objects in the environment, removing all others. — keep_only","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"function selectively retains objects specified objects parameter current environment, removing objects. useful memory management clearing unnecessary objects environment. function also provides option print names kept removed variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"","code":"keep_only(objects, verbose = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"objects Character vector. Names objects kept environment. verbose Logical. Whether print names kept removed variables. Default TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"return value, called side effects.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"","code":"A <- B <- C <- 15 ls() #> [1] \"A\" \"B\" \"C\"  keep_only(\"A\") #> Removed Variables (2): 1:B ||  2:C #> Kept Variables (1): 1:A  ls() #> [1] \"A\" rm(list = ls())   A <- B <- C <- 15 keep_only(c(\"A\",\"B\")) #> Removed Variables (1): 1:C #> Kept Variables (2): 1:A ||  2:B ls() #> [1] \"A\" \"B\""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":null,"dir":"Reference","previous_headings":"","what":"Split list items into separate .RData files — list_to_RData","title":"Split list items into separate .RData files — list_to_RData","text":"function takes named list saves element list separate .RData file. names list elements used base filenames, optionally prefixed. Files saved specified directory, option overwrite existing files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split list items into separate .RData files — list_to_RData","text":"","code":"list_to_RData(list, prefix = \"\", directory = getwd(), overwrite = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split list items into separate .RData files — list_to_RData","text":"list named list object split separate .RData files. prefix Character. prefix filename. empty (default), prefix added. directory directory .RData files saved. Defaults current working directory. overwrite logical indicating whether overwrite existing files. Defaults FALSE, case files already exist overwritten, message printed file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split list items into separate .RData files — list_to_RData","text":"function called side effect saving files return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split list items into separate .RData files — list_to_RData","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split list items into separate .RData files — list_to_RData","text":"","code":"# split iris data by species name iris2 <- iris %>%   tibble::tibble() %>%   split(~Species)  str(iris2, 1) #> List of 3 #>  $ setosa    : tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ versicolor: tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ virginica : tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  (TMP_Folder <- ecokit::path(tempdir(), stringi::stri_rand_strings(1, 5))) #> [1] \"/tmp/RtmpxtlOa9/Me8gr\" list.files(TMP_Folder) #> character(0)  list_to_RData(list = iris2, directory = TMP_Folder) list.files(TMP_Folder) #> [1] \"setosa.RData\"     \"versicolor.RData\" \"virginica.RData\""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Load objects from RData / qs2 / rds / feather file — load_as","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"function loads RData file specified file parameter. RData file contains single object, object returned directly. file contains multiple objects, returned list object accessible name. allows flexible handling loaded data without needing know names objects stored within RData file ahead time. function also supports loading feather, qs2 rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"","code":"load_as(file = NULL, n_threads = 5, timeout = 300, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"file Character. file path URL file loaded. file URL, function download file URL temporary file load . n_threads Number threads use reading qs2 files. Default 5; see qs2::qs_read. timeout integer; time seconds download times . Default 300 seconds; see download.file. ... Additional arguments passed respective load functions. base::load RData files; qs2::qs_read qs2 files; arrow::read_feather feather files; base::readRDS rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"Depending contents RData file, function returns either single R object named list R objects. names list elements (list returned) correspond names objects stored within RData file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"","code":"file <- system.file(\"testdata\", \"culcita_dat.RData\", package = \"lme4\")  # --------------------------------------------------------- # loading RData using base library # --------------------------------------------------------- (load(file)) #> [1] \"culcita_dat\"  ls() #> [1] \"culcita_dat\" \"file\"         tibble::tibble(culcita_dat) #> # A tibble: 80 × 3 #>    block predation ttt   #>    <fct>     <dbl> <fct> #>  1 1             0 none  #>  2 1             1 none  #>  3 2             1 none  #>  4 2             1 none  #>  5 3             1 none  #>  6 3             1 none  #>  7 4             1 none  #>  8 4             1 none  #>  9 5             1 none  #> 10 5             1 none  #> # ℹ 70 more rows  # --------------------------------------------------------- # Loading as custom object name # --------------------------------------------------------- NewObj <- load_as(file = file)  ls() #> [1] \"NewObj\"      \"culcita_dat\" \"file\"         print(tibble::tibble(NewObj)) #> # A tibble: 80 × 3 #>    block predation ttt   #>    <fct>     <dbl> <fct> #>  1 1             0 none  #>  2 1             1 none  #>  3 2             1 none  #>  4 2             1 none  #>  5 3             1 none  #>  6 3             1 none  #>  7 4             1 none  #>  8 4             1 none  #>  9 5             1 none  #> 10 5             1 none  #> # ℹ 70 more rows  # --------------------------------------------------------- # Loading multiple objects stored in single RData file # --------------------------------------------------------- # store three objects to single RData file mtcars2 <- mtcars3 <- mtcars TempFile <- tempfile(pattern = \"mtcars_\", fileext = \".RData\")  save(mtcars2, mtcars3, mtcars, file = TempFile) mtcars_all <- load_as(TempFile)  # overwrite the file with different order of objects save(mtcars, mtcars2, mtcars3, file = TempFile) mtcars_all2 <- load_as(TempFile)  # single list object with 3 items, keeping original object names and order names(mtcars_all) #> [1] \"mtcars2\" \"mtcars3\" \"mtcars\"  names(mtcars_all2) #> [1] \"mtcars\"  \"mtcars2\" \"mtcars3\""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Load multiple .RData files together — load_multiple","title":"Load multiple .RData files together — load_multiple","text":"function loads multiple .RData files either single list object directly global environment. provides options verbosity, returning object names, handling non-existent files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load multiple .RData files together — load_multiple","text":"","code":"load_multiple(   files = NULL,   verbose = TRUE,   single_object = TRUE,   return_names = TRUE )"},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load multiple .RData files together — load_multiple","text":"files Character vector. paths .RData files loaded. verbose Logical. Whether print progress messages. Default: TRUE. single_object Logical. Whether load objects single list (TRUE) directly global environment (FALSE). Defaults TRUE. return_names Logical. Whether return names loaded objects. effective single_object FALSE. Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load multiple .RData files together — load_multiple","text":"single_object TRUE, returns named list objects loaded specified files. single_object FALSE return_names TRUE, returns character vector names objects loaded global environment. Otherwise, returns NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load multiple .RData files together — load_multiple","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load multiple .RData files together — load_multiple","text":"","code":"(files <- system.file(    \"testdata\", c(\"culcita_dat.RData\", \"gopherdat2.RData\"), package = \"lme4\")) #> [1] \"/home/runner/work/_temp/Library/lme4/testdata/culcita_dat.RData\" #> [2] \"/home/runner/work/_temp/Library/lme4/testdata/gopherdat2.RData\"   ls() #> [1] \"files\"  # --------------------------------------------------- # Load multiple *.RData files to one list object # `single_object = TRUE` # --------------------------------------------------- MultiObj <- load_multiple(files = files, single_object = TRUE) ls() #> [1] \"MultiObj\" \"files\"     str(MultiObj, 1) #> List of 2 #>  $ culcita_dat:'data.frame':\t80 obs. of  3 variables: #>  $ gopherdat2 :'data.frame':\t30 obs. of  7 variables:  # --------------------------------------------------- # Load multiple *.RData files separately to the current environment # `single_object = FALSE` # --------------------------------------------------- ls() #> [1] \"MultiObj\" \"files\"    rm(\"MultiObj\") ls() #> [1] \"files\"  load_multiple(files = files, single_object = FALSE) #> Object: culcita_dat was loaded successfully. #> Object: Gdat was loaded successfully. #> [1] \"culcita_dat\" \"Gdat\"         str(Gdat, 1) #> 'data.frame':\t30 obs. of  7 variables: #>  $ Site   : Factor w/ 10 levels \"BS\",\"CB\",\"Cent\",..: 1 1 1 2 2 2 3 3 3 4 ... #>  $ year   : num  2004 2005 2006 2004 2005 ... #>  $ shells : int  0 0 0 1 0 1 0 1 1 9 ... #>  $ type   : Factor w/ 1 level \"Fresh\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ Area   : num  15.2 15.2 15.2 16 16 16 6.9 6.9 6.9 43.2 ... #>  $ density: num  4.8 4.8 4.8 2.8 2.8 2.8 29.1 29.1 29.1 4.2 ... #>  $ prev   : num  1 1 1 4.3 8 17.6 28.6 51.9 10.7 80.7 ...  str(culcita_dat, 1) #> 'data.frame':\t80 obs. of  3 variables: #>  $ block    : Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 2 2 3 3 4 4 5 5 ... #>  $ predation: num  0 1 1 1 1 1 1 1 1 1 ... #>  $ ttt      : Factor w/ 4 levels \"none\",\"crabs\",..: 1 1 1 1 1 1 1 1 1 1 ...  # --------------------------------------------------- # Load multiple *.RData files, one object already exists # --------------------------------------------------- ls() #> [1] \"files\" rm(\"culcita_dat\") #> Warning: object 'culcita_dat' not found ls() #> [1] \"files\"  try(load_multiple(files = files, single_object = FALSE)) #> Object: culcita_dat was loaded successfully. #> Object: Gdat was loaded successfully. #> [1] \"culcita_dat\" \"Gdat\""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or install multiple R packages — load_packages","title":"Load or install multiple R packages — load_packages","text":"function attempts load multiple R packages specified user. package installed, function can optionally install loading. also provides option print names versions loaded packages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or install multiple R packages — load_packages","text":"","code":"load_packages(   ...,   package_list = NULL,   verbose = FALSE,   install_missing = TRUE )"},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or install multiple R packages — load_packages","text":"... Character. Names packages loaded installed. package_list Character vector. alternative additional way specify package names vector. verbose Logical. TRUE, prints names versions loaded packages. Defaults FALSE. install_missing Logical. TRUE (default), missing packages automatically installed loaded.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load or install multiple R packages — load_packages","text":"function used side effects (loading/installing packages) return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load or install multiple R packages — load_packages","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load or install multiple R packages — load_packages","text":"","code":"# Currently loaded packages (P1 <- ecokit::loaded_packages()) #>  [1] \"car\"       \"carData\"   \"rworldmap\" \"png\"       \"sf\"        \"raster\"    #>  [7] \"sp\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    \"magrittr\"  \"stats\"     #> [13] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"       load_packages(tidyr) # Loaded packages after implementing the function (P2 <- ecokit::loaded_packages()) #>  [1] \"tidyr\"     \"car\"       \"carData\"   \"rworldmap\" \"png\"       \"sf\"        #>  [7] \"raster\"    \"sp\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    \"magrittr\"  #> [13] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   #> [19] \"base\"       # Which packages were loaded? setdiff(P2, P1) #> [1] \"tidyr\"  load_packages(terra, verbose = TRUE) #>  #> The following packages were loaded: #>   >>>>>  terra: 1.8-42"},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"List of loaded packages — loaded_packages","title":"List of loaded packages — loaded_packages","text":"function returns character vector listing packages currently loaded R session.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of loaded packages — loaded_packages","text":"","code":"loaded_packages()"},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of loaded packages — loaded_packages","text":"character vector containing names loaded packages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of loaded packages — loaded_packages","text":"","code":"loaded_packages() #>  [1] \"terra\"     \"tidyr\"     \"car\"       \"carData\"   \"rworldmap\" \"png\"       #>  [7] \"sf\"        \"raster\"    \"sp\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    #> [13] \"magrittr\"  \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  #> [19] \"methods\"   \"base\"       require(tidyr)  loaded_packages() #>  [1] \"terra\"     \"tidyr\"     \"car\"       \"carData\"   \"rworldmap\" \"png\"       #>  [7] \"sf\"        \"raster\"    \"sp\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    #> [13] \"magrittr\"  \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  #> [19] \"methods\"   \"base\""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of decimal places in a numeric value — n_decimals","title":"Number of decimal places in a numeric value — n_decimals","text":"function calculates number decimal places numeric value. designed work numeric inputs can coerced character format.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of decimal places in a numeric value — n_decimals","text":"","code":"n_decimals(x = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of decimal places in a numeric value — n_decimals","text":"x Numeric (character) numeric value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of decimal places in a numeric value — n_decimals","text":"integer representing number decimal places input value. input value decimal places, function returns 0.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of decimal places in a numeric value — n_decimals","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of decimal places in a numeric value — n_decimals","text":"","code":"n_decimals(x = \"13.45554545\") #> [1] 8  # -------------------------------------------  n_decimals(x = 15.01500) #> [1] 3  n_decimals(x = '15.01500') #> [1] 5  # -------------------------------------------  n_decimals(x = 13.45554545) #> [1] 8"},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of unique values for all columns of a data frame — n_unique","title":"Number of unique values for all columns of a data frame — n_unique","text":"function calculates number unique values column given data frame returns data frame two columns: Variable n_unique. Variable column lists names original columns, n_unique column lists corresponding number unique values column. result sorted number unique values ascending order.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of unique values for all columns of a data frame — n_unique","text":"","code":"n_unique(data)"},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Number of unique values for all columns of a data frame — n_unique","text":"source code function copied stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of unique values for all columns of a data frame — n_unique","text":"data data frame number unique values per column calculated.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of unique values for all columns of a data frame — n_unique","text":"data frame two columns: Variable n_unique. Variable column lists names original columns, n_unique column lists number unique values column. result sorted n_unique ascending order.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of unique values for all columns of a data frame — n_unique","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of unique values for all columns of a data frame — n_unique","text":"","code":"n_unique(mtcars) #> # A tibble: 11 × 2 #>    Variable n_unique #>    <chr>       <int> #>  1 vs              2 #>  2 am              2 #>  3 cyl             3 #>  4 gear            3 #>  5 carb            6 #>  6 hp             22 #>  7 drat           22 #>  8 mpg            25 #>  9 disp           27 #> 10 wt             29 #> 11 qsec           30  n_unique(iris) #> # A tibble: 5 × 2 #>   Variable     n_unique #>   <chr>           <int> #> 1 Species             3 #> 2 Petal.Width        22 #> 3 Sepal.Width        23 #> 4 Sepal.Length       35 #> 5 Petal.Length       43"},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get global attributes for NetCDF files — nc_global_attributes","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"function opens NetCDF file, extracts global attributes, returns character vector element attribute name-value pair.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"","code":"nc_global_attributes(nc = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"nc Character. Path NetCDF file. NULL, function stop error message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"character vector element global attribute.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise and quote file paths — normalize_path","title":"Normalise and quote file paths — normalize_path","text":"function ensures file paths expressed consistent canonical form. first converts paths absolute form using fs::path_abs(), tidies fs::path_tidy(), finally quotes correctly based operating system. default, base::normalizePath() behaves differently Windows Linux file exist. Windows, tries construct absolute path, Linux, returns input path -(relative). maintain consistency across platforms, function uses fs::path_abs() instead base::normalizePath().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise and quote file paths — normalize_path","text":"","code":"normalize_path(path, must_work = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise and quote file paths — normalize_path","text":"path Character vector. file path(s). must_work Logical; TRUE, function errors non-existing paths.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise and quote file paths — normalize_path","text":"character vector absolute, tidied, shell-quoted paths.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalise and quote file paths — normalize_path","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"List of functions in a package — package_functions","title":"List of functions in a package — package_functions","text":"function returns character vector listing functions available specified R package. first checks package installed can loaded; , raises error.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of functions in a package — package_functions","text":"","code":"package_functions(package)"},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of functions in a package — package_functions","text":"package Character. Package name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of functions in a package — package_functions","text":"character vector containing names functions specified package.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List of functions in a package — package_functions","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of functions in a package — package_functions","text":"","code":"str(package_functions(package = \"raster\")) #>  chr [1:281] \"%in%\" \"Arith\" \"Compare\" \"Geary\" \"GearyLocal\" \"KML\" \"Logic\" ...  str(package_functions(package = \"sf\")) #>  chr [1:156] \"%>%\" \"FULL_bbox_\" \"NA_agr_\" \"NA_bbox_\" \"NA_crs_\" ..."},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the remote SHA of R packages — package_remote_sha","title":"Get the remote SHA of R packages — package_remote_sha","text":"function retrieves remote SHA (Secure Hash Algorithm) reference one specified R packages remote repositories. SHA uniquely identifies version package's source code, useful reproducibility version tracking.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the remote SHA of R packages — package_remote_sha","text":"","code":"package_remote_sha(...)"},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the remote SHA of R packages — package_remote_sha","text":"... Character. Names one R packages (quoted unquoted) retrieve remote SHA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the remote SHA of R packages — package_remote_sha","text":"named character vector names package names values corresponding remote SHAs. package found remote SHA, value NA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the remote SHA of R packages — package_remote_sha","text":"function uses pak::lib_status() query status installed packages extract remote SHAs. supports packages installed GitHub, GitLab, remote sources via pak. package installed CRAN locally without remote SHA, result NA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the remote SHA of R packages — package_remote_sha","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the remote SHA of R packages — package_remote_sha","text":"","code":"package_remote_sha(ecokit, \"nonexistent\") #>      ecokit nonexistent  #>          NA          NA"},{"path":"https://elgabbas.github.io/ecokit/reference/path.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct path to a file or directory — path","title":"Construct path to a file or directory — path","text":"wrapper around fs::path() constructs file paths input components returns character string instead \"fs_path\" object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct path to a file or directory — path","text":"","code":"path(..., ext = \"\")"},{"path":"https://elgabbas.github.io/ecokit/reference/path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct path to a file or directory — path","text":"... character vectors, values NA, result also NA. paths follow recycling rules used tibble package, namely length 1 arguments recycled. ext optional extension append generated path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct path to a file or directory — path","text":"character vector representing constructed file path(s).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct path to a file or directory — path","text":"","code":"# Basic usage ecokit::path(\"datasets\", \"processed\", \"model_fitting\") #> [1] \"datasets/processed/model_fitting\"  # Adding a file extension ecokit::path(\"results\", \"output\", ext = \"csv\") #> [1] \"results/output.csv\"  # Handling multiple components ecokit::path(\"home\", \"user\", \"documents\", \"report\", ext = \"pdf\") #> [1] \"home/user/documents/report.pdf\"  # Using vectorized input ecokit::path(\"folder\", c(\"file1\", \"file2\"), ext = \"txt\") #> [1] \"folder/file1.txt\" \"folder/file2.txt\""},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace the geometry of a polygon with its centroid point — polygon_centroid","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"function replaces geometry simple feature (sf) polygon object geometry centroid point. can optionally rename geometry column modified sf object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"","code":"polygon_centroid(sf_object = NULL, rename = FALSE, new_name = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"sf_object simple feature (sf) object; polygon whose geometry replaced centroid. NULL. rename Logical. Whether rename geometry column sf object. Defaults FALSE. new_name Character. New name geometry column. valid rename = TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"modified sf object geometry replaced centroid original polygon geometry. rename TRUE, geometry column also renamed specified NewName.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Replace the geometry of a polygon with its centroid point — polygon_centroid","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"function modifies values input object x based specified conditions. can operate vectors, data.frames, RasterLayer objects. function allows changing values within specified range (), greater equals (greater_than)  less equals (less_than) specified value new value (new_value). option invert selection also available ranges.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"","code":"range_to_new_value(   x = NULL,   between = NULL,   greater_than = NULL,   less_than = NULL,   new_value = NULL,   invert = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"x numeric vector, data.frame, RasterLayer, SpatRaster object whose values modified. Numeric. numeric vector length 2 specifying range values changed kept. specified, greater_than less_than ignored. greater_than, less_than Numeric. Threshold larger equal /less equal values x changed new_value. applied specified. new_value new value assign selected elements x. invert Logical. Whether invert selection specified . TRUE, values outside specified range changed new_value. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"modified object x values changed according specified conditions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"","code":"library(raster) library(terra) par(mar = c(0.5, 0.5, 1, 2.5), oma = c(0.5, 0.5, 0.5, 1))  # ---------------------------------------------  # Vector  (VV <- seq_len(10)) #>  [1]  1  2  3  4  5  6  7  8  9 10  range_to_new_value(x = VV, between = c(5, 8), new_value = NA) #>  [1]  1  2  3  4 NA NA NA NA  9 10  range_to_new_value(x = VV, between = c(5, 8), new_value = NA, invert = TRUE) #>  [1] NA NA NA NA  5  6  7  8 NA NA  # greater_than is ignored as between is specified range_to_new_value(    x = VV, between = c(5, 8), new_value = NA, greater_than = 4) #>  [1]  1  2  3  4 NA NA NA NA  9 10  range_to_new_value(x = VV, new_value = NA, greater_than = 4) #>  [1]  1  2  3 NA NA NA NA NA NA NA  range_to_new_value(x = VV, new_value = NA, less_than = 4) #>  [1] NA NA NA NA  5  6  7  8  9 10  # ---------------------------------------------  # tibble  iris2 <- iris %>%   tibble::as_tibble() %>%   dplyr::slice_head(n = 50) %>%   dplyr::select(-Sepal.Length, -Petal.Length, -Petal.Width) %>%   dplyr::arrange(-Sepal.Width)  iris2 %>%  dplyr::mutate(    Sepal.Width.New = range_to_new_value(       x = Sepal.Width, between = c(3, 3.5),       new_value = NA, invert = FALSE),    Sepal.Width.Rev = range_to_new_value(       x = Sepal.Width, between = c(3, 3.5),       new_value = NA, invert = TRUE)) %>%  print(n = 50) #> # A tibble: 50 × 4 #>    Sepal.Width Species Sepal.Width.New Sepal.Width.Rev #>          <dbl> <fct>             <dbl>           <dbl> #>  1         4.4 setosa              4.4            NA   #>  2         4.2 setosa              4.2            NA   #>  3         4.1 setosa              4.1            NA   #>  4         4   setosa              4              NA   #>  5         3.9 setosa              3.9            NA   #>  6         3.9 setosa              3.9            NA   #>  7         3.8 setosa              3.8            NA   #>  8         3.8 setosa              3.8            NA   #>  9         3.8 setosa              3.8            NA   #> 10         3.8 setosa              3.8            NA   #> 11         3.7 setosa              3.7            NA   #> 12         3.7 setosa              3.7            NA   #> 13         3.7 setosa              3.7            NA   #> 14         3.6 setosa              3.6            NA   #> 15         3.6 setosa              3.6            NA   #> 16         3.6 setosa              3.6            NA   #> 17         3.5 setosa             NA               3.5 #> 18         3.5 setosa             NA               3.5 #> 19         3.5 setosa             NA               3.5 #> 20         3.5 setosa             NA               3.5 #> 21         3.5 setosa             NA               3.5 #> 22         3.5 setosa             NA               3.5 #> 23         3.4 setosa             NA               3.4 #> 24         3.4 setosa             NA               3.4 #> 25         3.4 setosa             NA               3.4 #> 26         3.4 setosa             NA               3.4 #> 27         3.4 setosa             NA               3.4 #> 28         3.4 setosa             NA               3.4 #> 29         3.4 setosa             NA               3.4 #> 30         3.4 setosa             NA               3.4 #> 31         3.4 setosa             NA               3.4 #> 32         3.3 setosa             NA               3.3 #> 33         3.3 setosa             NA               3.3 #> 34         3.2 setosa             NA               3.2 #> 35         3.2 setosa             NA               3.2 #> 36         3.2 setosa             NA               3.2 #> 37         3.2 setosa             NA               3.2 #> 38         3.2 setosa             NA               3.2 #> 39         3.1 setosa             NA               3.1 #> 40         3.1 setosa             NA               3.1 #> 41         3.1 setosa             NA               3.1 #> 42         3.1 setosa             NA               3.1 #> 43         3   setosa             NA               3   #> 44         3   setosa             NA               3   #> 45         3   setosa             NA               3   #> 46         3   setosa             NA               3   #> 47         3   setosa             NA               3   #> 48         3   setosa             NA               3   #> 49         2.9 setosa              2.9            NA   #> 50         2.3 setosa              2.3            NA    # ---------------------------------------------  # RasterLayer / SpatRaster  grd_file <- system.file(\"external/test.grd\", package = \"raster\") R_raster <- raster::raster(grd_file) R_terra <- terra::rast(grd_file)  # Convert values less than 500 to NA R_raster2 <- range_to_new_value( x = R_raster, less_than = 500, new_value = NA) plot(    raster::stack(R_raster, R_raster2), nr = 1,    main = c(\"\\nOriginal\", \"\\n<500 to NA\"),    box = FALSE, axes = FALSE, legend.width = 2, colNA = \"lightgrey\",    xaxs = \"i\", yaxs = \"i\")   R_terra2 <- range_to_new_value(x = R_terra, less_than = 500, new_value = NA) plot(    c(R_terra, R_terra2), nr = 1, main = c(\"\\nOriginal\", \"\\n<500 to NA\"),    box = FALSE, axes = FALSE, colNA = \"lightgrey\", xaxs = \"i\", yaxs = \"i\")    # Convert values greater than 700 to NA R_raster2 <- range_to_new_value(    x = R_raster, greater_than = 700, new_value = NA) plot(    raster::stack(R_raster, R_raster2), nr = 1,    main = c(\"\\nOriginal\", \"\\n>700 to NA\"),    box = FALSE, axes = FALSE, legend.width = 2, colNA = \"lightgrey\",    xaxs = \"i\", yaxs = \"i\")   R_terra2 <- range_to_new_value(     x = R_terra, greater_than = 700, new_value = NA) plot(    c(R_terra, R_terra2), nr = 1, main = c(\"\\nOriginal\", \"\\n>700 to NA\"),    box = FALSE, axes = FALSE, colNA = \"lightgrey\", xaxs = \"i\", yaxs = \"i\")"},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raster map into binary (1/0) — raster_to_PA","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"function converts raster values binary format positive values set 1 (presence) zeros remain 0 (absence). Additionally, allows conversion NA values 0, /0 values NA, based user's choice.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"","code":"raster_to_PA(raster = NULL, NA_to_0 = TRUE, zero_to_NA = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"raster input raster map. must class PackedSpatRaster, RasterLayer, SpatRaster. parameter NULL. NA_to_0 logical value indicating whether NA values converted 0. Defaults TRUE. zero_to_NA logical value indicating whether 0 values converted NA. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"raster map values converted according specified parameters. object class input object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_PA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raster map into binary (1/0) — raster_to_PA","text":"","code":"ecokit::load_packages(    package_list = c(\"dplyr\", \"raster\", \"ggplot2\", \"tidyterra\"))  r <- raster::raster(system.file(\"external/test.grd\", package = \"raster\"))  ggplot2::ggplot() +   tidyterra::geom_spatraster(data = terra::rast(r), maxcell = Inf) +   ggplot2::theme_minimal()   r_2 <- raster::stack(   # NA replaced with 0   raster_to_PA(raster = r),   # NA is kept as NA   raster_to_PA(raster = r, NA_to_0 = FALSE),   # 0 replaced with NA in the second map   raster_to_PA(raster = raster_to_PA(r), zero_to_NA = TRUE))  ggplot2::ggplot() +   tidyterra::geom_spatraster(     data = terra::as.factor(terra::rast(r_2)), maxcell = Inf) +   ggplot2::facet_wrap(~lyr) +   ggplot2::scale_fill_manual(values = c(\"grey30\", \"red\"),     na.value = \"transparent\") +   ggplot2::theme_minimal()"},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture and record evaluated function arguments — record_arguments","title":"Capture and record evaluated function arguments — record_arguments","text":"record_arguments() utility function captures records evaluated forms arguments passed parent function. returns tibble columns named arguments, containing evaluated values .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture and record evaluated function arguments — record_arguments","text":"","code":"record_arguments(out_path = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture and record evaluated function arguments — record_arguments","text":"out_path Character. path .RData file output tibble exported. NULL (default), tibble returned without saving. provided, tibble saved specified file NULL returned invisibly.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture and record evaluated function arguments — record_arguments","text":"tibble containing evaluated forms parent function’s arguments additional named arguments passed via ..., columns named arguments (e.g., w, x, y, extra1). Evaluated values presented scalars (e.g., 8) list columns complex objects (e.g., <SpatRaster>). out_path provided, tibble saved specified .RData file NULL returned invisibly.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Capture and record evaluated function arguments — record_arguments","text":"function evaluates arguments grandparent environment (two frames ), fallback global environment evaluation fails. ensures correct evaluation iterative contexts like lapply. handles: Scalars (e.g., numbers, strings) single values. Multi-element vectors complex objects (e.g., SpatRaster) list columns. NULL values converted string \"NULL\". Failed evaluations result NA. Additional named arguments passed via ... parent function also recorded. function must called within another function, relies sys.call(-1) capture parent call.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Capture and record evaluated function arguments — record_arguments","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture and record evaluated function arguments — record_arguments","text":"","code":"a <- 5 b <- 3 w_values <- 1:3 x_values <- c(a + b, 10, 15) y_values <- c(\"ABCD\", \"XYZ123\", \"TEST\")  Function1 <- function(w = 5, x, y, z = c(1, 2), ...) {   Args <- record_arguments()   return(Args) }  # ----------------------------------------------------  # Example 1: Simple function call with scalar and expression Function1(x = a + b, y = 2) #> # A tibble: 1 × 4 #>       w     x     y z         #>   <dbl> <dbl> <dbl> <list>    #> 1     5     8     2 <dbl [2]>  # ----------------------------------------------------  # Example 2: Using lapply with indexed arguments  lapply(   X = 1:3,   FUN = function(Z) {     Function1(       w = w_values[Z],       x = x_values[Z],       y = stringr::str_extract(y_values[Z], \"B.+$\"),       z = Z) }) %>% dplyr::bind_rows() %>% print() #> # A tibble: 3 × 4 #>       w     x y         z #>   <int> <dbl> <chr> <int> #> 1     1     8 BCD       1 #> 2     2    10 NA        2 #> 3     3    15 NA        3  # ----------------------------------------------------  # Example 3: Using pmap with mixed argument types purrr::pmap(   .l = list(w = w_values, x = x_values, y = y_values),   .f = function(w, x, y) {     Function1(       w = w,       x = x,       y = stringr::str_extract(y, \"B.+$\"),       z = terra::rast(system.file(\"ex/elev.tif\", package = \"terra\")))   }) %>%   dplyr::bind_rows() %>%   print() #> # A tibble: 3 × 4 #>       w     x y     z          #>   <int> <dbl> <chr> <list>     #> 1     1     8 BCD   <PckdSptR> #> 2     2    10 NA    <PckdSptR> #> 3     3    15 NA    <PckdSptR>  # ----------------------------------------------------  # Example 4: Using additional arguments via ... Function1(x = a + b, y = \"test\", extra1 = \"hello\", extra2 = 42) #> # A tibble: 1 × 6 #>       w     x y     z         extra1 extra2 #>   <dbl> <dbl> <chr> <list>    <chr>   <dbl> #> 1     5     8 test  <dbl [2]> hello      42"},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload an R package — reload_package","title":"Reload an R package — reload_package","text":"function reloads specified R package. package already loaded, attempts load . package already loaded, reloads package library location. can useful package development changes made package code. function depends devtools::reload function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload an R package — reload_package","text":"","code":"reload_package(package)"},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload an R package — reload_package","text":"package Character. Name package reload.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload an R package — reload_package","text":"function used side effect reloading package rather return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reload an R package — reload_package","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload an R package — reload_package","text":"","code":"load_packages(sf)  reload_package(\"sf\") #> ℹ Reloading attached sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE"},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename active geometry column of an sf object. — rename_geometry","title":"Rename active geometry column of an sf object. — rename_geometry","text":"function renames active geometry column simple feature (sf) object new name provided user.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename active geometry column of an sf object. — rename_geometry","text":"","code":"rename_geometry(sf_object = NULL, new_name = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename active geometry column of an sf object. — rename_geometry","text":"sf_object sf object; simple feature object whose geometry column name changed. new_name character; new name geometry column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename active geometry column of an sf object. — rename_geometry","text":"modified sf object renamed geometry column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rename active geometry column of an sf object. — rename_geometry","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace space with underscore in a string — replace_space","title":"Replace space with underscore in a string — replace_space","text":"simple wrapper function stringr::str_replace_all replaces spaces underscores. useful formatting strings used contexts spaces allowed desired.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace space with underscore in a string — replace_space","text":"","code":"replace_space(x)"},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace space with underscore in a string — replace_space","text":"x Character. string spaces replaced underscores.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace space with underscore in a string — replace_space","text":"character string spaces replaced underscores.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace space with underscore in a string — replace_space","text":"","code":"replace_space(\"Genus species\") #> [1] \"Genus_species\"  replace_space(\"Genus species subspecies\") #> [1] \"Genus_species_subspecies\""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an object to a file with a new name — save_as","title":"Save an object to a file with a new name — save_as","text":"function saves R object specified file path potentially new name. useful renaming objects save process. function supports saving objects RData, qs2, feather, rds formats. format determined extension file path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an object to a file with a new name — save_as","text":"","code":"save_as(   object = NULL,   object_name = NULL,   out_path = NULL,   n_threads = 5L,   feather_compression = \"zstd\",   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an object to a file with a new name — save_as","text":"object input object saved. can actual R object character string representing name object. object_name Character. new name saved RData object. name used object loaded back R. Default NULL. required saving RData files. out_path Character. File path (ends either *.RData, *.qs2, feather, rds) object saved. includes directory file name. n_threads Character. Number threads use compressing data. See qs2::qs_save. feather_compression Character. compression algorithm use saving object feather format. default \"zstd\". See arrow::write_feather. ... Additional arguments passed respective save functions. base::save RData files; qs2::qs_save qs2 files; arrow::write_feather feather files; base::saveRDS rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an object to a file with a new name — save_as","text":"function return value saves object specified file path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save an object to a file with a new name — save_as","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an object to a file with a new name — save_as","text":"","code":"TMP_Folder <- ecokit::path(tempdir(), stringi::stri_rand_strings(1, 5)) fs::dir_create(TMP_Folder) list.files(TMP_Folder) #> character(0)  # save iris data in `iris2.RData` with `iris2` object name save_as(iris, \"iris2\", ecokit::path(TMP_Folder, \"iris2.RData\")) list.files(TMP_Folder, pattern = \"^.+.RData\") #> [1] \"iris2.RData\"  (load(ecokit::path(TMP_Folder, \"iris2.RData\"))) #> [1] \"iris2\"  tibble::tibble(iris2) #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 140 more rows"},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Save multiple objects to their respective .RData files — save_multiple","title":"Save multiple objects to their respective .RData files — save_multiple","text":"function saves specified variables global environment separate .RData files. allows optional file prefixing overwriting existing files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save multiple objects to their respective .RData files — save_multiple","text":"","code":"save_multiple(   variables = NULL,   out_directory = getwd(),   overwrite = FALSE,   prefix = \"\",   verbose = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save multiple objects to their respective .RData files — save_multiple","text":"variables Character vector. Names variables saved. NULL specified variable exist global environment, function stop error. out_directory Character. Path output folder .RData files saved. Defaults current working directory. overwrite Logical. Whether existing .RData files overwritten. FALSE (Default) files exist, function stop error message. prefix Character. prefix output file name. Useful organizing saved files avoiding name conflicts. Defaults empty string. verbose Logical. Whether print message upon successful saving files. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save multiple objects to their respective .RData files — save_multiple","text":"function used side effect saving files return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save multiple objects to their respective .RData files — save_multiple","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save multiple objects to their respective .RData files — save_multiple","text":"","code":"if (FALSE) { # \\dontrun{   TMP_Folder <- ecokit::path(tempdir(), stringi::stri_rand_strings(1, 5))   fs::dir_create(TMP_Folder)    # ----------------------------------------------   # Save x1 and x2 to disk   # ----------------------------------------------   x1 = 10; x2 = 20    save_multiple(variables = c(\"x1\", \"x2\"), out_directory = TMP_Folder)    list.files(path = TMP_Folder, pattern = \"^.+.RData\")    (x1Contents <- ecokit::load_as(ecokit::path(TMP_Folder, \"x1.RData\")))    (x2Contents <- ecokit::load_as(ecokit::path(TMP_Folder, \"x2.RData\")))    # ----------------------------------------------   # Use prefix   # ----------------------------------------------    save_multiple(       variables = c(\"x1\", \"x2\"), out_directory = TMP_Folder, prefix = \"A_\")    list.files(path = TMP_Folder, pattern = \"^.+.RData\")    # ----------------------------------------------   # File exists, no save   # ----------------------------------------------   try(save_multiple(variables = c(\"x1\", \"x2\"), out_directory = TMP_Folder))    # ----------------------------------------------   # overwrite existing file   # ----------------------------------------------   x1 = 100; x2 = 200; x3 = 300    save_multiple(variables = c(\"x1\", \"x2\", \"x3\"),      out_directory = TMP_Folder, overwrite = TRUE)    (x1Contents <- ecokit::load_as(ecokit::path(TMP_Folder, \"x1.RData\")))    (x2Contents <- ecokit::load_as(ecokit::path(TMP_Folder, \"x2.RData\")))    (x3Contents <- ecokit::load_as(ecokit::path(TMP_Folder, \"x3.RData\"))) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves all non-function objects from the global environment to an RData file — save_session","title":"Saves all non-function objects from the global environment to an RData file — save_session","text":"function saves objects (except functions specified exclusions) global environment list items RData file. also creates summary objects' sizes memory.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves all non-function objects from the global environment to an RData file — save_session","text":"","code":"save_session(out_directory = getwd(), exclude_objects = NULL, prefix = \"S\")"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves all non-function objects from the global environment to an RData file — save_session","text":"out_directory Character. Directory path output RData file saved. Defaults current working directory base::getwd(). exclude_objects Character vector. Object names (strings) exclude saving. prefix Character. prefix saved file name . Defaults S.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves all non-function objects from the global environment to an RData file — save_session","text":"tibble containing names sizes (MB, rounded 1 decimal place) saved objects.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Saves all non-function objects from the global environment to an RData file — save_session","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Save session information to a file — save_session_info","title":"Save session information to a file — save_session_info","text":"function saves current R session information, including installed packages, session details, optionally, information specific objects session, text file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save session information to a file — save_session_info","text":"","code":"save_session_info(out_directory = getwd(), session_info = NULL, prefix = \"S\")"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save session information to a file — save_session_info","text":"out_directory Character. Directory path output file saved. default current working directory (base::getwd). session_info optional list objects include session information output. typically result session management function like save_session. provided, details objects (excluding functions pre-selected objects, sizes megabytes) appended session information file. prefix Character. Prefix output file name. Defaults S.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save session information to a file — save_session_info","text":"primary effect function side effect writing session information file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save session information to a file — save_session_info","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"Scale SpatRaster object (terra R package ) values range 0 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"","code":"scale_0_1(raster)"},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"raster SpatRaster; SpatRaster object scaled.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"SpatRaster; SpatRaster object values scaled 0 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"function takes SpatRaster object input, calculates minimum maximum values, scales values range 0 1. useful normalisation purposes spatial analysis modelling. function relies terra package spatial data manipulation.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale a SpatRaster object values to a range between 0 and 1 — scale_0_1","text":"","code":"library(terra) r <- rast(ncols = 10, nrows = 10) values(r) <- seq_len(terra::ncell(r))  scale_0_1(r) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> name        : lyr.1  #> min value   :     0  #> max value   :     1"},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts link texts and URLs from a web page — scrape_link","title":"Extracts link texts and URLs from a web page — scrape_link","text":"function scrapes web page links (<> tags) extracts URLs link text.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts link texts and URLs from a web page — scrape_link","text":"","code":"scrape_link(URL, sort_by = c(\"link\", \"link_text\"))"},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts link texts and URLs from a web page — scrape_link","text":"URL Character. URL web page scrape. URL also used resolve relative links absolute URLs. sort_by Character vector length 1 2. columns arrange output . default c(\"link\", \"link_text\"). first column URL link, second column text link. function arrange output ascending order column(s) specified argument.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts link texts and URLs from a web page — scrape_link","text":"tibble two columns: link_text containing text link, URL containing  absolute URL link. tibble sorted URL link text, unique links included.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts link texts and URLs from a web page — scrape_link","text":"","code":"head( scrape_link(URL = \"https://github.com/tidyverse/dplyr\")) #> # A tibble: 6 × 2 #>   link_text          link                                                        #>   <chr>              <chr>                                                       #> 1 Acero              https://arrow.apache.org/docs/cpp/streaming_execution.html  #> 2 arrow              https://arrow.apache.org/docs/r/                            #> 3 dbplyr             https://dbplyr.tidyverse.org/                               #> 4 Documentation      https://docs.github.com                                     #> 5 Docs               https://docs.github.com/                                    #> 6 Search syntax tips https://docs.github.com/search-github/github-code-search/u…  head(   scrape_link(     URL = \"https://github.com/tidyverse/dplyr\", sort_by = \"link_text\")) #> # A tibble: 6 × 2 #>   link_text          link                                                        #>   <chr>              <chr>                                                       #> 1 + 257 contributors https:/github.com/tidyverse/dplyr/tidyverse/dplyr/graphs/c… #> 2 + 42 releases      https:/github.com/tidyverse/dplyr/tidyverse/dplyr/releases  #> 3 .Rbuildignore      https:/github.com/tidyverse/dplyr/tidyverse/dplyr/blob/mai… #> 4 .github            https:/github.com/tidyverse/dplyr/tidyverse/dplyr/tree/mai… #> 5 .gitignore         https:/github.com/tidyverse/dplyr/tidyverse/dplyr/blob/mai… #> 6 .vscode            https:/github.com/tidyverse/dplyr/tidyverse/dplyr/tree/mai…  # This will give an \"Invalid URL\" error if (FALSE) { # \\dontrun{  scrape_link(URL = \"https://github50.com\") } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the location of the current R script. — script_location","title":"Retrieve the location of the current R script. — script_location","text":"function determines file path currently executing R script. checks command line arguments (e.g., via Rscript) script path, interactive sessions, examines call stack recently sourced file, falling back rstudioapi (available RStudio running) sourcing context exists. location determined, returns NA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the location of the current R script. — script_location","text":"","code":"script_location()"},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retrieve the location of the current R script. — script_location","text":"source code function adapted stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the location of the current R script. — script_location","text":"character string representing file path current R script, NA_character_ path determined (e.g., unsourced interactive session without script context).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve the location of the current R script. — script_location","text":"function follows priority order: Command line arguments (--file) executed via Rscript. recent ofile attribute call stack sourced interactively R environment, supporting nested sourcing scenarios. RStudio's active editor context via rstudioapi available, RStudio running, sourcing context found. Returns NA_character_ unsourced interactive sessions non-interactive execution without script path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the location of the current R script. — script_location","text":"","code":"if (FALSE) { # \\dontrun{ # Save as \"my_script.R\": script_location() # Run: Rscript my_script.R # Output: [1] \"my_script.R\" (or full path depending on Rscript invocation) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","title":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","text":"Set geometry column simple feature (sf) data frame, making particularly useful data processing pipelines. specifying name geometry column, users can ensure spatial operations utilise correct data.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","text":"","code":"set_geometry(sf_object, geometry_column)"},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","text":"sf_object simple feature (sf) data frame. data frame whose geometry column set changed. geometry_column Character. Name geometry column used set sf_object data frame.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","text":"modified simple feature (sf) data frame updated geometry column. function returns original data frame sf_object geometry column set Name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the geometry column of a simple feature (sf) data frame in the pipe pipeline. — set_geometry","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up or stop parallel processing plan — set_parallel","title":"Set up or stop parallel processing plan — set_parallel","text":"Configures parallel processing future::plan() stops existing plan. stopping, resets sequential mode.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up or stop parallel processing plan — set_parallel","text":"","code":"set_parallel(   n_cores = 1L,   strategy = \"future::multisession\",   stop_cluster = FALSE,   show_log = TRUE,   future_max_size = 500L,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up or stop parallel processing plan — set_parallel","text":"n_cores Integer. Number cores use. NULL, defaults sequential mode. Default 1. strategy Character. parallel processing strategy use. Valid options future::sequential (sequential), future::multisession (default), future::multicore (supported Windows), future::cluster. strategy one valid options future::multicore Windows PC, defaults future::multisession. See future::plan() details. stop_cluster Logical. TRUE, stops parallel cluster resets sequential mode. FALSE (default), sets new plan. show_log Logical. TRUE (default), logs messages via cat_time(). future_max_size Numeric. Maximum allowed total size (megabytes) global variables identified. See future.globals.maxSize argument future::future.options details. Default 500L 500 MB. ... Additional arguments pass cat_time.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set up or stop parallel processing plan — set_parallel","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up or stop parallel processing plan — set_parallel","text":"","code":"# Prepare working in parallel ecokit::set_parallel(n_cores = 2) #> Setting up parallel processing with 2 core(s) - 01:08:32 future::plan() #> multisession: #> - args: function (..., workers = c(system = 2L), envir = parent.frame()) #> - tweaked: TRUE #> - call: future::plan(strategy = strategy, workers = n_cores) #> MultisessionFutureBackend: #> Inherits: ClusterFutureBackend, MultiprocessFutureBackend, FutureBackend #> Number of workers: 2 #> Number of free workers: 2 #> Available cores: 4 #> Automatic garbage collection: FALSE #> Early signaling: TRUE #> Interrupts are enabled: TRUE #> Maximum total size of globals: 500.00 MiB #> Maximum total size of value: 500.00 MiB #> Argument ‘persistent’: FALSE #> Argument ‘wait.timeout’: 86400 #> Argument ‘wait.interval’: 0.01 #> Argument ‘wait.alpha’: 1.01 #> Argument ‘hooks’: FALSE #> Number of active futures: 0 #> Number of futures since start: 0 #> Workers of type RichSOCKcluster: #> - Summary: Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu) #> - [ OK ] Node 1/2: valid connection, alive [RichSOCKnode of a socket cluster on local host 'localhost' with pid 9843 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #5 ('<-localhost:11765')] #> - [ OK ] Node 2/2: valid connection, alive [RichSOCKnode of a socket cluster on local host 'localhost' with pid 9844 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #6 ('<-localhost:11765')]  # ---------------------------------------------  # Stopping parallel processing ecokit::set_parallel(stop_cluster = TRUE) #> Stopping parallel processing - 01:08:33 future::plan() #> sequential: #> - args: function (..., gc = TRUE, envir = parent.frame(), workers = \"<NULL>\") #> - tweaked: TRUE #> - call: future::plan(\"future::sequential\", gc = TRUE) #> FutureBackend to be launched  # ---------------------------------------------  # Prepare working in parallel using `future::cluster` ecokit::set_parallel(n_cores = 2, strategy = \"future::cluster\") #> Setting up parallel processing with 2 core(s) - 01:08:33 future::plan() #> cluster: #> - args: function (..., workers = c(system = 2L), envir = parent.frame()) #> - tweaked: TRUE #> - call: future::plan(strategy = strategy, workers = n_cores) #> ClusterFutureBackend: #> Inherits: MultiprocessFutureBackend, FutureBackend #> Number of workers: 2 #> Number of free workers: 2 #> Available cores: 4 #> Automatic garbage collection: FALSE #> Early signaling: TRUE #> Interrupts are enabled: FALSE #> Maximum total size of globals: 500.00 MiB #> Maximum total size of value: 500.00 MiB #> Argument ‘persistent’: FALSE #> Argument ‘wait.timeout’: 86400 #> Argument ‘wait.interval’: 0.01 #> Argument ‘wait.alpha’: 1.01 #> Argument ‘hooks’: FALSE #> Number of active futures: 0 #> Number of futures since start: 0 #> Workers of type RichSOCKcluster: #> - Summary: Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu) #> - [ OK ] Node 1/2: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 9915 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #5 ('<-localhost:11228')] #> - [ OK ] Node 2/2: valid connection [RichSOCKnode of a socket cluster on local host 'localhost' with pid 9914 (R version 4.5.0 (2025-04-11), x86_64-pc-linux-gnu) using socket connection #6 ('<-localhost:11228')]  # Stopping parallel processing ecokit::set_parallel(stop_cluster = TRUE) #> Stopping parallel processing - 01:08:33 future::plan() #> sequential: #> - args: function (..., gc = TRUE, envir = parent.frame(), workers = \"<NULL>\") #> - tweaked: TRUE #> - call: future::plan(\"future::sequential\", gc = TRUE) #> FutureBackend to be launched"},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":null,"dir":"Reference","previous_headings":"","what":"sets CRS for a SpatRaster — set_raster_CRS","title":"sets CRS for a SpatRaster — set_raster_CRS","text":"function sets coordinate reference system (CRS) SpatRaster object using specified EPSG code. wrapper function terra::crs(raster) <- CRS allowing set CRS pipe.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sets CRS for a SpatRaster — set_raster_CRS","text":"","code":"set_raster_CRS(raster, CRS = \"epsg:3035\")"},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sets CRS for a SpatRaster — set_raster_CRS","text":"raster SpatRaster object whose CRS needs set. CRS Character. CRS value set, default \"epsg:3035\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sets CRS for a SpatRaster — set_raster_CRS","text":"SpatRaster object updated CRS.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sets CRS for a SpatRaster — set_raster_CRS","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Set values for SpatRaster Objects — set_raster_values","title":"Set values for SpatRaster Objects — set_raster_values","text":"function processes SpatRaster object file path , ensuring raster loaded unpacked necessary. converts raster objects raster package SpatRaster objects. function ensures SpatRaster object read memory, file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set values for SpatRaster Objects — set_raster_values","text":"","code":"set_raster_values(raster)"},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set values for SpatRaster Objects — set_raster_values","text":"raster SpatRaster object, file path raster file, object raster package (e.g., RasterLayer, RasterStack, RasterBrick).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set values for SpatRaster Objects — set_raster_values","text":"SpatRaster object values loaded memory.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set values for SpatRaster Objects — set_raster_values","text":"function handles various types input: file path provided, attempts load raster using terra::rast(). input packed SpatRaster, unpacks raster using terra::unwrap(). input raster object raster package, converted SpatRaster.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set values for SpatRaster Objects — set_raster_values","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add longitude and latitude coordinates to an sf object — sf_add_coords","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"Add longitude latitude coordinates new columns sf object (sf_object). extracts coordinates sf object, converts tibble, appends original sf object new columns. name_x name_y, provided arguments respectively, already exist sf object, function either  1) overwrites columns overwrite set TRUE 2) appends \"_NEW\" new column names avoid overwrite overwrite set FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"","code":"sf_add_coords(sf_object, name_x = \"Long\", name_y = \"Lat\", overwrite = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"sf_object sf object longitude latitude columns added. name_x, name_y Character. Name longitude column added. Defaults Long Lat. overwrite Logical. Whether overwrite existing columns names specified name_x name_y. FALSE columns names exist, new columns appended \"_NEW\" suffix. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"sf object added longitude latitude columns.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"overwrite parameter FALSE (default) columns specified names already exist, function issue warning append \"_NEW\" names new columns avoid overwriting.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"","code":"pt1 = sf::st_point(c(0,1)) pt2 = sf::st_point(c(1,1)) d = data.frame(a = c(1, 2)) d$geom = sf::st_sfc(pt1, pt2) df = sf::st_as_sf(d) df #> Simple feature collection with 2 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a        geom #> 1 1 POINT (0 1) #> 2 2 POINT (1 1) (df <- sf_add_coords(df)) #> Simple feature collection with 2 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat        geom #> 1 1    0   1 POINT (0 1) #> 2 2    1   1 POINT (1 1)  (sf_add_coords(df)) #> Warning: Provided column names for longitude and Latitude already exist in the data; `_NEW` is used as suffix #> Simple feature collection with 2 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat Long_NEW Lat_NEW        geom #> 1 1    0   1        0       1 POINT (0 1) #> 2 2    1   1        1       1 POINT (1 1)  (sf_add_coords(df, overwrite = TRUE)) #> Warning: Provided column names for longitude and Latitude already exist in the data; these columns were overwritten #> Simple feature collection with 2 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat        geom #> 1 1    0   1 POINT (0 1) #> 2 2    1   1 POINT (1 1)"},{"path":"https://elgabbas.github.io/ecokit/reference/sort2.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort alphanumeric strings with enhanced options — sort2","title":"Sort alphanumeric strings with enhanced options — sort2","text":"function extends sorting capabilities alphanumeric strings allowing sorting mixed numeric character strings, additional control sorting direction, treatment NA blank values, handling numeric values represented either decimal numbers Roman numerals. function wrapper function gtools::mixedsort function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sort2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort alphanumeric strings with enhanced options — sort2","text":"","code":"sort2(   x,   decreasing = FALSE,   na.last = TRUE,   blank.last = FALSE,   numeric.type = c(\"decimal\", \"roman\"),   roman.case = c(\"upper\", \"lower\", \"both\") )"},{"path":"https://elgabbas.github.io/ecokit/reference/sort2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort alphanumeric strings with enhanced options — sort2","text":"x Vector sorted. decreasing logical.  sort increasing decreasing? Note descending=TRUE reverses meanings na.last blanks.last. na.last controlling treatment NA values.  TRUE, missing values data put last; FALSE, put first; NA, removed. blank.last controlling treatment blank values.  TRUE, blank values data put last; FALSE, put first; NA, removed. numeric.type either \"decimal\" (default) \"roman\".  numeric values represented decimal numbers (numeric.type=\"decimal\") Roman numerals (numeric.type=\"roman\")? roman.case one \"upper\", \"lower\", \"\".  roman numerals represented using capital letters ('IX') lower-case letters ('ix') ?","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sort2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort alphanumeric strings with enhanced options — sort2","text":"vector sorted alphanumeric strings.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sort2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort alphanumeric strings with enhanced options — sort2","text":"","code":"# example code (AA <- paste0(\"V\", seq_len(12))) #>  [1] \"V1\"  \"V2\"  \"V3\"  \"V4\"  \"V5\"  \"V6\"  \"V7\"  \"V8\"  \"V9\"  \"V10\" \"V11\" \"V12\"  sort(x = AA) #>  [1] \"V1\"  \"V10\" \"V11\" \"V12\" \"V2\"  \"V3\"  \"V4\"  \"V5\"  \"V6\"  \"V7\"  \"V8\"  \"V9\"   ecokit::sort2(x = AA) #>  [1] \"V1\"  \"V2\"  \"V3\"  \"V4\"  \"V5\"  \"V6\"  \"V7\"  \"V8\"  \"V9\"  \"V10\" \"V11\" \"V12\""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":null,"dir":"Reference","previous_headings":"","what":"Silently source R script with optional message and warning suppression — source_silent","title":"Silently source R script with optional message and warning suppression — source_silent","text":"function sources R script file options suppress messages /warnings. useful running scripts generate lot console output needed.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silently source R script with optional message and warning suppression — source_silent","text":"","code":"source_silent(file, messages = TRUE, warnings = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silently source R script with optional message and warning suppression — source_silent","text":"file Character. Path file sourced. messages Logical. TRUE (default), messages generated script shown. FALSE, messages suppressed. warnings Logical. TRUE (default), warnings generated script shown. FALSE, warnings suppressed. ... Additional arguments passed source function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Silently source R script with optional message and warning suppression — source_silent","text":"used side effect sourcing file optional suppression messages warnings.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Silently source R script with optional message and warning suppression — source_silent","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a data.frame into smaller chunks — split_df_to_chunks","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"function divides data.frame smaller chunks based specified number rows per chunk (chunk_size) specified number chunks (n_chunks). neither provided, defaults splitting data.frame  minimum 5 chunks less data.frame fewer 5 rows. function ensures data evenly distributed among chunks much possible.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"","code":"split_df_to_chunks(   data = NULL,   chunk_size = NULL,   n_chunks = NULL,   prefix = \"Chunk\" )"},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"data data.frame. data.frame split chunks. chunk_size Integer. Number rows chunk contain. must positive integer less number rows data. n_chunks Integer. Number chunks split data.frame . must positive integer. prefix Character. Prefix names chunks. Default \"Chunk\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"list data.frames, data.frame represents chunk original data.frame. names list elements constructed using prefix parameter followed underscore chunk number (e.g., \"Chunk_1\", \"Chunk_2\", ...).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"","code":"split_df_to_chunks(mtcars, chunk_size = 16) #> $Chunk_1 #> # A tibble: 16 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #> 12  16.4     8  276.   180  3.07  4.07  17.4     0     0     3     3 #> 13  17.3     8  276.   180  3.07  3.73  17.6     0     0     3     3 #> 14  15.2     8  276.   180  3.07  3.78  18       0     0     3     3 #> 15  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4 #> 16  10.4     8  460    215  3     5.42  17.8     0     0     3     4 #>  #> $Chunk_2 #> # A tibble: 16 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  2  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  3  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  4  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #>  5  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #>  6  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  7  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  8  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  9  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #> 10  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #> 11  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #> 12  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #> 13  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #> 14  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #> 15  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 16  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>   # -------------------------------------------  split_df_to_chunks(mtcars, n_chunks = 3) #> $Chunk_1 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #>  #> $Chunk_2 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  16.4     8 276.    180  3.07  4.07  17.4     0     0     3     3 #>  2  17.3     8 276.    180  3.07  3.73  17.6     0     0     3     3 #>  3  15.2     8 276.    180  3.07  3.78  18       0     0     3     3 #>  4  10.4     8 472     205  2.93  5.25  18.0     0     0     3     4 #>  5  10.4     8 460     215  3     5.42  17.8     0     0     3     4 #>  6  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  7  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  8  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  9  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #> 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #> 11  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  #> $Chunk_3 #> # A tibble: 10 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  2  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  3  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #>  4  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #>  5  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #>  6  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #>  7  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #>  8  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #>  9  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 10  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>   # -------------------------------------------  split_df_to_chunks(mtcars, n_chunks = 3, prefix = \"T\") #> $T_1 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #>  #> $T_2 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  16.4     8 276.    180  3.07  4.07  17.4     0     0     3     3 #>  2  17.3     8 276.    180  3.07  3.73  17.6     0     0     3     3 #>  3  15.2     8 276.    180  3.07  3.78  18       0     0     3     3 #>  4  10.4     8 472     205  2.93  5.25  18.0     0     0     3     4 #>  5  10.4     8 460     215  3     5.42  17.8     0     0     3     4 #>  6  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  7  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  8  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  9  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #> 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #> 11  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  #> $T_3 #> # A tibble: 10 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  2  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  3  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #>  4  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #>  5  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #>  6  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #>  7  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #>  8  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #>  9  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 10  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>"},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a raster object into a list of smaller rasters — split_raster","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Split raster object list smaller rasters based specified numbers rows columns. can optionally save resulting rasters disk, plot , return just extents.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a raster object into a list of smaller rasters — split_raster","text":"","code":"split_raster(   raster = NULL,   n_columns = 4L,   n_rows = 4L,   save = FALSE,   save_path = \"\",   plot = FALSE,   extent_only = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a raster object into a list of smaller rasters — split_raster","text":"raster raster object split. NULL (default), function execute. n_columns, n_rows Integer. desired number columns rows split raster . Default 4 columns 4 rows. save Logical. Whether save split rasters disk. Default FALSE. save_path Character. Directory path split rasters saved save TRUE. directory exist, created. plot Logical. Whether plot split rasters. Default FALSE. extent_only Logical. TRUE, function returns extents split rasters instead raster data. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a raster object into a list of smaller rasters — split_raster","text":"list raster objects extents split rasters, depending value extent_only parameter.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a raster object into a list of smaller rasters — split_raster","text":"","code":"library(raster) logo <- raster(system.file(\"external/rlogo.grd\", package = \"raster\")) plot(logo, axes = FALSE, legend = FALSE, bty = \"n\",      box = FALSE, main = \"Original raster layer\")  # --------------------------------------------------  # Split into 3 rows and 3 columns logoSplit <- split_raster(     raster = logo, n_columns = 3, n_rows = 3, plot = TRUE)   print(logoSplit) # a list object of 9 items #> [[1]] #> class      : RasterLayer  #> dimensions : 26, 34, 884  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 34, 51, 77  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[2]] #> class      : RasterLayer  #> dimensions : 26, 34, 884  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 34, 68, 51, 77  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[3]] #> class      : RasterLayer  #> dimensions : 26, 33, 858  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 68, 101, 51, 77  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 32, 255  (min, max) #>  #>  #> [[4]] #> class      : RasterLayer  #> dimensions : 26, 34, 884  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 34, 25, 51  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[5]] #> class      : RasterLayer  #> dimensions : 26, 34, 884  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 34, 68, 25, 51  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[6]] #> class      : RasterLayer  #> dimensions : 26, 33, 858  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 68, 101, 25, 51  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[7]] #> class      : RasterLayer  #> dimensions : 25, 34, 850  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 34, 0, 25  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 37, 255  (min, max) #>  #>  #> [[8]] #> class      : RasterLayer  #> dimensions : 25, 34, 850  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 34, 68, 0, 25  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>  #> [[9]] #> class      : RasterLayer  #> dimensions : 25, 33, 825  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 68, 101, 0, 25  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : red  #> values     : 0, 255  (min, max) #>  #>   # --------------------------------------------------  # Merging split maps again logoSplit$fun <- mean logoSplit$na.rm <- TRUE logoSplit2 <- do.call(mosaic, logoSplit) par(mfrow = c(1, 1)) plot(logoSplit2, axes = FALSE, legend = FALSE, bty = \"n\",      box = FALSE, main = \"Merged raster layers\")   print({logoSplit2 - logo}) # No value difference! #> class      : RasterLayer  #> dimensions : 77, 101, 7777  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : layer  #> values     : 0, 0  (min, max) #>   # --------------------------------------------------  logoSplit <- split_raster(    logo, n_columns = 3, n_rows = 3, extent_only = TRUE) print(logoSplit) #> [[1]] #> class      : Extent  #> xmin       : 0  #> xmax       : 34  #> ymin       : 51  #> ymax       : 77  #>  #> [[2]] #> class      : Extent  #> xmin       : 34  #> xmax       : 68  #> ymin       : 51  #> ymax       : 77  #>  #> [[3]] #> class      : Extent  #> xmin       : 68  #> xmax       : 102  #> ymin       : 51  #> ymax       : 77  #>  #> [[4]] #> class      : Extent  #> xmin       : 0  #> xmax       : 34  #> ymin       : 25  #> ymax       : 51  #>  #> [[5]] #> class      : Extent  #> xmin       : 34  #> xmax       : 68  #> ymin       : 25  #> ymax       : 51  #>  #> [[6]] #> class      : Extent  #> xmin       : 68  #> xmax       : 102  #> ymin       : 25  #> ymax       : 51  #>  #> [[7]] #> class      : Extent  #> xmin       : 0  #> xmax       : 34  #> ymin       : -1  #> ymax       : 25  #>  #> [[8]] #> class      : Extent  #> xmin       : 34  #> xmax       : 68  #> ymin       : -1  #> ymax       : 25  #>  #> [[9]] #> class      : Extent  #> xmin       : 68  #> xmax       : 102  #> ymin       : -1  #> ymax       : 25  #>"},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a vector into smaller chunks — split_vector","title":"Split a vector into smaller chunks — split_vector","text":"function divides given vector specified number smaller chunks. useful partitioning data manageable pieces parallel processing tasks.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a vector into smaller chunks — split_vector","text":"","code":"split_vector(vector = NULL, n_splits = NULL, prefix = \"Chunk\")"},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a vector into smaller chunks — split_vector","text":"vector numeric character vector want split. n_splits Integer. Number chunks split vector . must exceed length vector. prefix Character. prefix names chunks returned list. Defaults \"Chunk\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a vector into smaller chunks — split_vector","text":"list vectors, vector represents chunk original vector. names list elements generated using specified prefix followed underscore chunk number.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a vector into smaller chunks — split_vector","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a vector into smaller chunks — split_vector","text":"","code":"split_vector(vector = seq_len(100), n_splits = 3) #> $Chunk_1 #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 #>  #> $Chunk_2 #>  [1] 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #> [26] 60 61 62 63 64 65 66 67 #>  #> $Chunk_3 #>  [1]  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86 #> [20]  87  88  89  90  91  92  93  94  95  96  97  98  99 100 #>   # -------------------------------------------  split_vector(vector = seq_len(100), n_splits = 2, prefix = \"T\") #> $T_1 #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #>  #> $T_2 #>  [1]  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69 #> [20]  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88 #> [39]  89  90  91  92  93  94  95  96  97  98  99 100 #>"},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"Signals errors rich context, wrapping rlang::abort(). includes: calling function name (applicable). User-defined metadata (e.g., vectors, lists, data frames, tibbles, terra::SpatRaster, raster::Raster, RasterStack, RasterBrick, sf objects, regression models, ggplot objects, S4 objects). Optional timestamps/dates. Optional backtraces aid debugging.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"","code":"stop_ctx(   message,   ...,   class = NULL,   call = NULL,   parent = NULL,   include_backtrace = TRUE,   cat_timestamp = TRUE,   cat_date = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"message Character. primary error message display. ... Named R objects include metadata. can various types, vectors, lists, data frames, tibbles, terra::SpatRaster, raster::Raster, RasterStack, RasterBrick, sf objects, regression models (e.g., lm, glm), ggplot objects, S4 objects, . Unnamed arguments cause error due .named = TRUE rlang::enquos(). NULL values displayed \"NULL\". class Character NULL. Subclass(es) error condition. Defaults NULL. call Call NULL. call causing error. Defaults caller's expression. parent Condition NULL. Parent error nesting. Defaults NULL. include_backtrace Logical. TRUE, includes compact backtrace. Default: TRUE. cat_timestamp Logical. TRUE, prepends timestamp (HH:MM:SS). Default: TRUE. cat_date Logical. TRUE, prepends date (YYYY-MM-DD). Default: FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"return; throws error via rlang::abort().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"metadata-output","dir":"Reference","previous_headings":"","what":"Metadata Output","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"metadata section error message displays provided object name, verbatim expression used, class, value: Object Name: name argument (e.g., file). Verbatim Expression: expression passed (e.g., \"data.csv\"). Class: class object, multiple classes concatenated using + (e.g., <tbl_df + tbl + data.frame>). Value: formatted output object, using methods like print(), summary(), glimpse(), str(), depending object type. example: Complex objects, data frames raster layers, display structure summary appropriate.","code":"----- Metadata -----   file [\"data.csv\"]: <character>   \"data.csv\"    type [\"missing_input\"]: <character>   \"missing_input\""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"","code":"# Basic error with metadata try(   stop_ctx(     message = \"File not found\", file = \"data.csv\",     type = \"missing_input\", foo = 1:3)) #> Error in try(stop_ctx(message = \"File not found\", file = \"data.csv\", type = \"missing_input\",  :  #>   File not found - 01:08:36 #>  #> ----- Metadata ----- #>  #> file [\"data.csv\"]: <character> #> data.csv #>  #> type [\"missing_input\"]: <character> #> missing_input #>  #> foo [1:3]: <integer> #> 1, 2, 3 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir)  # -------------------------------------------------------------------  # Include date in error message try(   stop_ctx(     message = \"File not found\", file = \"data.csv\",     type = \"missing_input\", cat_date = TRUE)) #> Error in try(stop_ctx(message = \"File not found\", file = \"data.csv\", type = \"missing_input\",  :  #>   File not found - 05/05/2025 01:08:36 #>  #> ----- Metadata ----- #>  #> file [\"data.csv\"]: <character> #> data.csv #>  #> type [\"missing_input\"]: <character> #> missing_input #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir)  # -------------------------------------------------------------------  # Complex objects as metadata terra_obj <- terra::rast() raster_obj <- raster::raster() sf_obj <- sf::st_point(c(0,0)) lm_obj <- lm(mpg ~ wt, data = mtcars) try(   stop_ctx(     message = \"File not found\", raster = raster_obj, terra = terra_obj,     data_frame = iris, matrix = as.matrix(iris), sf_obj = sf_obj,     lm_obj = lm_obj)) #> Error in try(stop_ctx(message = \"File not found\", raster = raster_obj,  :  #>   File not found - 01:08:36 #>  #> ----- Metadata ----- #>  #> raster [raster_obj]: <RasterLayer> #> class      : RasterLayer  #> dimensions : 180, 360, 64800  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #>  #> terra [terra_obj]: <SpatRaster> #> class       : SpatRaster  #> dimensions  : 180, 360, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  #> data_frame [iris]: <data.frame> #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s… #>  #> matrix [as.matrix(iris)]: <matrix + array> #>  chr [1:150, 1:5] \"5.1\" \"4.9\" \"4.7\" \"4.6\" \"5.0\" \"5.4\" \"4.6\" \"5.0\" \"4.4\" ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : NULL #>   ..$ : chr [1:5] \"Sepal.Length\" \"Sepal.Width\" \"Petal.Length\" \"Petal.Width\" ... #>  #> sf_obj [sf_obj]: <XY + POINT + sfg> #> 0, 0 #>  #> lm_obj [lm_obj]: <lm> #> Call: #> lm(formula = mpg ~ wt, data = mtcars) #> Coefficients: #> (Intercept)           wt   #>      37.285       -5.344   #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir)  # -------------------------------------------------------------------  # Error without backtrace try(   stop_ctx(message = \"Simple error\", include_backtrace = FALSE)) #> Error in try(stop_ctx(message = \"Simple error\", include_backtrace = FALSE)) :  #>   Simple error - 01:08:36  # -------------------------------------------------------------------  # S4 object as metadata setClass(\"Student\", slots = list(name = \"character\", age = \"numeric\")) student <- new(\"Student\", name = \"John Doe\", age = 23) try(   stop_ctx(     message = \"Student record error\",     metadata = student, type = \"invalid_data\")) #> Error in try(stop_ctx(message = \"Student record error\", metadata = student,  :  #>   Student record error - 01:08:36 #>  #> ----- Metadata ----- #>  #> metadata [student]: <Student> #>  Length   Class    Mode  #>       1 Student      S4  #>  #> type [\"invalid_data\"]: <character> #> invalid_data #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir)  # -------------------------------------------------------------------  # Nested function error with backtrace f3 <- function(x) {   stop_ctx(\"Non-numeric input in f3()\", input = x, include_backtrace = TRUE) } f2 <- function(y) f3(y + 1) f1 <- function(z) f2(z * 3)  # Output includes: \"Calling Function: f1\" before metadata try(f1(\"not a number\")) #> Error in value[[3L]](cond) :  #>   Error evaluating argument 'input': non-numeric argument to binary operator - 01:08:36 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             ├─base::try(f1(\"not a number\")) #>  34.                             │ └─base::tryCatch(...) #>  35.                             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler) #>  38.                             └─f1(\"not a number\") #>  39.                               └─f2(z * 3) #>  40.                                 └─f3(y + 1) #>  41.                                   └─ecokit::stop_ctx(\"Non-numeric input in f3()\", input = x, include_backtrace = TRUE) #>  42.                                     └─base::tryCatch(...) #>  43.                                       └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  44.                                         └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  45.                                           └─value[[3L]](cond) #> Caused by error in `z * 3`: #> ! non-numeric argument to binary operator  # -------------------------------------------------------------------  # Nested function error without metadata f3 <- function() stop_ctx(message = \"Error in f3()\") f2 <- function(y) f3() f1 <- function(z) f2()  # Output includes: \"Calling Function: f1\" before metadata try(f1()) #> Error in f3() : Error in f3() - 01:08:36 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             ├─base::try(f1()) #>  34.                             │ └─base::tryCatch(...) #>  35.                             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler) #>  38.                             └─f1() #>  39.                               └─f2() #>  40.                                 └─f3()"},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a system command in a cross-platform manner — system_command","title":"Run a system command in a cross-platform manner — system_command","text":"function executes system command, using either shell Windows system Linux. allows output command captured R object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a system command in a cross-platform manner — system_command","text":"","code":"system_command(command, r_object = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a system command in a cross-platform manner — system_command","text":"command Character. bash command executed. r_object Logical. Whether capture output command R object. TRUE (Default), output captured; FALSE, output printed console. ... Additional arguments passed either shell system function, depending operating system.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a system command in a cross-platform manner — system_command","text":"Depending value r_object, either output executed command R object NULL r_object FALSE output printed console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run a system command in a cross-platform manner — system_command","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a system command in a cross-platform manner — system_command","text":"","code":"# print working directory ecokit::system_command(\"pwd\") #> [1] \"/home/runner/work/ecokit/ecokit/docs/reference\"  # first 5 files on the working directory (A <- ecokit::system_command(\"ls | head -n 5\")) #> [1] \"OS.html\"                     \"add_cross_to_grid-1.png\"     #> [3] \"add_cross_to_grid-2.png\"     \"add_cross_to_grid.html\"      #> [5] \"add_diagonals_to_grid-1.png\"  (A <- ecokit::system_command(\"ls | head -n 5\", r_object = FALSE)) #> [1] 0"},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract longitude and latitude from string — text_to_coordinates","title":"Extract longitude and latitude from string — text_to_coordinates","text":"Extract longitude latitude string representing geographical point format \"POINT (longitude latitude)\" converts two-column tibble containing longitude latitude numeric values. names columns resulting tibble can customized. default names longitude latitude columns \"Longitude\" \"Latitude\", respectively.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract longitude and latitude from string — text_to_coordinates","text":"","code":"text_to_coordinates(text = NULL, name_x = \"Longitude\", name_y = \"Latitude\")"},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract longitude and latitude from string — text_to_coordinates","text":"text Character. Coordinates format \"POINT (longitude latitude)\". parameter required NULL. name_x, name_y Character. Name used longitude Longitude columns output tibble. Defaults \"Longitude\" \"Latitude\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract longitude and latitude from string — text_to_coordinates","text":"tibble two columns containing longitude latitude values extracted input string. names columns determined name_x name_y parameters. names provided, default names (\"Longitude\" \"Latitude\") used. two column tibble Longitude & Latitude","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract longitude and latitude from string — text_to_coordinates","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract longitude and latitude from string — text_to_coordinates","text":"","code":"c(\"POINT (11.761 46.286)\", \"POINT (14.8336 42.0422)\",   \"POINT (16.179999 38.427214)\") %>%  lapply(text_to_coordinates) #> [[1]] #> # A tibble: 1 × 2 #>   Longitude Latitude #>       <dbl>    <dbl> #> 1      11.8     46.3 #>  #> [[2]] #> # A tibble: 1 × 2 #>   Longitude Latitude #>       <dbl>    <dbl> #> 1      14.8     42.0 #>  #> [[3]] #> # A tibble: 1 × 2 #>   Longitude Latitude #>       <dbl>    <dbl> #> 1      16.2     38.4 #>   c(\"POINT (11.761 46.286)\", \"POINT (14.8336 42.0422)\",   \"POINT (16.179999 38.427214)\") %>%  lapply(text_to_coordinates, name_x = \"Long\", name_y = \"Lat\") #> [[1]] #> # A tibble: 1 × 2 #>    Long   Lat #>   <dbl> <dbl> #> 1  11.8  46.3 #>  #> [[2]] #> # A tibble: 1 × 2 #>    Long   Lat #>   <dbl> <dbl> #> 1  14.8  42.0 #>  #> [[3]] #> # A tibble: 1 × 2 #>    Long   Lat #>   <dbl> <dbl> #> 1  16.2  38.4 #>"}]
