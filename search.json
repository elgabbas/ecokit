[{"path":"https://elgabbas.github.io/ecokit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Ahmed El-Gabbas Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elgabbas.github.io/ecokit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ahmed El-Gabbas. Author, maintainer.","code":""},{"path":"https://elgabbas.github.io/ecokit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"El-Gabbas (2025). ecokit: Tools Ecological General Utilities. R package version 0.1.0, https://github.com/elgabbas/ecokit.","code":"@Manual{,   title = {ecokit: Tools for Ecological and General Utilities},   author = {Ahmed El-Gabbas},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/elgabbas/ecokit}, }"},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"ecokit","text":"ecokit R package offering collection utility functions tailored ecologists R programmers. provides tools spatial data manipulation, package management, general R workflows, making easier handle ecological datasets. Explore full documentation complete list functions.","code":""},{"path":"https://elgabbas.github.io/ecokit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ecokit","text":"can install development version ecokit GitHub using devtools package:","code":"# Install devtools if not already installed if (!require(\"devtools\")) install.packages(\"devtools\")  # Install ecokit from GitHub devtools::install_github(\"elgabbas/ecokit\", dependencies = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"ecokit","text":"ecokit open-source project, welcome contributions community! encounter issues, suggestions, want add new features, please: Report issues suggest features GitHub issue tracker. Submit pull requests bug fixes enhancements via GitHub repository. Contact directly elgabbas[]outlook[dot]com collaboration ideas questions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":null,"dir":"Reference","previous_headings":"","what":"Current operating system — os","title":"Current operating system — os","text":"function returns name current operating system R session running .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current operating system — os","text":"","code":"os()"},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current operating system — os","text":"character string representing name operating system.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/OS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current operating system — os","text":"","code":"os() #> [1] \"Linux\""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"Creates multilinestring sf objects representing geometric features (crosses diagonals) within centre grid cell input spatial grid.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"","code":"add_cross_to_grid(sf_object = NULL)  add_diagonals_to_grid(sf_object = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"sf_object sf object (tibble) polygon geometries representing grid cells. NULL, function stops error.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"add_cross_to_grid: sf object multilinestring geometries representing crosses centre grid cell, retaining input CRS. add_diagonals_to_grid: sf object multilinestring geometries representing diagonal -diagonal lines grid cell, retaining input CRS.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"following functions included: add_cross_to_grid: Creates multilinestring sf object crosses (horizontal vertical lines) centre grid cell. add_diagonals_to_grid: Creates multilinestring sf object diagonal -diagonal lines grid cell.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"functions require sf, dplyr, purrr, tibble, tidyr packages installed loaded.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_geometric_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Geometric Features to Spatial Grid Cells — add_geometric_features","text":"","code":"# loading packages ecokit::load_packages(dplyr, sf, ggplot2)  # --------------------------------------------- # Create a 5x5 grid # ---------------------------------------------  grid_original <- sf::st_make_grid(     sf::st_bbox(c(xmin = 0, ymin = 0, xmax = 10, ymax = 10), crs = 4326),     n = c(5, 5)) %>%   sf::st_sf(geometry = .)  # --------------------------------------------- # Add crosses to grid # ---------------------------------------------  grid_cross <- add_cross_to_grid(grid_original) ggplot2::ggplot() +   ggplot2::geom_sf(     data = grid_original, mapping = ggplot2::aes(), color = \"black\",     linewidth = 0.75, fill = \"transparent\") +   ggplot2::geom_sf(     data = grid_cross, mapping = ggplot2::aes(), color = \"red\",     linewidth = 0.75, inherit.aes = TRUE, linetype = 3) +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()   # --------------------------------------------- # Add diagonals to grid # ---------------------------------------------  grid_diagonals <- add_diagonals_to_grid(grid_original) ggplot2::ggplot() +   ggplot2::geom_sf(     data = grid_original, mapping = ggplot2::aes(), color = \"black\",     linewidth = 0.75, fill = \"transparent\") +   ggplot2::geom_sf(     data = grid_diagonals, mapping = ggplot2::aes(), color = \"red\",     linewidth = 0.75, inherit.aes = TRUE, linetype = 3) +   ggplot2::scale_x_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::scale_y_continuous(expand = c(0, 0, 0, 0), limits = c(0, 10)) +   ggplot2::theme_minimal()"},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an image to an existing plot in R — add_image_to_plot","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function allows user add image existing plot R specifying image object, position, size. function calculates necessary dimensions places image accordingly. function uses existing plot's coordinate system accounts current plot dimensions ensure accurate placement image. also allows interpolation, can improve visual quality image.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an image to an existing plot in R — add_image_to_plot","text":"","code":"add_image_to_plot(image_object, x, y, width, interpolate = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add an image to an existing plot in R — add_image_to_plot","text":"source code function taken stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an image to an existing plot in R — add_image_to_plot","text":"image_object image object added plot, expected array-like structure (e.g., read png::readPNG jpeg::readJPEG). x, y Numeric, x-coordinate y-coordinate (plot units) centre image placed. width Numeric, desired width image plot units (pixels inches). function calculate corresponding height preserve image's aspect ratio. interpolate Logical, whether apply linear interpolation image drawing. Defaults TRUE. Passed directly graphics::rasterImage. Interpolation can improve image quality may take longer render.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function return value modifies current plot adding image.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add an image to an existing plot in R — add_image_to_plot","text":"function stop error message required arguments (image_object, x, y, width) NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_image_to_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an image to an existing plot in R — add_image_to_plot","text":"","code":"load_packages(png)  URL <- paste0(\"https://upload.wikimedia.org/wikipedia/commons/\",     \"e/e1/Jupiter_%28transparent%29.png\") z <- tempfile() utils::download.file(URL, z, mode = \"wb\", quiet = TRUE) pic <- png::readPNG(z) file.remove(z) # cleanup #> [1] TRUE  image(volcano) add_image_to_plot(pic, x = 0.3, y = 0.5, width = 0.2) add_image_to_plot(pic, x = 0.7, y = 0.7, width = 0.2) add_image_to_plot(pic, x = 0.7, y = 0.2, width = 0.1)   # clean up unlink(z)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a horizontal or vertical line to the current plot — add_line","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Add horizontal vertical line current plot","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a horizontal or vertical line to the current plot — add_line","text":"","code":"add_line(at = NULL, outer = FALSE, horizontal = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add a horizontal or vertical line to the current plot — add_line","text":"source code function taken stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Numeric; relative location line plotted. NULL. outer Logical; TRUE, line plotted outside plotting area. Default FALSE. horizontal Logical; TRUE (default), horizontal line added. FALSE, vertical line added. ... Additional graphical parameters passed graphics::abline.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a horizontal or vertical line to the current plot — add_line","text":"Invisible; function called side effect drawing current plot.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a horizontal or vertical line to the current plot — add_line","text":"","code":"# Horizontal line par(oma = c(1, 1, 1, 1), mar = c(3, 3, 1, 1)) plot(seq_len(100))  # add horizontal line add_line(at = 0.25) # add horizontal line that extends outside the plot area add_line(at = 0.5, outer = TRUE) # the same line but with a different line width and colour add_line(at = 0.75, outer = TRUE, lwd = 3, col = \"red\")   # ---------------------------------------------  plot(seq_len(100)) # add vertical line add_line(horizontal = FALSE, at = 0.25) # add vertical line that extends outside the plot area add_line(horizontal = FALSE, at = 0.5, outer = TRUE) # the same line but with a different line width and colour add_line(horizontal = FALSE, at = 0.75, outer = TRUE, lwd = 3, col = \"red\")"},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add missing columns to a data frame with specified fill values — add_missing_columns","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"function checks data frame missing columns specified user. missing, adds columns data frame, filling specified value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"","code":"add_missing_columns(data, fill_value = NA_character_, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"data data frame missing columns added. parameter NULL. fill_value value fill missing columns . parameter defaults NA_character_, can changed scalar value required. ... Column names character strings.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"data frame missing columns added, missing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/add_missing_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add missing columns to a data frame with specified fill values — add_missing_columns","text":"","code":"load_packages(dplyr, tibble)  # example data (mtcars2 <- dplyr::select(mtcars, seq_len(3)) %>%   head() %>%   tibble::as_tibble()) #> # A tibble: 6 × 3 #>     mpg   cyl  disp #>   <dbl> <dbl> <dbl> #> 1  21       6   160 #> 2  21       6   160 #> 3  22.8     4   108 #> 4  21.4     6   258 #> 5  18.7     8   360 #> 6  18.1     6   225  mtcars2 %>%  add_missing_columns(fill_value = NA_character_, A, B, C) %>%  add_missing_columns(fill_value = as.integer(10), D) #> # A tibble: 6 × 7 #>     mpg   cyl  disp A     B     C         D #>   <dbl> <dbl> <dbl> <chr> <chr> <chr> <int> #> 1  21       6   160 NA    NA    NA       10 #> 2  21       6   160 NA    NA    NA       10 #> 3  22.8     4   108 NA    NA    NA       10 #> 4  21.4     6   258 NA    NA    NA       10 #> 5  18.7     8   360 NA    NA    NA       10 #> 6  18.1     6   225 NA    NA    NA       10  AddCols <- c(\"Add1\", \"Add2\") mtcars2 %>%  add_missing_columns(fill_value = NA_real_, AddCols) #> # A tibble: 6 × 5 #>     mpg   cyl  disp  Add1  Add2 #>   <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21       6   160    NA    NA #> 2  21       6   160    NA    NA #> 3  22.8     4   108    NA    NA #> 4  21.4     6   258    NA    NA #> 5  18.7     8   360    NA    NA #> 6  18.1     6   225    NA    NA"},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of objects in memory — all_objects_sizes","title":"Size of objects in memory — all_objects_sizes","text":"function calculates size objects global environment R using lobstr::obj_size prints summary objects greater specified size threshold. useful memory management identifying large objects workspace.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of objects in memory — all_objects_sizes","text":"","code":"all_objects_sizes(   greater_than = 0L,   in_function = FALSE,   n_decimals = 2L,   n_objects = Inf )"},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of objects in memory — all_objects_sizes","text":"greater_than Numeric. Size threshold MB. objects larger value shown. Default 0, means objects shown. greater_than must non-negative number. in_function Logical. controls scope function. indicates whether execution done inside outside function. Defaults FALSE show sizes objects global environment. set TRUE, sizes objects function returned. n_decimals Integer; representing number decimal places show size_mb column. Defaults 2. n_objects Number objects show. Defaults Inf meaning show available objects.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of objects in memory — all_objects_sizes","text":"function prints tibble containing variables' names, sizes MB, percentage total size variables. objects meet criteria, message printed instead. Output sorted descending order size objects. function also prints total size variables number objects examined.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Size of objects in memory — all_objects_sizes","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/all_objects_sizes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Size of objects in memory — all_objects_sizes","text":"","code":"AA1 <<- rep(seq_len(1000), 10000) AA2 <<- rep(seq_len(1000), 100)  # ---------------------------------------------------- # All objects in memory # ----------------------------------------------------  all_objects_sizes() #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object       object_class size_mb percent #>   <chr>        <chr>          <dbl>   <dbl> #> 1 AA1          integer        38.15   99.01 #> 2 AA2          integer         0.38    0.99 #> 3 .Random.seed integer         0       0      # ---------------------------------------------------- # Objects larger than 1 MB # ----------------------------------------------------  all_objects_sizes(greater_than = 1) #> --------------------------------------------------- #> \t1 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 1 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 AA1    integer        38.15   99.01   # ---------------------------------------------------- # Objects larger than 50 MB # ----------------------------------------------------  all_objects_sizes(greater_than = 50) #> No object has Size > 50 MB #>    # ---------------------------------------------------- # When called with another function, it shows the objects only available # within the function # ----------------------------------------------------  TestFun <- function(XX = 10) {   Y <- 20   C <- matrix(data = seq_len(10000), nrow = 100, ncol = 100)   all_objects_sizes(in_function = TRUE) }  TestFun() #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 C      matrix_array    0.04     100 #> 2 XX     numeric         0          0 #> 3 Y      numeric         0          0  TestFun(XX = \"TEST\") #> --------------------------------------------------- #> \t3 object(s) fulfil the criteria #> --------------------------------------------------- #> # A tibble: 3 × 4 #>   object object_class size_mb percent #>   <chr>  <chr>          <dbl>   <dbl> #> 1 C      matrix_array    0.04     100 #> 2 XX     character       0          0 #> 3 Y      numeric         0          0"},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function over a list or vector with optional silence — apply_functions","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"Wrapper functions around base base::lapply base::sapply functions allow application function list vector. extends original functions providing option suppress output, effectively allowing operations user may care return value (e.g., plotting). behaviour similar purrr::walk function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"","code":"lapply_(x, fun, silent = TRUE, ...)  sapply_(x, fun, simplify = TRUE, silent = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"x vector (atomic list) expression object. objects (including classed objects) coerced base::.list. fun function applied element x. case functions like +, %*%, function name must backquoted quoted. silent logical value. TRUE, function suppresses return value fun returns NULL invisibly. FALSE, function returns result applying fun X. ... Additional arguments passed fun. simplify Logical character string; result simplified vector, matrix higher dimensional array possible?","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"silent TRUE, returns NULL invisibly, otherwise returns list length x, element result applying fun corresponding element x.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/apply_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function over a list or vector with optional silence — apply_functions","text":"","code":"par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) lapply(list(x = 100:110, y = 110:120), function(V) {     plot(V, las = 1, main = \"lapply\") })  #> $x #> NULL #>  #> $y #> NULL #>   # -------------------------------------------  par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) lapply_(list(x = 100:110, y = 110:120), function(V) {     plot(V, las = 1, main = \"lapply_\") })   # -------------------------------------------  #' par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) sapply(     list(x = 100:110, y = 110:120),     function(V) {         plot(V, las = 1, main = \"sapply\")         })  #> $x #> NULL #>  #> $y #> NULL #>   # -------------------------------------------  # nothing returned or printed, only the plotting par(mfrow = c(1,2), oma = c(0.25, 0.25, 0.25, 0.25), mar = c(3,3,3,1)) sapply_(   list(x = 100:110, y = 110:120),   function(V) {     plot(V, las = 1, main = \"sapply_\")     })"},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"Sorts rows dataframe based one columns using alphanumeric sorting order. Allows specifying ascending descending order sorting column individually.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"","code":"arrange_alphanum(   data = NULL,   ...,   desc = FALSE,   na_last = TRUE,   blank_last = FALSE,   scientific = TRUE )"},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"data dataframe tibble sorted. ... Unquoted names columns sort (e.g., v1, v2, etc.) Sorting done sequentially based order columns provided. desc Logical value vector. single TRUE, sorts specified columns descending alphanumeric order. single FALSE (default), sorts ascending order. logical vector, length must match number columns specified ..., determining sort order column respectively (e.g., c(FALSE, TRUE) ascending first column, descending second). NA values desc treated FALSE (ascending). Columns must character, numeric, factor types sorting. na_last controlling treatment NA values. TRUE, missing values data put last; FALSE, put first; NA, removed. See gtools::mixedsort details. blank_last controlling treatment blank values. TRUE, blank values data put last; FALSE, put first; NA, removed. See gtools::mixedsort details. scientific logical. exponential notation allowed numeric values. See gtools::mixedsort details.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"dataframe sorted according specified columns orders.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"arrange_alphanum function sorts dataframe rows alphanumerically, handling mixed numeric character strings correctly (e.g., \"A1\", \"A10\", \"A2\" \"A1\", \"A2\", \"A10\"), whereas dplyr::arrange uses standard lexicographic sorting, may order incorrectly (e.g., \"A1\", \"A10\", \"A2\").","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/arrange_alphanum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange Dataframe Rows Alphanumerically — arrange_alphanum","text":"","code":"# increase the number of printed rows options(pillar.print_max = 40) load_packages(dplyr, tidyr, tibble)  # create a sample dataframe set.seed(100) (df <- tidyr::expand_grid(   v1 = c(\"A1\", \"A2\", \"A10\", \"A010\", \"A25\"),   v2 = c(\"P1\", \"P2\"), v3 = c(10, 5, 1, 15)) %>%   dplyr::slice_sample(n = 40)) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A2    P1        5 #>  2 A25   P2        5 #>  3 A010  P1       10 #>  4 A2    P2        5 #>  5 A10   P2        1 #>  6 A10   P2        5 #>  7 A1    P2        5 #>  8 A1    P1       15 #>  9 A25   P1       15 #> 10 A25   P1        5 #> 11 A1    P1        5 #> 12 A1    P2        1 #> 13 A010  P2       10 #> 14 A010  P2       15 #> 15 A2    P1        1 #> 16 A10   P2       15 #> 17 A10   P1        5 #> 18 A2    P1       15 #> 19 A1    P1        1 #> 20 A10   P1        1 #> 21 A1    P2       15 #> 22 A25   P2        1 #> 23 A010  P2        5 #> 24 A25   P1       10 #> 25 A10   P1       10 #> 26 A25   P2       10 #> 27 A2    P2       15 #> 28 A1    P2       10 #> 29 A010  P1        5 #> 30 A010  P1       15 #> 31 A2    P1       10 #> 32 A2    P2        1 #> 33 A10   P2       10 #> 34 A010  P2        1 #> 35 A2    P2       10 #> 36 A010  P1        1 #> 37 A10   P1       15 #> 38 A25   P2       15 #> 39 A1    P1       10 #> 40 A25   P1        1  # sort by v1 (ascending) # arrange function does not sort alphanumerically dplyr::arrange(df, v1) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A010  P1       10 #>  2 A010  P2       10 #>  3 A010  P2       15 #>  4 A010  P2        5 #>  5 A010  P1        5 #>  6 A010  P1       15 #>  7 A010  P2        1 #>  8 A010  P1        1 #>  9 A1    P2        5 #> 10 A1    P1       15 #> 11 A1    P1        5 #> 12 A1    P2        1 #> 13 A1    P1        1 #> 14 A1    P2       15 #> 15 A1    P2       10 #> 16 A1    P1       10 #> 17 A10   P2        1 #> 18 A10   P2        5 #> 19 A10   P2       15 #> 20 A10   P1        5 #> 21 A10   P1        1 #> 22 A10   P1       10 #> 23 A10   P2       10 #> 24 A10   P1       15 #> 25 A2    P1        5 #> 26 A2    P2        5 #> 27 A2    P1        1 #> 28 A2    P1       15 #> 29 A2    P2       15 #> 30 A2    P1       10 #> 31 A2    P2        1 #> 32 A2    P2       10 #> 33 A25   P2        5 #> 34 A25   P1       15 #> 35 A25   P1        5 #> 36 A25   P2        1 #> 37 A25   P1       10 #> 38 A25   P2       10 #> 39 A25   P2       15 #> 40 A25   P1        1  # arrange_alphanum function sorts alphanumerically arrange_alphanum(df, v1) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A1    P2        5 #>  2 A1    P1       15 #>  3 A1    P1        5 #>  4 A1    P2        1 #>  5 A1    P1        1 #>  6 A1    P2       15 #>  7 A1    P2       10 #>  8 A1    P1       10 #>  9 A2    P1        5 #> 10 A2    P2        5 #> 11 A2    P1        1 #> 12 A2    P1       15 #> 13 A2    P2       15 #> 14 A2    P1       10 #> 15 A2    P2        1 #> 16 A2    P2       10 #> 17 A010  P1       10 #> 18 A010  P2       10 #> 19 A010  P2       15 #> 20 A010  P2        5 #> 21 A010  P1        5 #> 22 A010  P1       15 #> 23 A010  P2        1 #> 24 A010  P1        1 #> 25 A10   P2        1 #> 26 A10   P2        5 #> 27 A10   P2       15 #> 28 A10   P1        5 #> 29 A10   P1        1 #> 30 A10   P1       10 #> 31 A10   P2       10 #> 32 A10   P1       15 #> 33 A25   P2        5 #> 34 A25   P1       15 #> 35 A25   P1        5 #> 36 A25   P2        1 #> 37 A25   P1       10 #> 38 A25   P2       10 #> 39 A25   P2       15 #> 40 A25   P1        1 # arrange_alphanum(df, v1, desc = FALSE)                    # the same # arrange_alphanum(df, v1, desc = NA)                       # the same  # sort first by v2 (ascending), then by v1 (ascending) arrange_alphanum(df, v2, v1) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A1    P1       15 #>  2 A1    P1        5 #>  3 A1    P1        1 #>  4 A1    P1       10 #>  5 A2    P1        5 #>  6 A2    P1        1 #>  7 A2    P1       15 #>  8 A2    P1       10 #>  9 A010  P1       10 #> 10 A010  P1        5 #> 11 A010  P1       15 #> 12 A010  P1        1 #> 13 A10   P1        5 #> 14 A10   P1        1 #> 15 A10   P1       10 #> 16 A10   P1       15 #> 17 A25   P1       15 #> 18 A25   P1        5 #> 19 A25   P1       10 #> 20 A25   P1        1 #> 21 A1    P2        5 #> 22 A1    P2        1 #> 23 A1    P2       15 #> 24 A1    P2       10 #> 25 A2    P2        5 #> 26 A2    P2       15 #> 27 A2    P2        1 #> 28 A2    P2       10 #> 29 A010  P2       10 #> 30 A010  P2       15 #> 31 A010  P2        5 #> 32 A010  P2        1 #> 33 A10   P2        1 #> 34 A10   P2        5 #> 35 A10   P2       15 #> 36 A10   P2       10 #> 37 A25   P2        5 #> 38 A25   P2        1 #> 39 A25   P2       10 #> 40 A25   P2       15 # arrange_alphanum(df, v2, v1, desc = FALSE)                # the same # arrange_alphanum(df, v2, v1, desc = c(FALSE, FALSE))      # the same  # sort by v2 (ascending), then v1 (descending) arrange_alphanum(df, v2, v1, desc = c(FALSE, TRUE)) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A25   P1       15 #>  2 A25   P1        5 #>  3 A25   P1       10 #>  4 A25   P1        1 #>  5 A10   P1        5 #>  6 A10   P1        1 #>  7 A10   P1       10 #>  8 A10   P1       15 #>  9 A010  P1       10 #> 10 A010  P1        5 #> 11 A010  P1       15 #> 12 A010  P1        1 #> 13 A2    P1        5 #> 14 A2    P1        1 #> 15 A2    P1       15 #> 16 A2    P1       10 #> 17 A1    P1       15 #> 18 A1    P1        5 #> 19 A1    P1        1 #> 20 A1    P1       10 #> 21 A25   P2        5 #> 22 A25   P2        1 #> 23 A25   P2       10 #> 24 A25   P2       15 #> 25 A10   P2        1 #> 26 A10   P2        5 #> 27 A10   P2       15 #> 28 A10   P2       10 #> 29 A010  P2       10 #> 30 A010  P2       15 #> 31 A010  P2        5 #> 32 A010  P2        1 #> 33 A2    P2        5 #> 34 A2    P2       15 #> 35 A2    P2        1 #> 36 A2    P2       10 #> 37 A1    P2        5 #> 38 A1    P2        1 #> 39 A1    P2       15 #> 40 A1    P2       10  # sort by v2 (descending), then v1 (ascending) arrange_alphanum(df, v2, v1, desc = c(TRUE, FALSE)) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A1    P2        5 #>  2 A1    P2        1 #>  3 A1    P2       15 #>  4 A1    P2       10 #>  5 A2    P2        5 #>  6 A2    P2       15 #>  7 A2    P2        1 #>  8 A2    P2       10 #>  9 A010  P2       10 #> 10 A010  P2       15 #> 11 A010  P2        5 #> 12 A010  P2        1 #> 13 A10   P2        1 #> 14 A10   P2        5 #> 15 A10   P2       15 #> 16 A10   P2       10 #> 17 A25   P2        5 #> 18 A25   P2        1 #> 19 A25   P2       10 #> 20 A25   P2       15 #> 21 A1    P1       15 #> 22 A1    P1        5 #> 23 A1    P1        1 #> 24 A1    P1       10 #> 25 A2    P1        5 #> 26 A2    P1        1 #> 27 A2    P1       15 #> 28 A2    P1       10 #> 29 A010  P1       10 #> 30 A010  P1        5 #> 31 A010  P1       15 #> 32 A010  P1        1 #> 33 A10   P1        5 #> 34 A10   P1        1 #> 35 A10   P1       10 #> 36 A10   P1       15 #> 37 A25   P1       15 #> 38 A25   P1        5 #> 39 A25   P1       10 #> 40 A25   P1        1  # sort by v2 (descending), v1 (descending) arrange_alphanum(df, v2, v1, desc = TRUE) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A25   P2        5 #>  2 A25   P2        1 #>  3 A25   P2       10 #>  4 A25   P2       15 #>  5 A10   P2        1 #>  6 A10   P2        5 #>  7 A10   P2       15 #>  8 A10   P2       10 #>  9 A010  P2       10 #> 10 A010  P2       15 #> 11 A010  P2        5 #> 12 A010  P2        1 #> 13 A2    P2        5 #> 14 A2    P2       15 #> 15 A2    P2        1 #> 16 A2    P2       10 #> 17 A1    P2        5 #> 18 A1    P2        1 #> 19 A1    P2       15 #> 20 A1    P2       10 #> 21 A25   P1       15 #> 22 A25   P1        5 #> 23 A25   P1       10 #> 24 A25   P1        1 #> 25 A10   P1        5 #> 26 A10   P1        1 #> 27 A10   P1       10 #> 28 A10   P1       15 #> 29 A010  P1       10 #> 30 A010  P1        5 #> 31 A010  P1       15 #> 32 A010  P1        1 #> 33 A2    P1        5 #> 34 A2    P1        1 #> 35 A2    P1       15 #> 36 A2    P1       10 #> 37 A1    P1       15 #> 38 A1    P1        5 #> 39 A1    P1        1 #> 40 A1    P1       10 # arrange_alphanum(df, v2, v1, desc = c(TRUE, TRUE))        # the same  # sort by v2 (descending), v1 (ascending), v3 (descending) arrange_alphanum(df, v2, v1, v3, desc = c(TRUE, FALSE, TRUE)) #> # A tibble: 40 × 3 #>    v1    v2       v3 #>    <chr> <chr> <dbl> #>  1 A1    P2       15 #>  2 A1    P2       10 #>  3 A1    P2        5 #>  4 A1    P2        1 #>  5 A2    P2       15 #>  6 A2    P2       10 #>  7 A2    P2        5 #>  8 A2    P2        1 #>  9 A010  P2       15 #> 10 A010  P2       10 #> 11 A010  P2        5 #> 12 A010  P2        1 #> 13 A10   P2       15 #> 14 A10   P2       10 #> 15 A10   P2        5 #> 16 A10   P2        1 #> 17 A25   P2       15 #> 18 A25   P2       10 #> 19 A25   P2        5 #> 20 A25   P2        1 #> 21 A1    P1       15 #> 22 A1    P1       10 #> 23 A1    P1        5 #> 24 A1    P1        1 #> 25 A2    P1       15 #> 26 A2    P1       10 #> 27 A2    P1        5 #> 28 A2    P1        1 #> 29 A010  P1       15 #> 30 A010  P1       10 #> 31 A010  P1        5 #> 32 A010  P1        1 #> 33 A10   P1       15 #> 34 A10   P1       10 #> 35 A10   P1        5 #> 36 A10   P1        1 #> 37 A25   P1       15 #> 38 A25   P1       10 #> 39 A25   P1        5 #> 40 A25   P1        1  # -----------------------------------------------  # Example with NA and blank strings (df_special <- tibble::tibble(v1 = c(\"A\", \"\", \"B\", NA, \"C\"))) #> # A tibble: 5 × 1 #>   v1    #>   <chr> #> 1 \"A\"   #> 2 \"\"    #> 3 \"B\"   #> 4  NA   #> 5 \"C\"    # sort with NA first, blanks first (default) arrange_alphanum(df_special, v1, na_last = FALSE, blank_last = FALSE) #> # A tibble: 5 × 1 #>   v1    #>   <chr> #> 1 \"\"    #> 2 \"A\"   #> 3 \"B\"   #> 4 \"C\"   #> 5  NA    # sort with NA last, blanks last arrange_alphanum(df_special, v1, na_last = TRUE, blank_last = TRUE) #> # A tibble: 5 × 1 #>   v1    #>   <chr> #> 1 \"A\"   #> 2 \"B\"   #> 3 \"C\"   #> 4 \"\"    #> 5  NA"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign environment variables from a .env file — assign_env_vars","title":"Assign environment variables from a .env file — assign_env_vars","text":"Reads environment variables .env file assigns R variables based data frame specifying variable names, environment variable keys, optional directory file checks. Facilitates structured management environment variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign environment variables from a .env file — assign_env_vars","text":"","code":"assign_env_vars(env_file = \".env\", env_variables_data = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign environment variables from a .env file — assign_env_vars","text":"env_file Character. Path environment file containing key-value pairs (e.g., KEY=VALUE). Defaults .env. env_variables_data data.frame. data frame tibble columns var_name (character, R variable name), value (character, environment variable key .env), check_dir (logical, check value directory), check_file (logical, check value file). row defines variable assign optional validation.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign environment variables from a .env file — assign_env_vars","text":"Returns invisible(NULL). Used side effect assigning variables .env file envir based env_variables_data.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Assign environment variables from a .env file — assign_env_vars","text":".env file must contain key-value pairs (e.g., DATA_PATH=/path//data). var_name must start letter contain letters, numbers, dots, underscores. one check_dir check_file can TRUE per row.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign environment variables from a .env file — assign_env_vars","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_env_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign environment variables from a .env file — assign_env_vars","text":"","code":"load_packages(tibble, dplyr, fs)  # Create a temporary file and directory  tmp_dir <- fs::path_temp(\"assign_env_vars\") fs::dir_create(tmp_dir) tmp_file <- ecokit::normalize_path(tempfile(fileext = \".txt\")) fs::file_create(tmp_file)  # Create a minimal .env file tmp_env_file <- tempfile(fileext = \".env\") c(paste0(\"MY_FILE=\", tmp_file), paste0(\"MY_DIR=\", tmp_dir)) %>%   writeLines(tmp_env_file) rm(tmp_dir, tmp_file, envir = environment())  # contents of the .env file readLines(tmp_env_file) #> [1] \"MY_FILE=/tmp/RtmpXTVHCP/file243e5eff1cfa.txt\" #> [2] \"MY_DIR=/tmp/RtmpXTVHCP/assign_env_vars\"        # Define simple environment variables data (env_vars <- tibble::tibble(   var_name = c(\"my_file\", \"my_dir\"),   value = c(\"MY_FILE\", \"MY_DIR\"),   check_dir = c(FALSE, TRUE),   check_file = c(TRUE, FALSE))) #> # A tibble: 2 × 4 #>   var_name value   check_dir check_file #>   <chr>    <chr>   <lgl>     <lgl>      #> 1 my_file  MY_FILE FALSE     TRUE       #> 2 my_dir   MY_DIR  TRUE      FALSE       ls() #> [1] \"env_vars\"     \"tmp_env_file\"  # Assign environment variables assign_env_vars(env_file = tmp_env_file, env_variables_data = env_vars) ls() #> [1] \"env_vars\"     \"my_dir\"       \"my_file\"      \"tmp_env_file\"  # Verify my_file #> [1] \"/tmp/RtmpXTVHCP/file243e5eff1cfa.txt\" my_dir #> [1] \"/tmp/RtmpXTVHCP/assign_env_vars\"  # clean up fs::dir_delete(fs::path_temp(\"assign_env_vars\"))"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"function checks given variable exists specified environment (global environment default). variable exist, assigns given value . variable already exists, prints current value variable. function designed prevent overwriting existing variables unintentionally.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"","code":"assign_if_not_exist(variable, value, environment = globalenv())"},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"variable Character; name variable checked potentially assigned value. value ; value assigned variable already exist. environment environment; environment check existence variable potentially assign value. Defaults global environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"function explicitly returns NULL, primary effect side-effect assigning value variable environment printing current value existing variable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/assign_if_not_exist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign a value to a variable if it does not already exist in the specified environment — assign_if_not_exist","text":"","code":"load_packages(terra)  exists(\"x\") #> [1] FALSE assign_if_not_exist(variable = \"x\", value = TRUE) exists(\"x\") #> [1] TRUE print(x) #> [1] TRUE  # --------------------------------------------------  y <- 10 # y exists and thus its value was not changed assign_if_not_exist(variable = \"y\", value = TRUE) print(y) #> [1] 10  # --------------------------------------------------  assign_if_not_exist(   variable = \"R\", value = terra::rast(nrows = 10, ncols = 10)) print(R) #> class       : SpatRaster  #> size        : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)"},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read command line arguments passed to an R script — bash_variables","title":"Read command line arguments passed to an R script — bash_variables","text":"Reads command line arguments passed R script executed via command line (Rscript) return name value argument tibble.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read command line arguments passed to an R script — bash_variables","text":"","code":"bash_variables()"},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read command line arguments passed to an R script — bash_variables","text":"tibble two columns: \"name\" \"value\", containing parsed command line arguments. arguments provided, empty tibble returned.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read command line arguments passed to an R script — bash_variables","text":"use bash_variables, include R script run script Rscript command line arguments format variable=value. function parses argument returns tibble columns \"name\" \"value\". can access values needed. Usage: Create R script (e.g., script.R):   Run script:   Output:   Argument Format: Arguments must variable=value (e.g., input_file=data.csv). Variable names must valid R names: start letter underscore, followed letters, numbers, underscores (e.g., max_iter, _flag). Values can string, including empty strings (e.g., config_file=). Values assigned character strings; convert types script needed (e.g., .numeric(n_iterations) numbers). Valid Commands:   Invalid Commands (cause errors):   Notes: returned tibble contains parsed arguments; can convert values types needed (e.g., .numeric(args$value[args$name == \"n_iterations\"])).","code":"library(ecokit)      load_packages(stringr, dplyr, purrr, tibble)      # read command line arguments     args <- ecokit::bash_variables()      # Access variables from the tibble     cat(\"Input:\", args$value[args$name == \"input_file\"], \"\\n\")     n_iterations <- as.numeric(args$value[args$name == \"n_iterations\"])     cat(\"Iterations:\", n_iterations, \"\\n\") Rscript script.R input_file=data.csv n_iterations=100 Input: data.csv     Iterations: 100 # Assigns: `data_path = \"/home/data\"`, `output_dir = \"results\"`,     # `n_threads = \"8\"`.     Rscript script.R data_path=/home/data output_dir=results n_threads=8      # Assigns: `debug = \"TRUE\"`, `config_file = \"\"`.     Rscript script.R debug=TRUE config_file=      # Assigns: `model_type = \"linear\"`.     Rscript script.R model_type=linear      # No arguments; prints message: \"No command line arguments provided\".     Rscript script.R # Error: \"Invalid argument format... got: input_file, data.csv\".     Rscript script.R input_file data.csv      # Error: \"Invalid argument format... got: 1st_model=linear\".     Rscript script.R 1st_model=linear      # Error: \"Invalid argument format... got: input file=data.csv\"     Rscript script.R input file=data.csv      # Error: \"Variable names cannot be empty\".     Rscript script.R =data.csv"},{"path":"https://elgabbas.github.io/ecokit/reference/bash_variables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read command line arguments passed to an R script — bash_variables","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"function constructs Well-Known Text (WKT) string representing polygon outlines specified boundaries. used define area interest downloading GBIF data rgbif::pred_within() function.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"","code":"boundary_to_wkt(left = NULL, right = NULL, bottom = NULL, top = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"left, right, bottom, top Numeric, left, right, bottom, top boundary area.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"character string representing WKT polygon outlines specified boundaries.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/boundary_to_WKT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the boundaries of the requested GBIF data — boundary_to_wkt","text":"","code":"boundary_to_wkt(left = 20, right = 30, bottom = 40, top = 50) #> [1] \"POLYGON((20 40,30 40,30 50,20 50,20 40))\""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Print time difference — cat_diff","title":"Print time difference — cat_diff","text":"function calculates time difference given initial time current time prints specified prefix. Optionally, can also print session summary.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print time difference — cat_diff","text":"","code":"cat_diff(   init_time,   chunk_text = \"Session summary\",   prefix = \"Completed in \",   cat_info = FALSE,   level = 0L,   cat_timestamp = FALSE,   verbose = TRUE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print time difference — cat_diff","text":"init_time POSIXct. initial time difference calculated. chunk_text Character. message printed chunk info. Default value: Session summary. See: info_chunk information. prefix Character. prefix prepend printed time difference. Defaults \"Completed \". cat_info Logical. TRUE, prints session summary using info_chunk (\"Session summary\"). Defaults FALSE. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. cat_timestamp logical; whether include time timestamp. Default TRUE. FALSE, text printed. verbose logical; whether print output console. Default TRUE. FALSE, function nothing. useful suppress function output certain contexts. ... Additional arguments cat_time.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print time difference — cat_diff","text":"function used side effect printing console return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print time difference — cat_diff","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print time difference — cat_diff","text":"","code":"# basic usage reference_time <- (lubridate::now() - lubridate::seconds(45))  cat_diff(reference_time) #> Completed in 00:00:45  # custom prefix text cat_diff(reference_time, prefix = \"Finished in \") #> Finished in 00:00:45  # level = 1 cat_diff(reference_time, prefix = \"Finished in \", level = 1L) #>   >>>  Finished in 00:00:45  # print date cat_diff(reference_time, prefix = \"Finished in \", cat_timestamp = TRUE) #> Finished in 00:00:45 - 14:32:40  # print date and time cat_diff(reference_time, prefix = \"Finished in \", cat_date = TRUE) #> Finished in 00:00:45 - 19/08/2025  # show chunk info cat_diff(reference_time, cat_info = TRUE, prefix = \"Finished in \") #>  #> -------------------------------------------------- #> Session summary - 19/08/2025 #> -------------------------------------------------- #>  #>  #> Finished in 00:00:45  # custom chunk info text cat_diff(   reference_time, cat_info = TRUE, chunk_text = \"Summary of task\",   prefix = \"Finished in \") #>  #> -------------------------------------------------- #> Summary of task - 19/08/2025 #> -------------------------------------------------- #>  #>  #> Finished in 00:00:45  # |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||  reference_time <- (lubridate::now() -     (lubridate::minutes(50) + lubridate::seconds(45))) cat_diff(reference_time) #> Completed in 00:50:45  reference_time <- (lubridate::now() - lubridate::minutes(50)) cat_diff(reference_time) #> Completed in 00:50:00  reference_time <- (lubridate::now() - lubridate::minutes(70)) cat_diff(reference_time) #> Completed in 01:10:00  reference_time <- (lubridate::now() - lubridate::hours(4)) cat_diff(reference_time) #> Completed in 04:00:00  reference_time <- lubridate::now() -   (lubridate::hours(4) + lubridate::minutes(50) + lubridate::seconds(45)) cat_diff(reference_time) #> Completed in 04:50:45"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Names of an Object with Optional Sorting — cat_names","title":"Print Names of an Object with Optional Sorting — cat_names","text":"Prints names object console, option sort . Supports custom separators handles various edge cases.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Names of an Object with Optional Sorting — cat_names","text":"","code":"cat_names(x, sort = FALSE, sep = \"\\n\", na_rm = TRUE, prefix = NULL, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Names of an Object with Optional Sorting — cat_names","text":"x R object names attribute (e.g., vector, list, data frame). sort Logical. Whether sort names using mixed alphanumeric sorting. Defaults FALSE. sep Character. Separate names output. Defaults newline (\"\\n\"). na_rm Logical. Whether removes NA values names printing. Defaults TRUE. prefix Character. string prepend name. Defaults NULL. ... Additional arguments passed base::cat().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Names of an Object with Optional Sorting — cat_names","text":"Invisibly returns vector names (sorted sort = TRUE).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Names of an Object with Optional Sorting — cat_names","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Names of an Object with Optional Sorting — cat_names","text":"","code":"# Basic usage vec <- c(a1 = 1, b = 2, a2 = 3) cat_names(vec) #> a1 #> b #> a2  # Sorted names cat_names(vec, sort = TRUE) #> a1 #> a2 #> b  # Custom separator and prefix cat_names(vec, sep = \", \", prefix = \"- \") #> - a1, - b, - a2  # Handle NA names vec_na <- c(a = 1, NA, c = 3) cat_names(vec_na, na_rm = TRUE) #> a #>  #> c cat_names(vec_na, na_rm = TRUE, sort = TRUE) #>  #> a #> c  # Example with data frames cat_names(mtcars) #> mpg #> cyl #> disp #> hp #> drat #> wt #> qsec #> vs #> am #> gear #> carb cat_names(iris) #> Sepal.Length #> Sepal.Width #> Petal.Length #> Petal.Width #> Species"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Print separator(s) to the console — cat_sep","title":"Print separator(s) to the console — cat_sep","text":"function prints customizable separator lines console, optionally preceded followed empty lines. useful improving readability console output R scripts interactive sessions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print separator(s) to the console — cat_sep","text":"","code":"cat_sep(   n_separators = 1L,   sep_lines_before = 0L,   sep_lines_after = 1L,   line_char = \"-\",   line_char_rep = 50L,   cat_bold = FALSE,   cat_red = FALSE,   verbose = TRUE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print separator(s) to the console — cat_sep","text":"n_separators integer; number separator lines print. Default 1. sep_lines_before, sep_lines_after integer; number extra empty lines print separator lines. Default 0 1, respectively. line_char character; character used construct separator line. Default \"-\". line_char_rep integer; number times character repeated form separator line. Default 50. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. verbose logical; whether print output console. Default TRUE. FALSE, function nothing. useful suppress function output certain contexts. ... additional arguments passed base::cat().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print separator(s) to the console — cat_sep","text":"function called side effect (printing console) return meaningful value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print separator(s) to the console — cat_sep","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print separator(s) to the console — cat_sep","text":"","code":"cat_sep() #> --------------------------------------------------  cat_sep(n_separators = 2) #> -------------------------------------------------- #> --------------------------------------------------  cat_sep(n_separators = 2, sep_lines_before = 2, sep_lines_after = 3) #>  #>  #> -------------------------------------------------- #> -------------------------------------------------- #>  #>   cat_sep(   n_separators = 2, sep_lines_before = 2,   sep_lines_after = 3, line_char = \"*\") #>  #>  #> ************************************************** #> ************************************************** #>  #>   cat_sep(   n_separators = 2, sep_lines_before = 2,   sep_lines_after = 3, line_char = \"*\", line_char_rep = 20) #>  #>  #> ******************** #> ******************** #>  #>"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Print text with time stamp — cat_time","title":"Print text with time stamp — cat_time","text":"function prints given text followed current time (optionally date) console. allows customization time zone, inclusion date, number newline characters print message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print text with time stamp — cat_time","text":"","code":"cat_time(   text = \"\",   msg_n_lines = 1L,   cat_timestamp = TRUE,   cat_bold = FALSE,   cat_red = FALSE,   cat_date = FALSE,   time_zone = \"CET\",   level = 0L,   verbose = TRUE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print text with time stamp — cat_time","text":"text character; text print timestamp. empty (default), timestamp printed. msg_n_lines integer; number newline characters print message. Default 1. cat_timestamp logical; whether include time timestamp. Default TRUE. FALSE, text printed. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. cat_date logical; whether include date timestamp. effective time TRUE. Default FALSE, meaning time printed. TRUE, date printed format %d/%m/%Y %X. time_zone character; time zone use timestamp. Default CET. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. verbose logical; whether print output console. Default TRUE. FALSE, function nothing. useful suppress function output certain contexts. ... additional arguments passed cat.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print text with time stamp — cat_time","text":"function called side effect printing console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print text with time stamp — cat_time","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cat_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print text with time stamp — cat_time","text":"","code":"cat_time() #> 14:32:41  cat_time(cat_date = TRUE) #> 19/08/2025 14:32:41  cat_time(\"time now\") #> time now - 14:32:41  cat_time(\"\\n\\nTime now\", msg_n_lines = 2L, level = 1L) #>  #>  #>   >>>  Time now - 14:32:41 #>    cat_time(   \"\\ntime now\", cat_date = TRUE, cat_bold = TRUE, cat_red = TRUE,   msg_n_lines = 2L, level = 1L) #>  #>   >>>  time now - 19/08/2025 14:32:41 #>    # The use of levels {   cat_time(\"Task 1\")   cat_time(\"subtask L1\", level = 1L)   cat_time(\"subtask L2\", level = 2L)   cat_time(\"subtask L3\", level = 3L) } #> Task 1 - 14:32:41 #>   >>>  subtask L1 - 14:32:41 #>   >>>  >>>  subtask L2 - 14:32:41 #>   >>>  >>>  >>>  subtask L3 - 14:32:41  # disabling the function output cat_time(verbose = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate without quotes — cc","title":"Concatenate without quotes — cc","text":"Concatenates one inputs single string without quotes. Inputs can unquoted symbols (e.g., variable names), quoted strings, numbers, simple expressions. Useful creating strings variable names data without including quotes.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate without quotes — cc","text":"","code":"cc(..., collapse = NULL, unique = FALSE, sort = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate without quotes — cc","text":"... One inputs: unquoted symbols (e.g., , B), quoted strings (e.g., \"text\"), numbers (e.g., 10), simple expressions (e.g., 1:3). Invalid R symbols (e.g., 12a) cause error unless quoted. collapse optional single character string separate concatenated elements (e.g., \"\", \" \"\",\"). NULL` (default), returns character vector individual elements. unique Logical. TRUE, returns unique values. Default FALSE. sort Logical. TRUE, sorts result alphanumerically using gtools::mixedsort. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate without quotes — cc","text":"single character string concatenated inputs (collapse string) character vector (`collapse = NULL“).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/cc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concatenate without quotes — cc","text":"Ahmed El-Gabbas","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the installed RStudio version is up to date — check_rstudio","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"function checks current installed version RStudio latest version available online. versions match, suggests updating RStudio.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"","code":"check_rstudio()"},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"Side effects include printing messages console regarding status RStudio version.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"function requires internet access check latest version RStudio online. called outside RStudio, fetch display latest version without comparing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_RStudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the installed RStudio version is up to date — check_rstudio","text":"","code":"check_rstudio() #> Not called from RStudio. The most recent version of RStudio is 2025.05.1.513."},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a URL — check_url","title":"Check the validity of a URL — check_url","text":"function opens connection specified URL check validity. returns TRUE URL valid (.e., connection can opened), FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a URL — check_url","text":"","code":"check_url(url, timeout = 2L)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Check the validity of a URL — check_url","text":"source code function taken stackoverflow discussion.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a URL — check_url","text":"url Character. URL checked. timeout Numeric. Timeout seconds connection attempt. Default 2 seconds.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a URL — check_url","text":"logical value: TRUE URL valid, FALSE .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_URL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a URL — check_url","text":"","code":"load_packages(purrr, tibble)  urls <- c(      \"http://www.amazon.com\", \"http://this.isafakelink.biz\",      \"https://stackoverflow.com\", \"https://stackoverflow505.com\") purrr::map_dfr(urls, ~tibble::tibble(URL = .x, Valid = check_url(.x))) #> # A tibble: 4 × 2 #>   URL                          Valid #>   <chr>                        <lgl> #> 1 http://www.amazon.com        TRUE  #> 2 http://this.isafakelink.biz  FALSE #> 3 https://stackoverflow.com    TRUE  #> 4 https://stackoverflow505.com FALSE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check function arguments for specific types — check_args","title":"Check function arguments for specific types — check_args","text":"function checks specified arguments function match expected type. useful validating function inputs.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check function arguments for specific types — check_args","text":"","code":"check_args(args_all, args_to_check, args_type, include_backtrace = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check function arguments for specific types — check_args","text":"args_all Character vector. Input parameters function. Usually result formals() function args_to_check Character vector. Names arguments checked. args_type Character. expected type arguments. Must one \"character\", \"logical\", \"numeric\". include_backtrace Logical. TRUE, includes backtrace error message. Default FALSE. See stop_ctx details.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check function arguments for specific types — check_args","text":"function return value stop execution throw error specified arguments match expected type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check function arguments for specific types — check_args","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check function arguments for specific types — check_args","text":"","code":"# define a function with arguments f1 <- function(x = \"AA\", y = \"BB\", z = 1) {   all_arguments <- ls(envir = environment())   all_arguments <- purrr::map(     all_arguments,     function(x) get(x, envir = parent.env(env = environment()))) %>%     stats::setNames(all_arguments)   # Check if x and y are a character  check_args(     args_all = all_arguments, args_type = \"character\",     args_to_check = c(\"x\", \"y\"))   # Check if z is a numeric  check_args(     args_all = all_arguments, args_type = \"numeric\",     args_to_check = \"z\")   # the rest of the function }  #  |||||||||||||||||||||||||||||||||||||||||||||||||  # no output as x is a character f1(x = \"X\")  # no output as z is a numeric f1(z = 20)  if (FALSE) { # \\dontrun{   # error as x is not a character   f1(x = 1) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Integrity of Data Files — check_data","title":"Check Integrity of Data Files — check_data","text":"Validates data file checking extension attempting load contents. file considered valid exists, non-empty, supported extension, loads successfully non-null object. Supports RData, qs2, rds, feather file types.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Integrity of Data Files — check_data","text":"","code":"check_data(file = NULL, warning = TRUE, n_threads = 1L)  check_rdata(file, warning = TRUE)  check_qs(file, warning = TRUE, n_threads = 1L)  check_rds(file, warning = TRUE)  check_feather(file, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Integrity of Data Files — check_data","text":"file Character. Path data file (e.g., .rdata, .qs2, .rds, .feather). Must single, non-empty string. warning Logical. TRUE (default), warnings issued invalid files (e.g., non-existent, wrong extension, loading failure). n_threads Integer. Number threads reading qs2 files. Must positive integer. See qs2::qs_read details.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Integrity of Data Files — check_data","text":"Logical: TRUE file valid loads successfully; FALSE otherwise, warning warning = TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Integrity of Data Files — check_data","text":"check_data() function determines file type based extension (case-insensitive). extension unrecognised, returns FALSE. Supported file types: RData: Checked check_rdata(), read using load_as qs2: Checked check_qs(), read using qs2::qs_read rds: Checked check_rds(), read using readRDS feather: Checked check_feather(), read using arrow::read_feather","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Integrity of Data Files — check_data","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Integrity of Data Files — check_data","text":"","code":"require(ecokit) ecokit::load_packages(fs, arrow)  # Setup temporary directory temp_dir <- fs::path_temp(\"load_multiple\") fs::dir_create(temp_dir)  # ||||||||||||||||||||||||||||||||||||||| # Validate RData files # |||||||||||||||||||||||||||||||||||||||  # valid RData file data <- data.frame(x = 1:5) rdata_file <- fs::path(temp_dir, \"valid.Rdata\") save(data, file = rdata_file)  # Invalid RData file (corrupted) bad_rdata <- fs::path(temp_dir, \"invalid.Rdata\") writeLines(\"not an RData file\", bad_rdata)  check_data(rdata_file)                               # TRUE #> [1] TRUE check_rdata(rdata_file)                              # TRUE #> [1] TRUE  check_data(bad_rdata)                                # FALSE, with warning #> Warning: file ‘invalid.Rdata’ has magic number 'not a' #>   Use of save versions prior to 2 is deprecated #> Warning: Failed to load RData file: /tmp/RtmpXTVHCP/load_multiple/invalid.Rdata #> [1] FALSE check_rdata(bad_rdata)                               # FALSE, with warning #> Warning: file ‘invalid.Rdata’ has magic number 'not a' #>   Use of save versions prior to 2 is deprecated #> Warning: Failed to load RData file: /tmp/RtmpXTVHCP/load_multiple/invalid.Rdata #> [1] FALSE  check_data(bad_rdata, warning = FALSE)               # FALSE, no warning #> Warning: file ‘invalid.Rdata’ has magic number 'not a' #>   Use of save versions prior to 2 is deprecated #> [1] FALSE check_rdata(bad_rdata, warning = FALSE)              # FALSE, no warning #> Warning: file ‘invalid.Rdata’ has magic number 'not a' #>   Use of save versions prior to 2 is deprecated #> [1] FALSE  # ||||||||||||||||||||||||||||||||||||||| # Validate qs2 files # |||||||||||||||||||||||||||||||||||||||  # Valid qs2 file qs_file <- fs::path(temp_dir, \"valid.qs2\") qs2::qs_save(data, qs_file, nthreads = 1)  # Invalid qs2 file (corrupted) bad_qs <- fs::path(temp_dir, \"invalid.qs2\") writeLines(\"not a qs2 file\", bad_qs)  check_data(qs_file, n_threads = 1L)                  # TRUE #> [1] TRUE check_qs(qs_file, n_threads = 1L)                    # TRUE #> [1] TRUE  check_data(bad_qs, n_threads = 1L)                   # FALSE, with warning #> Warning: Failed to load qs2 file: /tmp/RtmpXTVHCP/load_multiple/invalid.qs2 #> [1] FALSE check_qs(bad_qs, n_threads = 1L)                     # FALSE, with warning #> Warning: Failed to load qs2 file: /tmp/RtmpXTVHCP/load_multiple/invalid.qs2 #> [1] FALSE  # ||||||||||||||||||||||||||||||||||||||| # Validate rds files # |||||||||||||||||||||||||||||||||||||||  # Valid rds file rds_file <- fs::path(temp_dir, \"valid.rds\") saveRDS(data, rds_file)  # Invalid rds file (corrupted) bad_rds <- fs::path(temp_dir, \"invalid.rds\") writeLines(\"not an rds file\", bad_rds)  check_data(rds_file)                                 # TRUE #> [1] TRUE check_rds(rds_file)                                  # TRUE #> [1] TRUE  check_data(bad_rds)                                  # FALSE, with warning #> Warning: Failed to load rds file: /tmp/RtmpXTVHCP/load_multiple/invalid.rds #> [1] FALSE check_rds(bad_rds)                                   # FALSE, with warning #> Warning: Failed to load rds file: /tmp/RtmpXTVHCP/load_multiple/invalid.rds #> [1] FALSE  # ||||||||||||||||||||||||||||||||||||||| # Validate feather files # |||||||||||||||||||||||||||||||||||||||  # Valid feather file feather_file <- fs::path(temp_dir, \"valid.feather\") arrow::write_feather(data, feather_file)  # Invalid feather file (corrupted) bad_feather <- fs::path(temp_dir, \"invalid.feather\") writeLines(\"not a feather file\", bad_feather)  check_data(feather_file)                             # TRUE #> [1] TRUE check_feather(feather_file)                          # TRUE #> [1] TRUE  check_data(bad_feather)                              # FALSE, with warning #> Warning: Failed to load feather file: /tmp/RtmpXTVHCP/load_multiple/invalid.feather #> [1] FALSE check_feather(bad_feather)                           # FALSE, with warning #> Warning: Failed to load feather file: /tmp/RtmpXTVHCP/load_multiple/invalid.feather #> [1] FALSE  # ||||||||||||||||||||||||||||||||||||||| # Non-existent file # |||||||||||||||||||||||||||||||||||||||  check_data(\"nonexistent.rds\")                        # FALSE, with warning #> Warning: File does not exist: `/home/runner/work/ecokit/ecokit/docs/reference/nonexistent.rds` #> [1] FALSE  # Clean up fs::file_delete(   c(rdata_file, bad_rdata, qs_file, bad_qs, rds_file, bad_rds,   feather_file, bad_feather)) fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a .env file before loading environment variables — check_env_file","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"Validates .env file ensure properly formatted loading environment variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"","code":"check_env_file(env_file = \".env\", warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"env_file Path .env file (default: \".env\") warning Logical; TRUE, prints warnings errors (default: TRUE)","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"Logical: TRUE valid, FALSE otherwise","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"function performs following checks: Verifies file exists readable Confirms .env extension Ensures file empty Checks least one valid variable definition Validates non-comment, non-empty lines follow KEY=VALUE format (allowing optional whitespace around KEY, '=', VALUE) Ensures variable names start letter/underscore, followed letters/digits/underscores Checks duplicate variable names (case-sensitive) Ignores comment lines (starting #) empty lines Validates unclosed quotes values Checks unquoted special characters values","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_env_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the integrity of a .env file before loading environment variables — check_env_file","text":"","code":"# Save a valid .env file to temp file valid_env <- fs::file_temp(ext = \".env\") writeLines(   c(\"DB_HOST=localhost\", \"DB_PORT=5432\", \"# Comment\", \"API_KEY='abc123'\"),   valid_env) check_env_file(valid_env)  # Returns TRUE #> [1] TRUE  # Invalid .env file invalid_env <- fs::file_temp(ext = \".env\")  writeLines(   c(    \"DB_HOST=localhost\", \"INVALID KEY=value\",    \"DB_HOST=duplicate\"),  invalid_env) check_env_file(invalid_env)  # Returns FALSE #> Warning: Invalid variable definition(s): INVALID KEY=value #> Warning: Duplicate variable names: DB_HOST #> [1] FALSE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Load GBIF Credentials from .Renviron — check_gbif","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"Checks GBIF access credentials (GBIF_EMAIL, GBIF_PWD, GBIF_USER) available environment. , attempts read specified .Renviron file. credentials still missing reading file, error thrown details credentials missing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"","code":"check_gbif(r_environ = \".Renviron\")"},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"r_environ Character string specifying path .Renviron file GBIF credentials stored. Defaults \".Renviron\" current working directory.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"Returns NULL invisibly GBIF credentials successfully loaded. Stops error credentials found loaded.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"function ensures necessary GBIF credentials loaded R environment accessing GBIF services, typically using rgbif R package. first checks credentials already set environment variables. missing, attempts read specified .Renviron file. file exist, readable, contain required credentials, function stops informative error message. Note, however, function check credentials valid work GBIF; present environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_gbif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Load GBIF Credentials from .Renviron — check_gbif","text":"","code":"if (FALSE) { # \\dontrun{    # Check GBIF credentials using the default .Renviron file   check_gbif()    # Specify a custom .Renviron file   check_gbif(r_environ = \"~/.Renviron\")  } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify Image File Integrity — check_image","title":"Verify Image File Integrity — check_image","text":"function checks integrity image files (JPEG, PNG, TIFF, PDF) validating existence, size, extension, type using file bash command. confirms file recognized image PDF format non-zero dimensions (page count PDFs).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify Image File Integrity — check_image","text":"","code":"check_image(file, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify Image File Integrity — check_image","text":"file character string specifying path image file. warning logical value indicating whether issue warnings invalid files (e.g., empty files, unrecognized extensions). Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify Image File Integrity — check_image","text":"logical value: TRUE file valid image PDF, FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify Image File Integrity — check_image","text":"function performs following checks: Validates file single character string. Ensures file exists directory. Checks file size non-zero, issuing warning empty (warning = TRUE). Verifies file extension one jpg, jpeg, png, tif, tiff, pdf, issuing warning (warning = TRUE). Uses file bash command confirm file type extract metadata (e.g., dimensions images, page count PDFs). file considered valid matches expected type positive dimensions (page count). file command must available system.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify Image File Integrity — check_image","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify Image File Integrity — check_image","text":"","code":"# Load required packages ecokit::load_packages(fs)  # Create a temporary directory for test files temp_dir <- fs::dir_create(fs::path_temp(\"image_test\"))  # --------------------------------------------  # Valid image files  # jpeg jpeg_path <- fs::path(temp_dir, \"valid_image.jpg\") grDevices::jpeg(   filename = jpeg_path, width = 6, height = 6, units = \"cm\", res = 200) plot(1:10, 1:10, main = \"Valid Image\") invisible(grDevices::dev.off()) check_image(jpeg_path) #> [1] TRUE  # png png_path <- fs::path(temp_dir, \"valid_image.png\") png(   filename = png_path, width = 6, height = 6, units = \"cm\", res = 200) plot(1:10, 1:10, main = \"Valid Image\") invisible(grDevices::dev.off()) check_image(png_path) #> [1] TRUE   # tiff tiff_path <- fs::path(temp_dir, \"valid_image.tiff\") tiff(   filename = tiff_path, width = 6, height = 6, units = \"cm\", res = 200) plot(1:10, 1:10, main = \"Valid Image\") invisible(grDevices::dev.off()) check_image(tiff_path) #> [1] TRUE  # pdf pdf_path <- fs::path(temp_dir, \"valid_document.pdf\") grDevices::pdf(file = pdf_path, width = 6, height = 6) plot(1:10, 1:10, main = \"Valid Document\") invisible(grDevices::dev.off()) check_image(pdf_path) #> [1] TRUE  # --------------------------------------------  # Corrupted image file  corrupt_path <- fs::path(temp_dir, \"corrupt_image.jpg\") fs::file_create(corrupt_path) writeBin(charToRaw(\"This is not an image\"), corrupt_path) check_image(corrupt_path) #> [1] FALSE  corrupt_pdf_path <- fs::path(temp_dir, \"valid_document.pdf\") grDevices::pdf(file = corrupt_pdf_path, width = 6, height = 6) invisible(grDevices::dev.off()) check_image(corrupt_pdf_path) #> [1] FALSE  # --------------------------------------------  # Non-image file  text_path <- fs::path(temp_dir, \"not_an_image.txt\") fs::file_create(text_path) writeLines(\"This is a text file\", text_path)  check_image(text_path) #> Warning: The file extension 'txt' is not a supported image format (JPEG, PNG, TIFF, PDF). #> File: /tmp/RtmpXTVHCP/image_test/not_an_image.txt #> [1] FALSE check_image(text_path, warning = FALSE) #> [1] FALSE  # --------------------------------------------  # Nonexistent file  nonexistent_path <- fs::path(temp_dir, \"nonexistent_image.jpg\") check_image(nonexistent_path) #> Warning: The file '/tmp/RtmpXTVHCP/image_test/nonexistent_image.jpg' does not exist. #> [1] FALSE  check_image(temp_dir) #> Warning: Input `file` '/tmp/RtmpXTVHCP/image_test' is a directory. #> [1] FALSE  # --------------------------------------------  # Clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the installed Quarto version is up to date — check_quarto","title":"Check if the installed Quarto version is up to date — check_quarto","text":"function compares installed Quarto version user's system latest version available online. versions differ, suggests user update Quarto. uses web scraping find latest version available Quarto GitHub releases page system command find installed version.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the installed Quarto version is up to date — check_quarto","text":"","code":"check_quarto(pre_release = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the installed Quarto version is up to date — check_quarto","text":"pre_release Logical. Whether check pre-release versions. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the installed Quarto version is up to date — check_quarto","text":"message indicating whether installed Quarto version date suggesting update .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the installed Quarto version is up to date — check_quarto","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the installed Quarto version is up to date — check_quarto","text":"","code":"check_quarto() #> Quarto is not available in the system. #> Latest quarto version is v1.7.33 [installed: NA] #>   check_quarto(pre_release = TRUE) #> Quarto is not available in the system. #> Available pre-release version is: v1.8.20 [installed: NA] #>"},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a raster stack reads from disk or memory — check_stack_in_memory","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"function checks whether layers RasterStack object stored memory read disk.  prints messages indicating whether layers memory, layers disk, mix . mix, specifies layers disk.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"","code":"check_stack_in_memory(stack = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"stack RasterStack object. NULL, empty, RasterStack, function stops error prints message empty stacks.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"Returns invisible(NULL) prints messages console indicating whether layers memory, read disk, mix (specifying layers read disk).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_stack_in_memory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a raster stack reads from disk or memory — check_stack_in_memory","text":"","code":"load_packages(raster)  # create a small in-memory raster r_1 <- raster::raster(nrows = 10, ncols = 10, vals = 1) r_2 <- raster::raster(nrows = 10, ncols = 10, vals = 2)  # create a stack with one disk-based and one in-memory layer temp_file_1 <- tempfile(fileext = \".tif\") raster::writeRaster(r_1, temp_file_1) temp_file_2 <- tempfile(fileext = \".tif\") raster::writeRaster(r_2, temp_file_2)  # ---------------------------------------------  stack1 <- raster::stack(temp_file_1, r_1) check_stack_in_memory(stack1) #> Mixed storage: layers 1 are read from disk; others are in memory  # ---------------------------------------------  stack3 <- raster::stack(temp_file_1, temp_file_2) check_stack_in_memory(stack3) #> All stack layers are read from disk  # ---------------------------------------------  stack2 <- raster::stack(r_1, r_2) check_stack_in_memory(stack2) #> All stack layers reads from memory  # ---------------------------------------------  # clean up fs::file_delete(c(temp_file_1, temp_file_2))"},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Check system commands availability — check_system_command","title":"Check system commands availability — check_system_command","text":"function checks list system commands available user's PATH.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check system commands availability — check_system_command","text":"","code":"check_system_command(commands, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check system commands availability — check_system_command","text":"commands character vector system command names check (e.g., c(\"git\", \"Rscript\", \"unzip\")). warning Logical. Whether issue warning command missing. Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check system commands availability — check_system_command","text":"function returns TRUE specified commands available system, FALSE available.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check system commands availability — check_system_command","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_system_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check system commands availability — check_system_command","text":"","code":"# Check for the availability of system commands check_system_command(c(\"unzip\", \"head\")) #> [1] TRUE  # return FALSE, with a warning for a missing command check_system_command(c(\"unzip\", \"head\", \"curl\", \"missing\")) #> Warning: The following tool(s) are missing: missing #> [1] FALSE  # return FALSE, without a warning for a missing command check_system_command(c(\"unzip\", \"head\", \"curl\", \"missing\"), warning = FALSE) #> [1] FALSE"},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a tiff file corrupted — check_tiff","title":"Check if a tiff file corrupted — check_tiff","text":"function checks provided tiff file corrupted attempting describe using terra package searching presence \"Driver\" string description, indicates valid tiff file. string found, function returns TRUE FALSE otherwise. function works also reading netCDF files terra package.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a tiff file corrupted — check_tiff","text":"","code":"check_tiff(x = NULL, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a tiff file corrupted — check_tiff","text":"x Character; file path tiff file checked. function stop error x NULL file exist. warning Logical. TRUE, function issue warning file exist.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a tiff file corrupted — check_tiff","text":"Logical; returns TRUE TIFF file corrupted (.e., file exists, can described \"Driver\" metadata, values, data can read without errors warnings), FALSE otherwise.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a tiff file corrupted — check_tiff","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_tiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a tiff file corrupted — check_tiff","text":"","code":"(f <- system.file(\"ex/elev.tif\", package=\"terra\")) #> [1] \"/home/runner/work/_temp/Library/terra/ex/elev.tif\"  check_tiff(x = f) #> [1] TRUE  # a temp file ends with .tif (not a valid tiff file) (temp_file <- tempfile(fileext = \".tif\")) #> [1] \"/tmp/RtmpXTVHCP/file243e2e9e2678.tif\" fs::file_create(temp_file) check_tiff(x = temp_file) #> [1] FALSE  # clean up fs::file_delete(temp_file)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the Integrity of a ZIP File — check_zip","title":"Check the Integrity of a ZIP File — check_zip","text":"Tests integrity ZIP file using unzip -t system command. Verifies file exists, non-empty, .zip extension, passes integrity check. Returns FALSE warning file invalid unzip unavailable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the Integrity of a ZIP File — check_zip","text":"","code":"check_zip(file = NULL, warning = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the Integrity of a ZIP File — check_zip","text":"file Character. Path ZIP file. Must single, non-empty string. warning Logical. TRUE, issues warning file exist, empty, fails integrity check. Default TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the Integrity of a ZIP File — check_zip","text":"Logical: TRUE file exists, non-empty, passes integrity check; FALSE otherwise, accompanied warning explaining failure.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check the Integrity of a ZIP File — check_zip","text":"Requires unzip system command.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the Integrity of a ZIP File — check_zip","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/check_zip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the Integrity of a ZIP File — check_zip","text":"","code":"# ||||||||||||||||||||||||||||||||||||||| # Create ZIP files # |||||||||||||||||||||||||||||||||||||||  # valid ZIP file temp_dir <- fs::path_temp(\"check_zip\") fs::dir_create(temp_dir) temp_file <- fs::path(temp_dir, \"test.txt\") writeLines(\"Hello, world!\", temp_file) zip_file <- fs::path(temp_dir, \"valid.zip\") zip(zip_file, temp_file, flags = \"-jq\")  # invalid ZIP file (corrupted) bad_zip <- fs::path(temp_dir, \"invalid.zip\") writeLines(\"Not a ZIP file\", bad_zip)  # empty ZIP file empty_zip <- fs::path(temp_dir, \"empty.zip\") fs::file_create(empty_zip)  # non-ZIP file non_zip_file <- fs::path(temp_dir, \"test.txt\") writeLines(\"Hello, world!\", non_zip_file)  # ||||||||||||||||||||||||||||||||||||||| # Check ZIP files # |||||||||||||||||||||||||||||||||||||||  check_zip(zip_file)                              # TRUE #> [1] TRUE  check_zip(bad_zip)                               # FALSE, with warning #> Warning: Warning during file validation: running command 'unzip -t /tmp/RtmpXTVHCP/check_zip/invalid.zip' had status 9 #> [1] FALSE check_zip(bad_zip, warning = FALSE)              # FALSE, without warning #> [1] FALSE  # non-existent file check_zip(\"nonexistent.zip\")                     # FALSE, with warning #> Warning: File does not exist: /home/runner/work/ecokit/ecokit/docs/reference/nonexistent.zip #> [1] FALSE check_zip(\"nonexistent.zip\", warning = FALSE)    # FALSE, without warning #> [1] FALSE  check_zip(empty_zip)                             # FALSE, with warning #> Warning: File is empty: /tmp/RtmpXTVHCP/check_zip/empty.zip #> [1] FALSE check_zip(empty_zip, warning = FALSE)            # FALSE, without warning #> [1] FALSE  check_zip(non_zip_file)                          # FALSE, with warning #> Warning: Warning during file validation: running command 'unzip -t /tmp/RtmpXTVHCP/check_zip/test.txt' had status 9 #> [1] FALSE check_zip(non_zip_file, warning = FALSE)         # FALSE, without warning #> [1] FALSE  # clean up fs::file_delete(c(zip_file, bad_zip, empty_zip, temp_file)) fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/chelsa_var_info.html","id":null,"dir":"Reference","previous_headings":"","what":"CHELSA Variable Information — chelsa_var_info","title":"CHELSA Variable Information — chelsa_var_info","text":"Provides detailed information variables CHELSA (Climatologies High Resolution Earth's Land Surface Areas) dataset, including names, units, descriptions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/chelsa_var_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CHELSA Variable Information — chelsa_var_info","text":"","code":"chelsa_var_info"},{"path":"https://elgabbas.github.io/ecokit/reference/chelsa_var_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CHELSA Variable Information — chelsa_var_info","text":"tibble 47 rows 6 columns: var_name (character): Variable short name, e.g., \"bio1\". long_name (character): Full variable name, e.g., \"mean annual air temperature\". unit (character): Measurement unit, e.g., \"°C\". scale (numeric): Scale factor applied variable. offset (numeric): Offset value applied variable. explanation (character): Description variable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/chelsa_var_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CHELSA Variable Information — chelsa_var_info","text":"https://chelsa-climate.org/wp-admin/download-page/CHELSA_tech_specification_V2.pdf","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/chelsa_var_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CHELSA Variable Information — chelsa_var_info","text":"","code":"# Load the CHELSA variable information library(ecokit) library(tibble) options(pillar.print_max = 64)  data(\"chelsa_var_info\", package = \"ecokit\") print(chelsa_var_info, n = Inf) #> # A tibble: 46 × 6 #>    var_name long_name                             unit  scale offset explanation #>    <chr>    <chr>                                 <chr> <dbl>  <dbl> <chr>       #>  1 bio1     mean annual air temperature           °C      0.1  -273. \"mean annu… #>  2 bio2     mean diurnal air temperature range    °C      0.1     0  \"mean diur… #>  3 bio3     isothermality                         °C      0.1     0  \"ratio of … #>  4 bio4     temperature seasonality               °C/1…   0.1     0  \"standard … #>  5 bio5     mean daily maximum air temperature o… °C      0.1  -273. \"The highe… #>  6 bio6     mean daily minimum air temperature o… °C      0.1  -273. \"The lowes… #>  7 bio7     annual range of air temperature       °C      0.1     0  \"The diffe… #>  8 bio8     mean daily mean air temperatures of … °C      0.1  -273. \"The wette… #>  9 bio9     mean daily mean air temperatures of … °C      0.1  -273. \"The dries… #> 10 bio10    mean daily mean air temperatures of … °C      0.1  -273. \"The warme… #> 11 bio11    mean daily mean air temperatures of … °C      0.1  -273. \"The colde… #> 12 bio12    annual precipitation amount           kg m…   0.1     0  \"Accumulat… #> 13 bio13    precipitation amount of the wettest … kg m…   0.1     0  \"The preci… #> 14 bio14    precipitation amount of the driest m… kg m…   0.1     0  \"The preci… #> 15 bio15    precipitation seasonality             kg m…   0.1     0  \"The Coeff… #> 16 bio16    mean monthly precipitation amount of… kg m…   0.1     0  \"The wette… #> 17 bio17    mean monthly precipitation amount of… kg m…   0.1     0  \"The dries… #> 18 bio18    mean monthly precipitation amount of… kg m…   0.1     0  \"The warme… #> 19 bio19    mean monthly precipitation amount of… kg m…   0.1     0  \"The colde… #> 20 fcf      Frost change frequency                count  NA      NA  \"Number of… #> 21 fgd      first day of the growing season TREE… juli…  NA      NA  \"first day… #> 22 gdd0     Growing degree days heat sum above 0… °C      0.1     0  \"heat sum … #> 23 gdd5     Growing degree days heat sum above 5… °C      0.1     0  \"heat sum … #> 24 gdd10    Growing degree days heat sum above 1… °C      0.1     0  \"heat sum … #> 25 gddlgd0  Last growing degree day above 0°C     juli…  NA      NA  \"Last day … #> 26 gddlgd5  Last growing degree day above 5°C     juli…  NA      NA  \"Last day … #> 27 gddlgd10 Last growing degree day above 10°C    juli…  NA      NA  \"Last day … #> 28 gdgfgd0  First growing degree day above 0°C    juli…  NA      NA  \"First day… #> 29 gdgfgd5  First growing degree day above 5°C    juli…  NA      NA  \"First day… #> 30 gdgfgd10 First growing degree day above 10°C   juli…  NA      NA  \"First day… #> 31 gsl      growing season length TREELIM         numb…  NA      NA  \"Length of… #> 32 gsp      Accumulated precipiation amount on g… kg m…   0.1     0  \"precipita… #> 33 gst      Mean temperature of the growing seas… °C      0.1  -273. \"Mean temp… #> 34 kg0      Köppen-Geiger climate classification  cate…  NA      NA  \"Köppen Ge… #> 35 kg1      Köppen-Geiger climate classification  cate…  NA      NA  \"Köppen Ge… #> 36 kg2      Köppen-Geiger climate classification  cate…  NA      NA  \"Köppen Ge… #> 37 kg3      Köppen-Geiger climate classification  cate…  NA      NA  \"Wissmann … #> 38 kg4      Köppen-Geiger climate classification  cate…  NA      NA  \"Thornthwa… #> 39 kg5      Köppen-Geiger climate classification  cate…  NA      NA  \"Troll-Pfa… #> 40 lgd      last day of the growing season TREEL… juli…  NA      NA  \"Last day … #> 41 ngd0     Number of growing degree days         numb…  NA      NA  \"Number of… #> 42 ngd5     Number of growing degree days         numb…  NA      NA  \"Number of… #> 43 ngd10    Number of growing degree days         numb…  NA      NA  \"Number of… #> 44 npp      Net primary productivity              g C …   0.1     0  \"Calculate… #> 45 scd      Snow cover days                       count  NA      NA  \"Number of… #> 46 swe      Snow water equivalent                 kg m…   0.1     0  \"Amount of…"},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the console — clear_console","title":"Clear the console — clear_console","text":"function clears console RStudio sending form feed character. run RStudio, prints message indicating function supported.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the console — clear_console","text":"","code":"clear_console()"},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear the console — clear_console","text":"invisible NULL indicate function completed without returning meaningful value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clear the console — clear_console","text":"function checks run RStudio examining RSTUDIO environment variable. function run RStudio, clear console instead print message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clear_console.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear the console — clear_console","text":"","code":"clear_console() #> This function does not work outside of RStudio."},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"function clips raster layer using specified spatial polygon, effectively masking raster outside polygon area. resulting clipped raster retains original raster's properties values within polygon's bounds.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"","code":"clip_raster_by_polygon(raster = NULL, shape = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"raster RasterLayer object clipped. raster layer masked polygon. shape Extent object, object Extent object can extracted.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"RasterLayer object representing portion input raster falls within specified polygon. returned raster contains data original within polygon's bounds masked (set NA) outside .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/clip_raster_by_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a raster layer by a spatial polygon — clip_raster_by_polygon","text":"","code":"load_packages(raster, sp, rworldmap, ggplot2)  # example Polygon SPDF <- rworldmap::getMap(resolution = \"low\") %>%    subset(NAME == \"Germany\")  # example raster r <- raster::raster(   xmn = 2, xmx = 18, ymn = 45, ymx = 58, resolution = 0.125) r[] <- seq_len(length(r)) r #> class      : RasterLayer  #> dimensions : 104, 128, 13312  (nrow, ncol, ncell) #> resolution : 0.125, 0.125  (x, y) #> extent     : 2, 18, 45, 58  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : layer  #> values     : 1, 13312  (min, max) #>   # plotting example data ggplot2::ggplot() +   ggplot2::geom_raster(     data = as.data.frame(r, xy = TRUE),     ggplot2::aes(x = x, y = y, fill = layer)) +   ggplot2::geom_sf(     data = sf::st_as_sf(SPDF), fill = NA, color = \"black\", linewidth = 0.5) +   ggplot2::scale_fill_viridis_c() +   ggplot2::theme_minimal() +   ggplot2::labs(x = NULL, y = NULL) +   ggplot2::theme(axis.text = ggplot2::element_blank())   # ----------------------------------  SPDF_DE <- clip_raster_by_polygon(r, SPDF)  ggplot2::ggplot() +   ggplot2::geom_tile(     data = as.data.frame(SPDF_DE, xy = TRUE),     ggplot2::aes(x = x, y = y, fill = layer)) +   ggplot2::geom_sf(     data = sf::st_as_sf(SPDF), fill = NA, color = \"black\", linewidth = 0.5) +   ggplot2::scale_fill_viridis_c() +   ggplot2::theme_minimal() +   ggplot2::labs(x = NULL, y = NULL) +   ggplot2::theme(axis.text = ggplot2::element_blank())"},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect aliased variables in a linear model — detect_alias","title":"Detect aliased variables in a linear model — detect_alias","text":"function identifies aliased (linearly dependent) variables linear model fitting linear model, using stats::alias function detect aliased variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect aliased variables in a linear model — detect_alias","text":"","code":"detect_alias(data, verbose = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect aliased variables in a linear model — detect_alias","text":"data data frame tibble containing variables checked aliasing. verbose Logical. Whether print aliased variables found (). TRUE, aliased variables printed console. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect aliased variables in a linear model — detect_alias","text":"Returns character vector aliased variable names found; otherwise, returns NULL invisibly. verbose TRUE, function also print message console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect aliased variables in a linear model — detect_alias","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/detect_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect aliased variables in a linear model — detect_alias","text":"","code":"load_packages(car)  x1 <- rnorm(100) x2 <- 2 * x1 x3 <- rnorm(100) y <- rnorm(100)  model <- lm(y ~ x1 + x2 + x3) summary(model) #>  #> Call: #> lm(formula = y ~ x1 + x2 + x3) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.2033 -0.6743 -0.1622  0.7662  2.2185  #>  #> Coefficients: (1 not defined because of singularities) #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  0.16361    0.10371   1.578    0.118 #> x1           0.16341    0.10514   1.554    0.123 #> x2                NA         NA      NA       NA #> x3          -0.08643    0.10131  -0.853    0.396 #>  #> Residual standard error: 1.019 on 97 degrees of freedom #> Multiple R-squared:  0.03238,\tAdjusted R-squared:  0.01243  #> F-statistic: 1.623 on 2 and 97 DF,  p-value: 0.2026 #>   # there are aliased coefficients in the model try(car::vif(model)) #> Error in vif.default(model) : there are aliased coefficients in the model  # The function identifies the aliased variables detect_alias(data = cbind.data.frame(x1, x2, x3)) #> [1] \"x2\"  detect_alias(data = cbind.data.frame(x1, x2, x3), verbose = TRUE) #> aliased variables: x2 #> [1] \"x2\"  # excluding x2 and refit the model model <- lm(y ~ x1 + x3)  summary(model) #>  #> Call: #> lm(formula = y ~ x1 + x3) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.2033 -0.6743 -0.1622  0.7662  2.2185  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  0.16361    0.10371   1.578    0.118 #> x1           0.16341    0.10514   1.554    0.123 #> x3          -0.08643    0.10131  -0.853    0.396 #>  #> Residual standard error: 1.019 on 97 degrees of freedom #> Multiple R-squared:  0.03238,\tAdjusted R-squared:  0.01243  #> F-statistic: 1.623 on 2 and 97 DF,  p-value: 0.2026 #>   try(car::vif(model)) #>       x1       x3  #> 1.001387 1.001387"},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Size of a Directory — dir_size","title":"Calculate the Size of a Directory — dir_size","text":"Computes total size directory, including contents, recursively. size can returned bytes human-readable format (e.g., KB, MB, GB).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Size of a Directory — dir_size","text":"","code":"dir_size(directory, human_readable = TRUE, recursive = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Size of a Directory — dir_size","text":"directory Character. path directory. human_readable Logical. Whether return size human-readable format (e.g., \"1.2 GB\") bytes. Defaults TRUE. recursive Logical. Whether include subdirectories size calculation. Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Size of a Directory — dir_size","text":"human_readable = TRUE, character string representing directory size human-readable format. human_readable = FALSE, numeric value representing directory size bytes.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Size of a Directory — dir_size","text":"function uses fs::dir_info() recursively calculate total size files specified directory. handles edge cases : non-existent directories, invalid inaccessible paths, empty directories, cross-platform path normalization.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the Size of a Directory — dir_size","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/dir_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Size of a Directory — dir_size","text":"","code":"# Calculate the size of the current working directory (recursive) dir_size(\".\", human_readable = TRUE)      # human-readable format #> [1] \"1.14 MB\"  dir_size(\".\", human_readable = FALSE)     # size in bytes #> [1] 1199966  dir_size(\".\", recursive = FALSE)          # non-recursive size calculation #> [1] \"1.14 MB\"  if (FALSE) { # \\dontrun{   # create temporary directory containing large files and subdirectories   temp_dir <- fs::path_temp(\"dir_size\")   temp_sub_dir <- fs::path(temp_dir, \"subdir\")   fs::dir_create(c(temp_dir, temp_sub_dir))   # create large files   file_path <- fs::path(temp_dir, \"large_file1.txt\")    # ------------------------------------------    # create example large file (10 MB)    # Open file connection in append mode   con <- file(file_path, open = \"at\")   # Generate a chunk of text (~1 MB)   chunk <- paste(rep(\"X\", 1024 * 1024), collapse = \"\")   # Write chunks until target size (# 10 MB in bytes) is reached   bytes_written <- 0   while (bytes_written <  10 * 1024 * 1024) {     writeLines(chunk, con)     bytes_written <- bytes_written + nchar(chunk, type = \"bytes\")   }   close(con)    # ------------------------------------------    # Copy the file to create additional large files   target_paths_1 <- fs::path(     temp_dir, c(\"large_file2.txt\", \"large_file3.txt\", \"large_file4.txt\"))   target_paths_2 <- fs::path(     temp_sub_dir, c(\"large_file5.txt\", \"large_file6.txt\", \"large_file4.txt\"))   fs::file_copy(rep(file_path, 3), target_paths_1, overwrite = TRUE)   fs::file_copy(rep(file_path, 3), target_paths_2, overwrite = TRUE)    # list of files   fs::dir_ls(temp_dir)   fs::dir_ls(temp_sub_dir)    # ------------------------------------------    # Calculate size of the temporary directory   dir_size(temp_dir)   dir_size(temp_dir, human_readable = FALSE)    # Non-recursive size calculation   dir_size(temp_dir, recursive = FALSE)   dir_size(temp_dir, human_readable = FALSE, recursive = FALSE)    # clean up   fs::dir_delete(temp_dir) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/ecokit-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ecokit: Tools for Ecological and General Utilities — ecokit-package","title":"ecokit: Tools for Ecological and General Utilities — ecokit-package","text":"collection utility functions designed ecologists general R users, providing tools data manipulation, statistical analysis, spatial data handling.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/ecokit-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ecokit: Tools for Ecological and General Utilities — ecokit-package","text":"Maintainer: Ahmed El-Gabbas elgabbas@outlook.com","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":null,"dir":"Reference","previous_headings":"","what":"File Information Utilities — file_operations","title":"File Information Utilities — file_operations","text":"collection functions extract information files, including extension, size, type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File Information Utilities — file_operations","text":"","code":"file_extension(file)  file_size(file, ...)  file_type(file)"},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File Information Utilities — file_operations","text":"file character string representing file path. Must NULL must character string. file_type, file must exist. ... Additional arguments passed gdata::humanReadable customizing output format (file_size ).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File Information Utilities — file_operations","text":"file_extension: character string file extension (e.g., \"txt\"). Returns empty string extension present. file_size: character string representing file size human-readable format (e.g., \"1.2 MB\"). file_type: character string describing file type (e.g., \"ASCII text\").","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"File Information Utilities — file_operations","text":"following functions included: file_extension: Extracts file extension file path using tools::file_ext. verify file existence content, parsing extension file name. file_size: Returns file size human-readable format (e.g., KB, MB, GB) using gdata::humanReadable. file_type: Determines file type using system's file command, returning description file type.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"File Information Utilities — file_operations","text":"file_extension check file existence content, parsing extension file name. file_type relies system's file command, results may vary across platforms. file system command Windows (e.g., GnuWin32 ports) often misidentifies ZIP files \"data\" instead \"Zip archive data, least v2.0 extract\", GNU file correctly reports Unix-like systems (Linux, macOS, Git Bash). due differences file implementations Windows path handling.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"File Information Utilities — file_operations","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/file_operations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File Information Utilities — file_operations","text":"","code":"load_packages(terra)  f <- system.file(\"ex/elev.tif\", package = \"terra\")  file_extension(f)                         # \"tif\" #> [1] \"tif\"  file_size(f)                              # \"7.8 KiB\" #> 7.81K  file_type(f)                              # e.g., \"TIFF image data ...\" #> [1] \"TIFF image data, little-endian, direntries=19, height=90, bps=16, compression=LZW, PhotometricInterpretation=BlackIsZero, width=95\""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function Arguments — function_arguments","title":"Print function Arguments — function_arguments","text":"function takes another function input prints arguments format ArgumentName = DefaultValue. function can optionally assign formatted arguments global environment can load specified package processing.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function Arguments — function_arguments","text":"","code":"function_arguments(function_name, assign = FALSE, package = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function Arguments — function_arguments","text":"function_name function whose arguments want print. Must valid R function. assign Logical. Whether assign arguments variables global environment. Defaults FALSE. package Character. Name R package loaded processing function. Default NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function Arguments — function_arguments","text":"function prints formatted arguments console. assign TRUE, also assigns arguments global environment.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print function Arguments — function_arguments","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/function_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print function Arguments — function_arguments","text":"","code":"# loading packages load_packages(dplyr, purrr)  # --------------------------------------------- # using formals # --------------------------------------------- formals(stats::setNames) #> $object #> nm #>  #> $nm #>  #>   # --------------------------------------------- # no assignment # ---------------------------------------------  function_arguments(stats::setNames) #> object = NULL #> nm = NULL  # objects were not assigned to the global environment any(purrr::map_lgl(c(\"object\", \"nm\"), exists))     # FALSE #> [1] FALSE  # --------------------------------------------- # with assignment # ---------------------------------------------  # Example 1 function_arguments(stats::setNames, assign = TRUE) #> object = NULL #> nm = NULL  all(purrr::map_lgl(c(\"object\", \"nm\"), exists))     # TRUE #> [1] TRUE object #> NULL   # Example 2 function_arguments(get0, assign = TRUE) #> x = NULL #> envir = pos.to.env(-1L) #> mode = \"any\" #> inherits = TRUE #> ifnotfound = NULL  c(\"x\", \"envir\", \"mode\", \"inherits\", \"ifnotfound\") %>%   purrr::map_lgl(exists) %>%   all()                                            # TRUE #> [1] TRUE"},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve CHELSA Data Links — get_chelsa_links","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"Fetches links CHELSA climate data files specified base URL, filters include links *.tif files variables available current future climate scenarios, extracts metadata create tibble detailed file information.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"","code":"get_chelsa_links(base_url = \"https://os.zhdk.cloud.switch.ch/chelsav2/\")"},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"base_url Base URL CHELSA repository. Defaults \"https://os.zhdk.cloud.switch.ch/chelsav2/\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"tibble following columns: url (character): Full URL data file. relative_url (character): Relative URL, excluding base URL. file_name (character): Name data file. dir_name (character): Directory path file. climate_scenario (character): Climate scenario. Values : \"current\", \"ssp126\", \"ssp370\", \"ssp585\". climate_model (character): Climate model. Values : \"Current\", \"GFDL-ESM4\", \"IPSL-CM6A-LR\", \"MPI-ESM1-2-HR\", \"MRI-ESM2-0\", \"UKESM1-0-LL\". year (character): Year range. Values \"1981-2010\", \"2011-2040\", \"2041-2070\", \"2071-2100\". var_name (character): Variable name, e.g., \"bio1\". long_name (character): Full variable name, e.g., \"mean annual air temperature\". unit (character): Measurement unit, e.g., \"°C\". scale (numeric): Scale factor variable. offset (numeric): Offset value variable. explanation (character): Brief description variable.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_chelsa_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve CHELSA Data Links — get_chelsa_links","text":"","code":"library(tibble) library(dplyr) library(ecokit) options(pillar.print_max = 64)  CHELSA_links <- ecokit::get_chelsa_links()  dplyr::glimpse(CHELSA_links) #> Rows: 2,116 #> Columns: 13 #> $ url              <chr> \"https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/clim… #> $ relative_url     <chr> \"GLOBAL/climatologies/1981-2010/bio/CHELSA_bio1_1981-… #> $ file_name        <chr> \"CHELSA_bio1_1981-2010_V.2.1.tif\", \"CHELSA_bio2_1981-… #> $ dir_name         <chr> \"GLOBAL/climatologies/1981-2010/bio\", \"GLOBAL/climato… #> $ climate_scenario <chr> \"current\", \"current\", \"current\", \"current\", \"current\"… #> $ climate_model    <chr> \"current\", \"current\", \"current\", \"current\", \"current\"… #> $ year             <chr> \"1981-2010\", \"1981-2010\", \"1981-2010\", \"1981-2010\", \"… #> $ var_name         <chr> \"bio1\", \"bio2\", \"bio3\", \"bio4\", \"bio5\", \"bio6\", \"bio7… #> $ long_name        <chr> \"mean annual air temperature\", \"mean diurnal air temp… #> $ unit             <chr> \"°C\", \"°C\", \"°C\", \"°C/100\", \"°C\", \"°C\", \"°C\", \"°C\", \"… #> $ scale            <dbl> 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1… #> $ offset           <dbl> -273.15, 0.00, 0.00, 0.00, -273.15, -273.15, 0.00, -2… #> $ explanation      <chr> \"mean annual daily mean air temperatures averaged ove…  # Count the number of files per climate scenario, model, and year dplyr::count(CHELSA_links, climate_scenario, climate_model, year) #> # A tibble: 46 × 4 #>    climate_scenario climate_model year          n #>    <chr>            <chr>         <chr>     <int> #>  1 current          current       1981-2010    46 #>  2 ssp126           GFDL-ESM4     2011-2040    46 #>  3 ssp126           GFDL-ESM4     2041-2070    46 #>  4 ssp126           GFDL-ESM4     2071-2100    46 #>  5 ssp126           IPSL-CM6A-LR  2011-2040    46 #>  6 ssp126           IPSL-CM6A-LR  2041-2070    46 #>  7 ssp126           IPSL-CM6A-LR  2071-2100    46 #>  8 ssp126           MPI-ESM1-2-HR 2011-2040    46 #>  9 ssp126           MPI-ESM1-2-HR 2041-2070    46 #> 10 ssp126           MPI-ESM1-2-HR 2071-2100    46 #> 11 ssp126           MRI-ESM2-0    2011-2040    46 #> 12 ssp126           MRI-ESM2-0    2041-2070    46 #> 13 ssp126           MRI-ESM2-0    2071-2100    46 #> 14 ssp126           UKESM1-0-LL   2011-2040    46 #> 15 ssp126           UKESM1-0-LL   2041-2070    46 #> 16 ssp126           UKESM1-0-LL   2071-2100    46 #> 17 ssp370           GFDL-ESM4     2011-2040    46 #> 18 ssp370           GFDL-ESM4     2041-2070    46 #> 19 ssp370           GFDL-ESM4     2071-2100    46 #> 20 ssp370           IPSL-CM6A-LR  2011-2040    46 #> 21 ssp370           IPSL-CM6A-LR  2041-2070    46 #> 22 ssp370           IPSL-CM6A-LR  2071-2100    46 #> 23 ssp370           MPI-ESM1-2-HR 2011-2040    46 #> 24 ssp370           MPI-ESM1-2-HR 2041-2070    46 #> 25 ssp370           MPI-ESM1-2-HR 2071-2100    46 #> 26 ssp370           MRI-ESM2-0    2011-2040    46 #> 27 ssp370           MRI-ESM2-0    2041-2070    46 #> 28 ssp370           MRI-ESM2-0    2071-2100    46 #> 29 ssp370           UKESM1-0-LL   2011-2040    46 #> 30 ssp370           UKESM1-0-LL   2041-2070    46 #> 31 ssp370           UKESM1-0-LL   2071-2100    46 #> 32 ssp585           GFDL-ESM4     2011-2040    46 #> 33 ssp585           GFDL-ESM4     2041-2070    46 #> 34 ssp585           GFDL-ESM4     2071-2100    46 #> 35 ssp585           IPSL-CM6A-LR  2011-2040    46 #> 36 ssp585           IPSL-CM6A-LR  2041-2070    46 #> 37 ssp585           IPSL-CM6A-LR  2071-2100    46 #> 38 ssp585           MPI-ESM1-2-HR 2011-2040    46 #> 39 ssp585           MPI-ESM1-2-HR 2041-2070    46 #> 40 ssp585           MPI-ESM1-2-HR 2071-2100    46 #> 41 ssp585           MRI-ESM2-0    2011-2040    46 #> 42 ssp585           MRI-ESM2-0    2041-2070    46 #> 43 ssp585           MRI-ESM2-0    2071-2100    46 #> 44 ssp585           UKESM1-0-LL   2011-2040    46 #> 45 ssp585           UKESM1-0-LL   2041-2070    46 #> 46 ssp585           UKESM1-0-LL   2071-2100    46  CHELSA_links %>%   dplyr::count(var_name, long_name, unit, scale, offset, explanation) #> # A tibble: 46 × 7 #>    var_name long_name                       unit  scale offset explanation     n #>    <chr>    <chr>                           <chr> <dbl>  <dbl> <chr>       <int> #>  1 bio1     mean annual air temperature     °C      0.1  -273. \"mean annu…    46 #>  2 bio10    mean daily mean air temperatur… °C      0.1  -273. \"The warme…    46 #>  3 bio11    mean daily mean air temperatur… °C      0.1  -273. \"The colde…    46 #>  4 bio12    annual precipitation amount     kg m…   0.1     0  \"Accumulat…    46 #>  5 bio13    precipitation amount of the we… kg m…   0.1     0  \"The preci…    46 #>  6 bio14    precipitation amount of the dr… kg m…   0.1     0  \"The preci…    46 #>  7 bio15    precipitation seasonality       kg m…   0.1     0  \"The Coeff…    46 #>  8 bio16    mean monthly precipitation amo… kg m…   0.1     0  \"The wette…    46 #>  9 bio17    mean monthly precipitation amo… kg m…   0.1     0  \"The dries…    46 #> 10 bio18    mean monthly precipitation amo… kg m…   0.1     0  \"The warme…    46 #> 11 bio19    mean monthly precipitation amo… kg m…   0.1     0  \"The colde…    46 #> 12 bio2     mean diurnal air temperature r… °C      0.1     0  \"mean diur…    46 #> 13 bio3     isothermality                   °C      0.1     0  \"ratio of …    46 #> 14 bio4     temperature seasonality         °C/1…   0.1     0  \"standard …    46 #> 15 bio5     mean daily maximum air tempera… °C      0.1  -273. \"The highe…    46 #> 16 bio6     mean daily minimum air tempera… °C      0.1  -273. \"The lowes…    46 #> 17 bio7     annual range of air temperature °C      0.1     0  \"The diffe…    46 #> 18 bio8     mean daily mean air temperatur… °C      0.1  -273. \"The wette…    46 #> 19 bio9     mean daily mean air temperatur… °C      0.1  -273. \"The dries…    46 #> 20 fcf      Frost change frequency          count  NA      NA  \"Number of…    46 #> 21 fgd      first day of the growing seaso… juli…  NA      NA  \"first day…    46 #> 22 gdd0     Growing degree days heat sum a… °C      0.1     0  \"heat sum …    46 #> 23 gdd10    Growing degree days heat sum a… °C      0.1     0  \"heat sum …    46 #> 24 gdd5     Growing degree days heat sum a… °C      0.1     0  \"heat sum …    46 #> 25 gddlgd0  Last growing degree day above … juli…  NA      NA  \"Last day …    46 #> 26 gddlgd10 Last growing degree day above … juli…  NA      NA  \"Last day …    46 #> 27 gddlgd5  Last growing degree day above … juli…  NA      NA  \"Last day …    46 #> 28 gdgfgd0  First growing degree day above… juli…  NA      NA  \"First day…    46 #> 29 gdgfgd10 First growing degree day above… juli…  NA      NA  \"First day…    46 #> 30 gdgfgd5  First growing degree day above… juli…  NA      NA  \"First day…    46 #> 31 gsl      growing season length TREELIM   numb…  NA      NA  \"Length of…    46 #> 32 gsp      Accumulated precipiation amoun… kg m…   0.1     0  \"precipita…    46 #> 33 gst      Mean temperature of the growin… °C      0.1  -273. \"Mean temp…    46 #> 34 kg0      Köppen-Geiger climate classifi… cate…  NA      NA  \"Köppen Ge…    46 #> 35 kg1      Köppen-Geiger climate classifi… cate…  NA      NA  \"Köppen Ge…    46 #> 36 kg2      Köppen-Geiger climate classifi… cate…  NA      NA  \"Köppen Ge…    46 #> 37 kg3      Köppen-Geiger climate classifi… cate…  NA      NA  \"Wissmann …    46 #> 38 kg4      Köppen-Geiger climate classifi… cate…  NA      NA  \"Thornthwa…    46 #> 39 kg5      Köppen-Geiger climate classifi… cate…  NA      NA  \"Troll-Pfa…    46 #> 40 lgd      last day of the growing season… juli…  NA      NA  \"Last day …    46 #> 41 ngd0     Number of growing degree days   numb…  NA      NA  \"Number of…    46 #> 42 ngd10    Number of growing degree days   numb…  NA      NA  \"Number of…    46 #> 43 ngd5     Number of growing degree days   numb…  NA      NA  \"Number of…    46 #> 44 npp      Net primary productivity        g C …   0.1     0  \"Calculate…    46 #> 45 scd      Snow cover days                 count  NA      NA  \"Number of…    46 #> 46 swe      Snow water equivalent           kg m…   0.1     0  \"Amount of…    46  print(CHELSA_links, n = 200) #> # A tibble: 2,116 × 13 #>     url     relative_url file_name dir_name climate_scenario climate_model year  #>     <chr>   <chr>        <chr>     <chr>    <chr>            <chr>         <chr> #>   1 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   2 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   3 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   4 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   5 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   6 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   7 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   8 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>   9 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  10 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  11 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  12 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  13 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  14 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  15 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  16 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  17 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  18 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  19 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… current          current       1981… #>  20 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… current          current       1981… #>  21 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… current          current       1981… #>  22 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  23 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  24 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  25 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  26 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  27 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  28 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  29 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  30 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  31 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  32 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  33 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… current          current       1981… #>  34 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  35 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  36 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  37 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  38 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  39 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… current          current       1981… #>  40 https:… GLOBAL/clim… CHELSA_l… GLOBAL/… current          current       1981… #>  41 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… current          current       1981… #>  42 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… current          current       1981… #>  43 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… current          current       1981… #>  44 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… current          current       1981… #>  45 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… current          current       1981… #>  46 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… current          current       1981… #>  47 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  48 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  49 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  50 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  51 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  52 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  53 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  54 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  55 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  56 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  57 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  58 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  59 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  60 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  61 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  62 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  63 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  64 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  65 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  66 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  67 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  68 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  69 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  70 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  71 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  72 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  73 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  74 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  75 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  76 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  77 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  78 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  79 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  80 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  81 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  82 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  83 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  84 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  85 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  86 https:… GLOBAL/clim… CHELSA_l… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  87 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  88 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  89 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  90 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  91 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  92 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2011… #>  93 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  94 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  95 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  96 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  97 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  98 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #>  99 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 100 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 101 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 102 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 103 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 104 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 105 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 106 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 107 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 108 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 109 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 110 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 111 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 112 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 113 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 114 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 115 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 116 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 117 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 118 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 119 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 120 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 121 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 122 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 123 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 124 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 125 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 126 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 127 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 128 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 129 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 130 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 131 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 132 https:… GLOBAL/clim… CHELSA_l… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 133 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 134 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 135 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 136 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 137 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 138 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2041… #> 139 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 140 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 141 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 142 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 143 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 144 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 145 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 146 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 147 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 148 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 149 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 150 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 151 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 152 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 153 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 154 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 155 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 156 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 157 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 158 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 159 https:… GLOBAL/clim… CHELSA_f… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 160 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 161 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 162 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 163 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 164 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 165 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 166 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 167 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 168 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 169 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 170 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 171 https:… GLOBAL/clim… CHELSA_g… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 172 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 173 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 174 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 175 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 176 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 177 https:… GLOBAL/clim… CHELSA_k… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 178 https:… GLOBAL/clim… CHELSA_l… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 179 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 180 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 181 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 182 https:… GLOBAL/clim… CHELSA_n… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 183 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 184 https:… GLOBAL/clim… CHELSA_s… GLOBAL/… ssp126           GFDL-ESM4     2071… #> 185 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 186 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 187 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 188 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 189 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 190 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 191 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 192 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 193 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 194 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 195 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 196 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 197 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 198 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 199 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> 200 https:… GLOBAL/clim… CHELSA_b… GLOBAL/… ssp126           IPSL-CM6A-LR  2011… #> # ℹ 1,916 more rows #> # ℹ 6 more variables: var_name <chr>, long_name <chr>, unit <chr>, scale <dbl>, #> #   offset <dbl>, explanation <chr>"},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode of a numeric vector — get_mode","title":"Calculate the mode of a numeric vector — get_mode","text":"function calculates mode given numeric vector.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode of a numeric vector — get_mode","text":"","code":"get_mode(x)"},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Calculate the mode of a numeric vector — get_mode","text":"source function taken link.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode of a numeric vector — get_mode","text":"x Numeric vector. must NULL empty.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode of a numeric vector — get_mode","text":"mode vector single value. vector uniform distribution (values appear frequency), function returns first value encountered.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/get_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode of a numeric vector — get_mode","text":"","code":"get_mode(c(seq_len(10), 1, 1, 3, 3, 3, 3)) #> [1] 3  get_mode(c(1, 2, 2, 3, 4)) #> [1] 2  get_mode(c(1, 1, 2, 3, 3)) #> [1] 1"},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print or return a detailed Git log of a repository — git_log","title":"Print or return a detailed Git log of a repository — git_log","text":"Checks specified directory Git repository , , executes git log command either print log console return character vector. log displayed visually appealing graph format, showing commit hashes, references, messages, relative dates, authors.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print or return a detailed Git log of a repository — git_log","text":"","code":"git_log(path = \".\", n_commits = NULL, return_log = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print or return a detailed Git log of a repository — git_log","text":"path Character. Path directory check. Defaults current working directory \".\". path exist, function stops error. path Git repository, warning issued. n_commits Integer. Number recent commits display. NULL (default), complete log shown. Ignored return_log = TRUE. return_log Logical. TRUE, returns log character vector. FALSE (default), prints log console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print or return a detailed Git log of a repository — git_log","text":"return_log = TRUE, returns character vector log lines. return_log = FALSE, function called side effect printing console returns invisible(NULL).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Print or return a detailed Git log of a repository — git_log","text":"function stops error path exist, OS unsupported, Git installed, n_commits invalid.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print or return a detailed Git log of a repository — git_log","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/git_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print or return a detailed Git log of a repository — git_log","text":"","code":"# Show the most recent commit git_log(n_commits = 1) #> * baa356f - (grafted, HEAD -> main, origin/main) Adapt `quietly` to also support messages (5 minutes ago) <Ahmed El-Gabbas>  # Show the most recent 5 commits git_log(n_commits = 5) #> * baa356f - (grafted, HEAD -> main, origin/main) Adapt `quietly` to also support messages (5 minutes ago) <Ahmed El-Gabbas>  # by default, the log is only printed, not returned log_example <- git_log(n_commits = 1) #> * baa356f - (grafted, HEAD -> main, origin/main) Adapt `quietly` to also support messages (5 minutes ago) <Ahmed El-Gabbas> print(log_example) #> NULL  # Return the complete log as a character vector log_example <- git_log(return_log = TRUE) length(log_example) #> [1] 1 head(log_example, 8) #> [1] \"* baa356f - (grafted, HEAD -> main, origin/main) Adapt `quietly` to also support messages (5 minutes ago) <Ahmed El-Gabbas>\"  # not a git repo non_git_dir <- fs::path_temp(\"test_dir\") fs::dir_create(non_git_dir) git_log(path = non_git_dir) #>  ! The provided directory is not a Git repository  # clean up fs::dir_delete(non_git_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":null,"dir":"Reference","previous_headings":"","what":"Print head and tail of a data frame or vector with indices — ht","title":"Print head and tail of a data frame or vector with indices — ht","text":"Prints first last rows data frame elements vector, displaying row numbers data frames indices vectors style similar data.table. Useful quickly inspecting structure contents large data frames vectors, explicit row index numbers.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print head and tail of a data frame or vector with indices — ht","text":"","code":"ht(data = NULL, n_rows = 5L)"},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print head and tail of a data frame or vector with indices — ht","text":"data data frame vector (numeric, character, atomic types). parameter NULL. n_rows Integer. Number rows (data frames) elements (vectors) print head tail. Defaults 5.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print head and tail of a data frame or vector with indices — ht","text":"function used side effect (printing) returns invisible(NULL).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print head and tail of a data frame or vector with indices — ht","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/ht.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print head and tail of a data frame or vector with indices — ht","text":"","code":"# Data frame examples  ht(mtcars) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6 160.0   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6 160.0   110  3.90 2.875 17.02     0     1     4     4 #>  3:  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1 #>  4:  21.4     6 258.0   110  3.08 3.215 19.44     1     0     3     1 #>  5:  18.7     8 360.0   175  3.15 3.440 17.02     0     0     3     2 #> ---                                                                   #> 28:  30.4     4  95.1   113  3.77 1.513 16.90     1     1     5     2 #> 29:  15.8     8 351.0   264  4.22 3.170 14.50     0     1     5     4 #> 30:  19.7     6 145.0   175  3.62 2.770 15.50     0     1     5     6 #> 31:  15.0     8 301.0   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4 121.0   109  4.11 2.780 18.60     1     1     4     2  ht(data = mtcars, n_rows = 2) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6   160   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6   160   110  3.90 2.875 17.02     0     1     4     4 #> ---                                                                   #> 31:  15.0     8   301   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4   121   109  4.11 2.780 18.60     1     1     4     2  ht(data = mtcars, n_rows = 6) #>       mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>     <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> <num> #>  1:  21.0     6 160.0   110  3.90 2.620 16.46     0     1     4     4 #>  2:  21.0     6 160.0   110  3.90 2.875 17.02     0     1     4     4 #>  3:  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1 #>  4:  21.4     6 258.0   110  3.08 3.215 19.44     1     0     3     1 #>  5:  18.7     8 360.0   175  3.15 3.440 17.02     0     0     3     2 #>  6:  18.1     6 225.0   105  2.76 3.460 20.22     1     0     3     1 #> ---                                                                   #> 27:  26.0     4 120.3    91  4.43 2.140 16.70     0     1     5     2 #> 28:  30.4     4  95.1   113  3.77 1.513 16.90     1     1     5     2 #> 29:  15.8     8 351.0   264  4.22 3.170 14.50     0     1     5     4 #> 30:  19.7     6 145.0   175  3.62 2.770 15.50     0     1     5     6 #> 31:  15.0     8 301.0   335  3.54 3.570 14.60     0     1     5     8 #> 32:  21.4     4 121.0   109  4.11 2.780 18.60     1     1     4     2  # -------------------------------------------  # Vector examples  ht(1:100) #>      value #>      <int> #>   1:     1 #>   2:     2 #>   3:     3 #>   4:     4 #>   5:     5 #>  ---       #>  96:    96 #>  97:    97 #>  98:    98 #>  99:    99 #> 100:   100  ht(letters) #>      value #>     <char> #>  1:      a #>  2:      b #>  3:      c #>  4:      d #>  5:      e #> ---        #> 22:      v #> 23:      w #> 24:      x #> 25:      y #> 26:      z  colour_vect <- colours() colour_vect <- seq_along(colour_vect) %>%   stats::setNames(paste0(\"colour:\", colour_vect)) head(colour_vect) #>         colour:white     colour:aliceblue  colour:antiquewhite  #>                    1                    2                    3  #> colour:antiquewhite1 colour:antiquewhite2 colour:antiquewhite3  #>                    4                    5                    6  ht(colour_vect) #>                      name value #>                    <char> <int> #>   1:         colour:white     1 #>   2:     colour:aliceblue     2 #>   3:  colour:antiquewhite     3 #>   4: colour:antiquewhite1     4 #>   5: colour:antiquewhite2     5 #>  ---                            #> 653:       colour:yellow1   653 #> 654:       colour:yellow2   654 #> 655:       colour:yellow3   655 #> 656:       colour:yellow4   656 #> 657:   colour:yellowgreen   657"},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Information chunk with time stamp — info_chunk","title":"Print Information chunk with time stamp — info_chunk","text":"function prints formatted message timestamp, surrounded separators better readability console outputs logs.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Information chunk with time stamp — info_chunk","text":"","code":"info_chunk(   message = \"\",   cat_date = TRUE,   sep_lines_before = 0L,   sep_lines_after = 1L,   cat_bold = FALSE,   cat_red = FALSE,   cat_timestamp = FALSE,   level = 0L,   msg_n_lines = 1L,   info_lines_before = 0L,   verbose = TRUE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Information chunk with time stamp — info_chunk","text":"message Character. main message timestamped. parameter mandatory NULL empty. cat_date Logical. Whether include date timestamp. Default FALSE, meaning time printed. See cat_time. sep_lines_before, sep_lines_after Integer. Number extra empty lines print separator lines. See cat_sep details. cat_bold logical; whether print text bold. Default FALSE. cat_red logical; whether print text red. Default FALSE. cat_timestamp Logical. Whether include time timestamp. Default FALSE. level integer; level message printed. e.g. level = 1L, following string printed beginning message: \"   >>>   \". Default 0. msg_n_lines integer; number newline characters print message. Default 1. info_lines_before Integer. Number extra empty lines print message. Default 0L. verbose logical; whether print output console. Default TRUE. FALSE, function nothing. useful suppress function output certain contexts. ... Additional arguments passed cat_sep customizing separators.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Information chunk with time stamp — info_chunk","text":"function return value prints message separators console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Information chunk with time stamp — info_chunk","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/info_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Information chunk with time stamp — info_chunk","text":"","code":"info_chunk(message = \"Started\") #>  #> -------------------------------------------------- #> Started - 19/08/2025 #> -------------------------------------------------- #>   info_chunk(message = \"finished\", line_char = \"*\", line_char_rep = 60) #>  #> ************************************************************ #> finished - 19/08/2025 #> ************************************************************ #>   info_chunk(message = \"Started\", cat_bold =  TRUE, cat_red = TRUE) #>  #> -------------------------------------------------- #> Started - 19/08/2025 #> -------------------------------------------------- #>"},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Integer breaks for ggplot axis — integer_breaks","title":"Integer breaks for ggplot axis — integer_breaks","text":"function generates function calculates integer axis values ggplot, ensuring axis breaks integers. particularly useful creating cleaner, readable plots.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integer breaks for ggplot axis — integer_breaks","text":"","code":"integer_breaks(n_breaks = 5L, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integer breaks for ggplot axis — integer_breaks","text":"n_breaks integer (default: 5), desired number breaks axis. Note actual number breaks may slightly differ requested. ... additional arguments passed base::pretty.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integer breaks for ggplot axis — integer_breaks","text":"function takes numeric vector x returns vector integer breaks axis, names attribute set break labels.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integer breaks for ggplot axis — integer_breaks","text":"source function available link.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/integer_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integer breaks for ggplot axis — integer_breaks","text":"","code":"ggplot2::ggplot(mtcars, ggplot2::aes(x = drat, y = hp)) +   ggplot2::geom_point() +   ggplot2::scale_x_continuous()   ggplot2::ggplot(mtcars, ggplot2::aes(x = drat, y = hp)) +   ggplot2::geom_point() +   ggplot2::scale_x_continuous(breaks = integer_breaks(5))"},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep only specified objects in the environment, removing all others. — keep_only","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"function selectively retains objects specified objects parameter current environment, removing objects. useful memory management clearing unnecessary objects environment. function also provides option print names kept removed variables.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"","code":"keep_only(objects, verbose = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"objects Character vector. Names objects kept environment. verbose Logical. Whether print names kept removed variables. Default TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"return value, called side effects.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/keep_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep only specified objects in the environment, removing all others. — keep_only","text":"","code":"load_packages(terra)  A <- B <- C <- 15 ls() #> [1] \"A\" \"B\" \"C\"  keep_only(\"A\") #> Removed Variables (2): 1:B ||  2:C #> Kept Variables (1): 1:A  ls() #> [1] \"A\" rm(list = ls())   A <- B <- C <- 15 keep_only(c(\"A\",\"B\")) #> Removed Variables (1): 1:C #> Kept Variables (2): 1:A ||  2:B ls() #> [1] \"A\" \"B\"  # -------------------------------------------  # use inside a function function1 <- function(a = 1, b = 2, c = 3) {   z <- terra::rast()   print(paste0(\"available objects before keep_only: \", toString(ls())))    keep_only(c(\"a\", \"b\"), verbose = FALSE)   print(paste0(\"available objects after keep_only: \", toString(ls())))    return(invisible(NULL)) } function1() #> [1] \"available objects before keep_only: a, b, c, z\" #> [1] \"available objects after keep_only: a, b\""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":null,"dir":"Reference","previous_headings":"","what":"Split list items into separate .RData files — list_to_rdata","title":"Split list items into separate .RData files — list_to_rdata","text":"function takes named list saves element list separate .RData file. names list elements used base filenames, optionally prefixed. Files saved specified directory, option overwrite existing files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split list items into separate .RData files — list_to_rdata","text":"","code":"list_to_rdata(list, prefix = \"\", directory = getwd(), overwrite = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split list items into separate .RData files — list_to_rdata","text":"list named list object split separate .RData files. prefix Character. Prefix filename. empty (default), prefix added. directory directory .RData files saved. Defaults current working directory. overwrite logical indicating whether overwrite existing files. Defaults FALSE, case files already exist overwritten, message printed file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split list items into separate .RData files — list_to_rdata","text":"function called side effect saving files return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split list items into separate .RData files — list_to_rdata","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/list_to_RData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split list items into separate .RData files — list_to_rdata","text":"","code":"load_packages(dplyr, fs)  # split iris data by species name iris2 <- iris %>%   tibble::tibble() %>%   split(~Species)  str(iris2, 1) #> List of 3 #>  $ setosa    : tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ versicolor: tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ virginica : tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  # save each species as a separate RData file temp_dir <- fs::path_temp(\"list_to_rdata\") fs::dir_create(temp_dir) list.files(temp_dir) #> character(0)  list_to_rdata(list = iris2, directory = temp_dir) list.files(temp_dir) #> [1] \"setosa.RData\"     \"versicolor.RData\" \"virginica.RData\"   # loading data setosa <- load_as(fs::path(temp_dir, \"setosa.RData\")) str(setosa, 1) #> tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  versicolor <- load_as(fs::path(temp_dir, \"versicolor.RData\")) str(versicolor, 1) #> tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  virginica <- load_as(fs::path(temp_dir, \"virginica.RData\")) str(virginica, 1) #> tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  # load multiple files in a single R object loaded_data <- load_multiple(   files = fs::path(   temp_dir, c(\"setosa.RData\", \"versicolor.RData\", \"virginica.RData\")),   verbose = TRUE) #> Loading all objects as a single R object #> Object:  setosa  was loaded successfully #> Object:  versicolor  was loaded successfully #> Object:  virginica  was loaded successfully #>  str(loaded_data, 1) #> List of 3 #>  $ setosa    : tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ versicolor: tibble [50 × 5] (S3: tbl_df/tbl/data.frame) #>  $ virginica : tibble [50 × 5] (S3: tbl_df/tbl/data.frame)  # clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Load objects from RData / qs2 / rds / feather file — load_as","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"function loads RData file specified file parameter. RData file contains single object, object returned directly. file contains multiple objects, returned list object accessible name. allows flexible handling loaded data without needing know names objects stored within RData file ahead time. function also supports loading feather, qs2 rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"","code":"load_as(   file = NULL,   n_threads = 1L,   timeout = 300L,   load_packages = TRUE,   unwrap_r = FALSE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"file Character. file path URL file loaded. file URL, function download file URL temporary file load . n_threads Number threads use reading qs2 files. See qs2::qs_read. timeout integer; time seconds download times . Default 300 seconds; see download.file. load_packages Logical. TRUE (default), attempt load R packages correspond main classes loaded object(s). unwrap_r Logical. TRUE, loaded object PackedSpatRaster, unwrapped using terra::unwrap. ... Additional arguments passed respective load functions. base::load RData files; qs2::qs_read qs2 files; arrow::read_feather feather files; base::readRDS rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"Depending contents RData file, function returns either single R object named list R objects. names list elements (list returned) correspond names objects stored within RData file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load objects from RData / qs2 / rds / feather file — load_as","text":"","code":"file <- system.file(\"testdata\", \"culcita_dat.RData\", package = \"lme4\")  # --------------------------------------------------------- # loading RData using base::load # ---------------------------------------------------------  (load(file)) #> [1] \"culcita_dat\"  ls() #> [1] \"culcita_dat\" \"file\"         tibble::tibble(culcita_dat) #> # A tibble: 80 × 3 #>    block predation ttt   #>    <fct>     <dbl> <fct> #>  1 1             0 none  #>  2 1             1 none  #>  3 2             1 none  #>  4 2             1 none  #>  5 3             1 none  #>  6 3             1 none  #>  7 4             1 none  #>  8 4             1 none  #>  9 5             1 none  #> 10 5             1 none  #> # ℹ 70 more rows  # --------------------------------------------------------- # Loading as custom object name # ---------------------------------------------------------  NewObj <- load_as(file = file)  ls() #> [1] \"NewObj\"      \"culcita_dat\" \"file\"         print(tibble::tibble(NewObj)) #> # A tibble: 80 × 3 #>    block predation ttt   #>    <fct>     <dbl> <fct> #>  1 1             0 none  #>  2 1             1 none  #>  3 2             1 none  #>  4 2             1 none  #>  5 3             1 none  #>  6 3             1 none  #>  7 4             1 none  #>  8 4             1 none  #>  9 5             1 none  #> 10 5             1 none  #> # ℹ 70 more rows  # --------------------------------------------------------- # Loading multiple objects stored in single RData file # ---------------------------------------------------------  # store three objects to single RData file mtcars2 <- mtcars3 <- mtcars  # save in the order of mtcars2, mtcars3, mtcars TempFile_1 <- tempfile(pattern = \"mtcars_\", fileext = \".RData\") save(mtcars2, mtcars3, mtcars, file = TempFile_1)  # save in another order: mtcars, mtcars2, mtcars3 TempFile_2 <- tempfile(pattern = \"mtcars_\", fileext = \".RData\") save(mtcars, mtcars2, mtcars3, file = TempFile_2)  # loading as a single list  with 3 items, keeping original order mtcars_all_1 <- load_as(TempFile_1) str(mtcars_all_1, 1) #> List of 3 #>  $ mtcars2:'data.frame':\t32 obs. of  11 variables: #>  $ mtcars3:'data.frame':\t32 obs. of  11 variables: #>  $ mtcars :'data.frame':\t32 obs. of  11 variables:  mtcars_all_2 <- load_as(TempFile_2) str(mtcars_all_2, 1) #> List of 3 #>  $ mtcars :'data.frame':\t32 obs. of  11 variables: #>  $ mtcars2:'data.frame':\t32 obs. of  11 variables: #>  $ mtcars3:'data.frame':\t32 obs. of  11 variables:"},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Load multiple data files together — load_multiple","title":"Load multiple data files together — load_multiple","text":"function loads multiple data files either single list object directly specified environment. provides options verbosity, returning object names, handling non-existent files. Supported data files include: .RData, .rds, .qs2, .feather.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load multiple data files together — load_multiple","text":"","code":"load_multiple(   files = NULL,   verbose = TRUE,   single_object = TRUE,   return_names = TRUE,   n_threads = 1L,   conflict = c(\"skip\", \"overwrite\", \"rename\"),   environment = .GlobalEnv )"},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load multiple data files together — load_multiple","text":"files Character vector. Paths .RData, .rds, .qs2, .feather files loaded. verbose Logical. Whether print progress messages. Default: TRUE. single_object Logical. Whether load objects single list (TRUE) directly specified environment (FALSE). Defaults TRUE. return_names Logical. Whether return names loaded objects. Defaults TRUE. effective single_object FALSE. n_threads Integer. Number threads reading .qs2 files. Must positive integer. See qs2::qs_read load_as details. conflict Character. Strategy handling naming conflicts single_object = FALSE: \"skip\" (default, skip conflicting files), \"overwrite\" (replace existing objects), \"rename\" (append suffix new objects). environment Environment. environment objects loaded single_object FALSE. Defaults .GlobalEnv.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load multiple data files together — load_multiple","text":"single_object TRUE, returns named list objects loaded specified files (NULL failed loads). single_object FALSE return_names TRUE, returns character vector names objects loaded environment. Otherwise, returns NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Load multiple data files together — load_multiple","text":".RData files containing multiple objects, function loads object individually applies conflict strategy . Non-conflicting objects retain original names rename mode.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load multiple data files together — load_multiple","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load multiple data files together — load_multiple","text":"","code":"ecokit::load_packages(qs2, arrow, fs, terra, dplyr)  # --------------------------------------------------- # Create sample data files # ---------------------------------------------------  # Setup temporary directory temp_dir <- fs::path_temp(\"load_multiple\") fs::dir_create(temp_dir)  # Create sample data files data1 <- terra::wrap(terra::rast(matrix(1:16, nrow = 4))) data2 <- matrix(1:9, nrow = 3) data3 <- list(a = 1:10, b = letters[1:5]) data4 <- data.frame(x = 1:5)  save(data1, file = fs::path(temp_dir, \"data1.RData\")) saveRDS(data2, file = fs::path(temp_dir, \"data2.rds\")) qs2::qs_save(data3, file = fs::path(temp_dir, \"data3.qs2\"), nthreads = 1) arrow::write_feather(   as.data.frame(data4), sink = fs::path(temp_dir, \"data4.feather\"))  files <- fs::path(   temp_dir, c(\"data1.RData\", \"data2.rds\", \"data3.qs2\", \"data4.feather\")) basename(files) #> [1] \"data1.RData\"   \"data2.rds\"     \"data3.qs2\"     \"data4.feather\"  # Create a specific environment for examples example_env <- new.env()  # --------------------------------------------------- # Load mixed data files to one list object # `single_object = TRUE` # ---------------------------------------------------  MultiObj <- load_multiple(files = files, single_object = TRUE, n_threads = 1) #> Loading all objects as a single R object #> Object:  data1  was loaded successfully #> Object:  data2  was loaded successfully #> Object:  data3  was loaded successfully #> Object:  data4  was loaded successfully #>  str(MultiObj, 1) #> List of 4 #>  $ data1:Formal class 'PackedSpatRaster' [package \"terra\"] with 3 slots #>  $ data2: int [1:3, 1:3] 1 2 3 4 5 6 7 8 9 #>  $ data3:List of 2 #>  $ data4: tibble [5 × 1] (S3: tbl_df/tbl/data.frame)  # --------------------------------------------------- # Load mixed data files separately to the specific environment # `single_object = FALSE`, skip conflicts # ---------------------------------------------------  # Remove any existing objects in example_env rm(list = ls(envir = example_env), envir = example_env)  # Create conflicting object in example_env assign(\"data2\", \"conflict\", envir = example_env) load_multiple(   files = files, single_object = FALSE, conflict = \"skip\",   environment = example_env, n_threads = 1) #> Loading all objects separately  #> Object data1 was loaded successfully from file data1.RData #> Object data2 exists; skipped from file data2.rds #> Object data3 was loaded successfully from file data3.qs2 #> Object data4 was loaded successfully from file data4.feather #>  #> [1] \"data1\" \"data3\" \"data4\" ls(envir = example_env) #> [1] \"data1\" \"data2\" \"data3\" \"data4\"  str(get(\"data1\", envir = example_env), 1) #> Formal class 'PackedSpatRaster' [package \"terra\"] with 3 slots str(get(\"data2\", envir = example_env), 1) #>  chr \"conflict\" str(get(\"data3\", envir = example_env), 1) #> List of 2 #>  $ a: int [1:10] 1 2 3 4 5 6 7 8 9 10 #>  $ b: chr [1:5] \"a\" \"b\" \"c\" \"d\" ... str(get(\"data4\", envir = example_env), 1) #> tibble [5 × 1] (S3: tbl_df/tbl/data.frame)  # --------------------------------------------------- # Load mixed data files, overwrite conflicts # `single_object = FALSE`, overwrite # ---------------------------------------------------  # Remove specific objects from example_env rm(list = c(\"data1\", \"data3\", \"data4\"), envir = example_env) ls(envir = example_env) #> [1] \"data2\"  load_multiple(   files = files, single_object = FALSE, conflict = \"overwrite\",   environment = example_env, n_threads = 1) #> Loading all objects separately  #> Object:  data1  was loaded successfully #> Object:  data2  already exists and overwritten #> Object:  data3  was loaded successfully #> Object:  data4  was loaded successfully #>  #> [1] \"data1\" \"data2\" \"data3\" \"data4\" ls(envir = example_env) #> [1] \"data1\" \"data2\" \"data3\" \"data4\"  str(get(\"data1\", envir = example_env), 1) #> Formal class 'PackedSpatRaster' [package \"terra\"] with 3 slots str(get(\"data2\", envir = example_env), 1) #>  int [1:3, 1:3] 1 2 3 4 5 6 7 8 9 str(get(\"data3\", envir = example_env), 1) #> List of 2 #>  $ a: int [1:10] 1 2 3 4 5 6 7 8 9 10 #>  $ b: chr [1:5] \"a\" \"b\" \"c\" \"d\" ... str(get(\"data4\", envir = example_env), 1) #> tibble [5 × 1] (S3: tbl_df/tbl/data.frame)  # --------------------------------------------------- # Load mixed data files, rename conflicts # `single_object = FALSE`, rename # ---------------------------------------------------  # Remove specific objects from example_env rm(list = c(\"data1\", \"data3\", \"data4\"), envir = example_env) ls(envir = example_env) #> [1] \"data2\"  # Create conflicting object in example_env assign(\"data2\", 1:10, envir = example_env)  load_multiple(   files = files, single_object = FALSE, conflict = \"rename\",   environment = example_env, n_threads = 1) #> Loading all objects separately  #> Object:  data1  was loaded successfully #> Object:  data2  exists; loaded as  data2_new  #> Object:  data3  was loaded successfully #> Object:  data4  was loaded successfully #>  #> [1] \"data1\"     \"data2_new\" \"data3\"     \"data4\"     ls(envir = example_env) #> [1] \"data1\"     \"data2\"     \"data2_new\" \"data3\"     \"data4\"      str(get(\"data1\", envir = example_env), 1) #> Formal class 'PackedSpatRaster' [package \"terra\"] with 3 slots str(get(\"data2\", envir = example_env), 1) #>  int [1:10] 1 2 3 4 5 6 7 8 9 10 str(get(\"data2_new\", envir = example_env), 1) #>  int [1:3, 1:3] 1 2 3 4 5 6 7 8 9 str(get(\"data3\", envir = example_env), 1) #> List of 2 #>  $ a: int [1:10] 1 2 3 4 5 6 7 8 9 10 #>  $ b: chr [1:5] \"a\" \"b\" \"c\" \"d\" ... str(get(\"data4\", envir = example_env), 1) #> tibble [5 × 1] (S3: tbl_df/tbl/data.frame)  # Clean up fs::file_delete(files) fs::dir_delete(temp_dir) rm(example_env)"},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or install multiple R packages — load_packages","title":"Load or install multiple R packages — load_packages","text":"function attempts load multiple R packages specified user. package installed, function can optionally install loading. also provides option print names versions loaded packages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or install multiple R packages — load_packages","text":"","code":"load_packages(   ...,   package_list = NULL,   verbose = FALSE,   install_missing = FALSE,   n_cpus = getOption(\"Ncpus\", 1L) )"},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or install multiple R packages — load_packages","text":"... Character. Names packages loaded installed. package_list Character vector. alternative additional way specify package names vector. verbose Logical. TRUE, prints names versions loaded packages. Defaults FALSE. install_missing Logical. TRUE, missing packages automatically installed loaded. Defaults FALSE. n_cpus Integer. Number CPUs use parallel installation packages. Defaults value Ncpus option. valid install_missing TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load or install multiple R packages — load_packages","text":"function used side effects (loading/installing packages) return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load or install multiple R packages — load_packages","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load or install multiple R packages — load_packages","text":"","code":"# Currently loaded packages (P1 <- ecokit::loaded_packages()) #>  [1] \"qs2\"       \"car\"       \"carData\"   \"rworldmap\" \"raster\"    \"sp\"        #>  [7] \"arrow\"     \"purrr\"     \"terra\"     \"fs\"        \"tidyr\"     \"tibble\"    #> [13] \"png\"       \"sf\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    \"magrittr\"  #> [19] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   #> [25] \"base\"       # Load tidyr load_packages(tidyr, raster, ggplot2, verbose = TRUE) #> The following packages were already loaded: #>   >>>>  ggplot2 (3.5.2) #>   >>>>  raster (3.6-32) #>   >>>>  tidyr (1.3.1)  # Loaded packages after implementing the function (P2 <- ecokit::loaded_packages()) #>  [1] \"qs2\"       \"car\"       \"carData\"   \"rworldmap\" \"raster\"    \"sp\"        #>  [7] \"arrow\"     \"purrr\"     \"terra\"     \"fs\"        \"tidyr\"     \"tibble\"    #> [13] \"png\"       \"sf\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    \"magrittr\"  #> [19] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   #> [25] \"base\"       # Which packages were loaded? setdiff(P2, P1) #> character(0)  # verbose = FALSE (default) load_packages(tidyterra, verbose = FALSE)  # load already loaded packages load_packages(tidyr, tidyterra, verbose = TRUE) #> The following packages were already loaded: #>   >>>>  tidyr (1.3.1) #>   >>>>  tidyterra (0.7.2)  # non-existent package load_packages(\"non_existent\") #> The following packages are neither available nor installed as install_missing = FALSE: #>   >>>>   non_existent"},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Packages for Parallel Processing with Future — load_packages_future","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"Prepares list packages use parallel processing future package, determining whether load packages main process pass parallel workers based specified future strategy. function designed minimize package-loading messages SLURM environments, especially multicore.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"","code":"load_packages_future(packages = character(), strategy = \"multisession\")"},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"packages Character vector package names load, NULL indicate packages needed (returns NULL). strategy Character. parallel processing strategy use. Valid options \"sequential\", \"multisession\" (default), \"multicore\", \"cluster\". See future::plan().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"value depending strategy: sequential: NULL (workers; packages loaded). multicore (non-Windows): NULL (packages loaded main process, inherited forks). multicore (Windows), multisession, cluster: packages (character vector package names load workers, e.g., via future.packages). packages NULL: NULL (packages load).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"function helps manage package loading parallel processing future package. ensures efficient package handling minimizes package-loading messages SLURM environments, particularly multicore non-Windows systems, packages loaded main process avoid redundant messages worker forks. multisession, cluster, multicore Windows (multicore falls back multisession), returns package names loading workers, typically via future.packages argument functions like future.apply::future_lapply().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/load_packages_future.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Packages for Parallel Processing with Future — load_packages_future","text":"","code":"(pkg_init <- loaded_packages()) #>  [1] \"tidyterra\" \"qs2\"       \"car\"       \"carData\"   \"rworldmap\" \"raster\"    #>  [7] \"sp\"        \"arrow\"     \"purrr\"     \"terra\"     \"fs\"        \"tidyr\"     #> [13] \"tibble\"    \"png\"       \"sf\"        \"ggplot2\"   \"dplyr\"     \"ecokit\"    #> [19] \"magrittr\"  \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  #> [25] \"methods\"   \"base\"      pkg_to_load <- c(\"tidyterra\", \"lubridate\", \"tidyr\", \"sf\", \"scales\")  # sequential load_packages_future(pkg_to_load, \"sequential\") #> NULL setdiff(loaded_packages(), pkg_init) #> character(0)  # multisession load_packages_future(pkg_to_load, \"multisession\") #> [1] \"tidyterra\" \"lubridate\" \"tidyr\"     \"sf\"        \"scales\"    setdiff(loaded_packages(), pkg_init) #> character(0)  # multicore load_packages_future(pkg_to_load, \"multicore\") #> NULL setdiff(loaded_packages(), pkg_init) #> [1] \"scales\"    \"lubridate\""},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"List of loaded packages — loaded_packages","title":"List of loaded packages — loaded_packages","text":"function returns character vector listing packages currently loaded R session.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of loaded packages — loaded_packages","text":"","code":"loaded_packages()"},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of loaded packages — loaded_packages","text":"character vector containing names loaded packages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/loaded_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of loaded packages — loaded_packages","text":"","code":"loaded_packages() #>  [1] \"scales\"    \"lubridate\" \"tidyterra\" \"qs2\"       \"car\"       \"carData\"   #>  [7] \"rworldmap\" \"raster\"    \"sp\"        \"arrow\"     \"purrr\"     \"terra\"     #> [13] \"fs\"        \"tidyr\"     \"tibble\"    \"png\"       \"sf\"        \"ggplot2\"   #> [19] \"dplyr\"     \"ecokit\"    \"magrittr\"  \"stats\"     \"graphics\"  \"grDevices\" #> [25] \"utils\"     \"datasets\"  \"methods\"   \"base\"       load_packages(tidyterra, lubridate)  loaded_packages() #>  [1] \"scales\"    \"lubridate\" \"tidyterra\" \"qs2\"       \"car\"       \"carData\"   #>  [7] \"rworldmap\" \"raster\"    \"sp\"        \"arrow\"     \"purrr\"     \"terra\"     #> [13] \"fs\"        \"tidyr\"     \"tibble\"    \"png\"       \"sf\"        \"ggplot2\"   #> [19] \"dplyr\"     \"ecokit\"    \"magrittr\"  \"stats\"     \"graphics\"  \"grDevices\" #> [25] \"utils\"     \"datasets\"  \"methods\"   \"base\""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Maxent Java Application from the dismo Package — maxent_open","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"function locates launches Maxent Java application (maxent.jar) distributed dismo R package. performs robust checks required package installations, presence Java, availability JAR file. checks pass, attempts launch Maxent graphical user interface using system's Java installation.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"","code":"maxent_open()"},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"Invisibly returns result system call (integer exit status platforms). Stops informative error unsuccessful.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"Note: function works Windows, macOS, Linux, provided Java correctly installed available system PATH. function attempt modify system configurations. headless (server) environments, GUI may displayed. Maxent Java-based application species distribution modelling. dismo package bundles Maxent JAR file provides R wrappers interacting . function convenience open Maxent GUI within R. Java installed found PATH, Maxent missing expected location, informative errors given. function returns (invisibly) result system call launch Maxent.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the Maxent Java Application from the dismo Package — maxent_open","text":"","code":"if (FALSE) { # \\dontrun{   require(ecokit)   ecokit::load_packages(dismo, rJava)    # Launch Maxent GUI from the dismo package   maxent_open() } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"function extracts percent contribution permutation importance variable fitted Maxent model (class \"MaxEnt\") returned dismo::maxent(). returns tibble variables respective importance metrics.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"","code":"maxent_variable_importance(model = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"model fitted Maxent model object class \"MaxEnt\" (dismo::maxent().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"tibble columns: variable Variable name (character). percent_contribution Percent contribution variable (numeric). permutation_importance Permutation importance variable (numeric).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/maxent_variable_importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Variable Importance from a Maxent Model Object — maxent_variable_importance","text":"","code":"require(ecokit) ecokit::load_packages(fs, dismo, rJava, raster)  # fit a Maxent model if (dismo::maxent(silent = TRUE)) {   predictors <- list.files(     path = fs::path(       system.file(package = \"dismo\"), \"ex\"),     pattern = \"grd\", full.names = TRUE) %>%     raster::stack()    occurence <- fs::path(     system.file(package = \"dismo\"), \"ex\", \"bradypus.csv\") %>%     read.table(header = TRUE, sep = \",\") %>%     dplyr::select(-1)   # fit model, biome is a categorical variable   me <- maxent(predictors, occurence, factors='biome')    maxent_variable_importance(me) } #> # A tibble: 9 × 3 #>   variable percent_contribution permutation_importance #>   <chr>                   <dbl>                  <dbl> #> 1 bio1                    2.89                    3.59 #> 2 bio12                   1.69                   12.8  #> 3 bio16                  10.1                     2.11 #> 4 bio17                   3.57                    4.29 #> 5 bio5                    3.53                    5.36 #> 6 bio6                    3.00                    3.19 #> 7 bio7                   28.2                    54.6  #> 8 bio8                    0.303                   2.40 #> 9 biome                  46.8                    11.6"},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of decimal places in a numeric value — n_decimals","title":"Number of decimal places in a numeric value — n_decimals","text":"function calculates number decimal places numeric value. designed work numeric inputs can coerced character format.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of decimal places in a numeric value — n_decimals","text":"","code":"n_decimals(x = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of decimal places in a numeric value — n_decimals","text":"x Numeric (character) numeric value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of decimal places in a numeric value — n_decimals","text":"integer representing number decimal places input value. input value decimal places, function returns 0.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of decimal places in a numeric value — n_decimals","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_decimals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of decimal places in a numeric value — n_decimals","text":"","code":"n_decimals(x = \"13.45554545\") #> [1] 8 n_decimals(x = 13.45554545) #> [1] 8  # -------------------------------------------  # the function ignores trailing zeros for doubles n_decimals(x = 15.01500) #> [1] 3  n_decimals(x = '15.01500') #> [1] 5"},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of unique values for all columns of a data frame — n_unique","title":"Number of unique values for all columns of a data frame — n_unique","text":"function calculates number unique values column given data frame returns data frame two columns: variable n_unique. variable column lists names original columns, n_unique column lists corresponding number unique values column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of unique values for all columns of a data frame — n_unique","text":"","code":"n_unique(data, arrange = TRUE)"},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Number of unique values for all columns of a data frame — n_unique","text":"source code function copied stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of unique values for all columns of a data frame — n_unique","text":"data data frame number unique values per column calculated. arrange Logical. Whether arrange result descending order number unique values. Defaults TRUE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of unique values for all columns of a data frame — n_unique","text":"data frame two columns: variable n_unique. variable column lists names original columns, n_unique column lists number unique values column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of unique values for all columns of a data frame — n_unique","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/n_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of unique values for all columns of a data frame — n_unique","text":"","code":"# arranged by n_unique n_unique(mtcars) #> # A tibble: 11 × 2 #>    variable n_unique #>    <chr>       <int> #>  1 qsec           30 #>  2 wt             29 #>  3 disp           27 #>  4 mpg            25 #>  5 hp             22 #>  6 drat           22 #>  7 carb            6 #>  8 cyl             3 #>  9 gear            3 #> 10 vs              2 #> 11 am              2  # not arranged (keep original data order) n_unique(mtcars, arrange = FALSE) #> # A tibble: 11 × 2 #>    variable n_unique #>    <chr>       <int> #>  1 mpg            25 #>  2 cyl             3 #>  3 disp           27 #>  4 hp             22 #>  5 drat           22 #>  6 wt             29 #>  7 qsec           30 #>  8 vs              2 #>  9 am              2 #> 10 gear            3 #> 11 carb            6  n_unique(iris) #> # A tibble: 5 × 2 #>   variable     n_unique #>   <chr>           <int> #> 1 Petal.Length       43 #> 2 Sepal.Length       35 #> 3 Sepal.Width        23 #> 4 Petal.Width        22 #> 5 Species             3  n_unique(iris, arrange = FALSE) #> # A tibble: 5 × 2 #>   variable     n_unique #>   <chr>           <int> #> 1 Sepal.Length       35 #> 2 Sepal.Width        23 #> 3 Petal.Length       43 #> 4 Petal.Width        22 #> 5 Species             3"},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get global attributes for NetCDF files — nc_global_attributes","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"function opens NetCDF file, extracts global attributes, returns character vector element attribute name-value pair.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"","code":"nc_global_attributes(nc = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"nc Character. Path NetCDF file. NULL, function stop error message.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"character vector element global attribute.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/nc_global_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get global attributes for NetCDF files — nc_global_attributes","text":"","code":"require(ecokit) ecokit::load_packages(stars, sf, fs) #> The following packages are neither available nor installed as install_missing = FALSE: #>   >>>>   stars  nc_example_1 <- system.file(\"nc/sub.nc\", package = \"stars\") if (fs::file_exists(nc_example_1)) nc_global_attributes(nc = nc_example_1)  nc_example_2 <- system.file(\"nc/timeseries.nc\", package = \"stars\") if (fs::file_exists(nc_example_2)) nc_global_attributes(nc = nc_example_2)  nc_example_3 <- system.file(\"nc/cropped.nc\", package = \"sf\") if (fs::file_exists(nc_example_3)) nc_global_attributes(nc = nc_example_3) #> [1] \"Conventions=CF-1.0\"                                                                                                            #> [2] \"title=Daily-OI-V2, final, Data (Ship, Buoy, AVHRR, GSFC-ice)\"                                                                  #> [3] \"History=Tue Feb 13 20:40:49 2018: ncks -d lat,30,40 -d lon,25,50 avhrr-only-v2.19810901.nc -O cropped_example.nc\\nVersion 2.0\" #> [4] \"creation_date=2011-05-04\"                                                                                                      #> [5] \"Source=NOAA/National Climatic Data Center\"                                                                                     #> [6] \"Contact=Dick Reynolds, email: Richard.W.Reynolds@noaa.gov & Chunying Liu, email: Chunying.liu@noaa.gov\"                        #> [7] \"NCO=4.6.8\""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise and quote file paths — normalize_path","title":"Normalise and quote file paths — normalize_path","text":"function ensures file paths expressed consistent canonical form. first converts paths absolute form using fs::path_abs(), tidies fs::path_tidy(), finally quotes correctly based operating system. default, base::normalizePath() behaves differently Windows Linux file exist. Windows, tries construct absolute path, Linux, returns input path -(relative). maintain consistency across platforms, function uses fs::path_abs() instead base::normalizePath().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise and quote file paths — normalize_path","text":"","code":"normalize_path(path, must_work = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise and quote file paths — normalize_path","text":"path Character vector. file path(s). must_work Logical; TRUE, function errors non-existing paths.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise and quote file paths — normalize_path","text":"character vector absolute, tidied, shell-quoted paths.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalise and quote file paths — normalize_path","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/normalize_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalise and quote file paths — normalize_path","text":"","code":"# current working directory normalize_path(\".\") #> /home/runner/work/ecokit/ecokit/docs/reference  # up one directory normalize_path(\"../\") #> /home/runner/work/ecokit/ecokit/docs  list.files()[1] #> [1] \"OS.html\" normalize_path(list.files()[1]) #> /home/runner/work/ecokit/ecokit/docs/reference/OS.html  # absolute path with windows-style slashes normalize_path(\"D://Folder1//Folder2//file.txt\") #> D:/Folder1/Folder2/file.txt  if (FALSE) { # \\dontrun{   # this will give an error if the path does not exist   normalize_path(\"D://Folder1//Folder2//file.txt\", must_work = TRUE) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"List of functions in a package — package_functions","title":"List of functions in a package — package_functions","text":"function returns character vector listing functions available specified R package. first checks package installed can loaded; , raises error.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of functions in a package — package_functions","text":"","code":"package_functions(package)"},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of functions in a package — package_functions","text":"package Character. Package name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of functions in a package — package_functions","text":"character vector containing names functions specified package.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List of functions in a package — package_functions","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of functions in a package — package_functions","text":"","code":"str(package_functions(package = \"raster\")) #>  chr [1:281] \"%in%\" \"Arith\" \"Compare\" \"Geary\" \"GearyLocal\" \"KML\" \"Logic\" ...  str(package_functions(package = \"sf\")) #>  chr [1:156] \"%>%\" \"FULL_bbox_\" \"NA_agr_\" \"NA_bbox_\" \"NA_crs_\" ...  package_functions(package = \"ecokit\") #>  [1] \"%>%\"                        \"add_cross_to_grid\"          #>  [3] \"add_diagonals_to_grid\"      \"add_image_to_plot\"          #>  [5] \"add_line\"                   \"add_missing_columns\"        #>  [7] \"all_objects_sizes\"          \"arrange_alphanum\"           #>  [9] \"assign_env_vars\"            \"assign_if_not_exist\"        #> [11] \"bash_variables\"             \"boundary_to_wkt\"            #> [13] \"cat_diff\"                   \"cat_names\"                  #> [15] \"cat_sep\"                    \"cat_time\"                   #> [17] \"cc\"                         \"check_args\"                 #> [19] \"check_data\"                 \"check_env_file\"             #> [21] \"check_feather\"              \"check_gbif\"                 #> [23] \"check_image\"                \"check_qs\"                   #> [25] \"check_quarto\"               \"check_rdata\"                #> [27] \"check_rds\"                  \"check_rstudio\"              #> [29] \"check_stack_in_memory\"      \"check_system_command\"       #> [31] \"check_tiff\"                 \"check_url\"                  #> [33] \"check_zip\"                  \"chelsa_var_info\"            #> [35] \"clear_console\"              \"clip_raster_by_polygon\"     #> [37] \"detect_alias\"               \"dir_size\"                   #> [39] \"file_extension\"             \"file_size\"                  #> [41] \"file_type\"                  \"function_arguments\"         #> [43] \"get_chelsa_links\"           \"get_mode\"                   #> [45] \"git_log\"                    \"ht\"                         #> [47] \"info_chunk\"                 \"integer_breaks\"             #> [49] \"keep_only\"                  \"lapply_\"                    #> [51] \"list_to_rdata\"              \"load_as\"                    #> [53] \"load_multiple\"              \"load_packages\"              #> [55] \"load_packages_future\"       \"loaded_packages\"            #> [57] \"maxent_open\"                \"maxent_variable_importance\" #> [59] \"n_decimals\"                 \"n_unique\"                   #> [61] \"nc_global_attributes\"       \"normalize_path\"             #> [63] \"os\"                         \"package_functions\"          #> [65] \"package_remote_sha\"         \"pak_from_renv\"              #> [67] \"polygon_centroid\"           \"quiet_device\"               #> [69] \"quietly\"                    \"range_to_new_value\"         #> [71] \"raster_to_pres_abs\"         \"record_arguments\"           #> [73] \"reload_package\"             \"rename_geometry\"            #> [75] \"replace_space\"              \"sapply_\"                    #> [77] \"save_as\"                    \"save_multiple\"              #> [79] \"save_session\"               \"save_session_info\"          #> [81] \"scale_0_1\"                  \"scrape_link\"                #> [83] \"script_location\"            \"set_geometry\"               #> [85] \"set_parallel\"               \"set_raster_crs\"             #> [87] \"sf_add_coords\"              \"source_silent\"              #> [89] \"split_df_to_chunks\"         \"split_raster\"               #> [91] \"split_vector\"               \"stop_ctx\"                   #> [93] \"system_command\"             \"text_to_coordinates\"        #> [95] \"tibble_column_size\"         \"used_packages\"               if (FALSE) { # \\dontrun{   # Error: package not found   package_functions(package = \"non_exist\") } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Remote SHAs for R Packages — package_remote_sha","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"Retrieves remote SHA (Secure Hash Algorithm) reference one R packages remote repositories (e.g., GitHub, GitLab). SHA uniquely identifies package's source code version, aiding reproducibility version tracking.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"","code":"package_remote_sha(..., lib_path = .libPaths()[1L])"},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"... Quoted unquoted names one R packages (e.g., dplyr, \"tidyr\"). Must valid package names (letters, numbers, dots, underscores) installed library. lib_path Character. Path library packages installed. Defaults first library .libPaths(). parameter optional.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"named character vector names package names values corresponding remote SHAs. Returns NA packages installed, CRAN, without remote SHA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"function uses pak::lib_status() query installed packages extract remote SHAs. CRAN locally installed packages typically return NA, lack remote SHAs.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/package_remote_sha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Remote SHAs for R Packages — package_remote_sha","text":"","code":"load_packages(remotes, fs)  # create a temporary directory for package installation temp_lib <- fs::path_temp(\"temp_lib\") fs::dir_create(temp_lib)  # install pkgconfig from GitHub into the temporary directory remotes::install_github(   \"r-lib/pkgconfig\", lib = temp_lib, upgrade = \"never\",   quiet = TRUE, dependencies = FALSE)  # retrieve remote SHA for pkgconfig package_remote_sha(pkgconfig, lib_path = temp_lib) #>                                  pkgconfig  #> \"687e3154aa407642649beb00334940c71d6f22d9\"   # `stats` and non-existent packages return NA package_remote_sha(stats, non_existent) #>        stats non_existent  #>           NA           NA   # clean up remove.packages(\"pkgconfig\", lib = temp_lib) fs::dir_delete(temp_lib)  if (FALSE) { # \\dontrun{   # the following will give an error   package_remote_sha(TRUE)   package_remote_sha(NA)   package_remote_sha(NULL) } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"function parses given renv.lock file extracts package references can directly installed using pak package pak::pkg_install. supports wide range repositories, including CRAN, Bioconductor, GitHub, GitLab, Bitbucket, common remote sources, well tarball URLs. function returns list multiple character vectors: pak: installable references pak (CRAN/BioC , remotes) tarballs: package references tarball URLs, formatted pak pkg=url::https://... package name known, just url::https://... . remote: GitHub/GitLab/Bitbucket package references, formatted pak github::user/repo, gitlab::user/repo, bitbucket::user/repo (, package name differs repo, pkg=github::user/repo etc.).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"","code":"pak_from_renv(lockfile)"},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"lockfile Path renv.lock file (JSON format).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"list following elements: pak Character vector installable references pak (CRAN/BioC ) tarballs Character vector tarball URLs pak syntax (see Details) remote Character vector remote package references pak syntax","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"lists allow separately process packages source, install GitHub/GitLab/Bitbucket packages without strict versioning/commit, can sometimes help avoid dependency resolution conflicts pak (tools). Tarball URLs provided pak-compatible format. renv popular R package project-local dependency management, creating lock files (renv.lock) ensure reproducible environments. pak fast, parallel package installer works CRAN, GitHub, Bioconductor, sources, natively install renv.lock. function bridges gap, enabling fast, parallel installation packages specified lockfile using pak, allows reuse pak's cache renv::restore speed reliability. function used extract complete list installable references renv.lock rapid, parallel installation via pak. installing pak::pkg_install, can run renv::restore link cached packages, ensuring reproducible environment minimal download time. addition main installable references, function outputs separate list remotes (GitHub, GitLab, Bitbucket) pak-compatible syntax, tarballs list pak-compatible syntax (url:: pkg=url::...).","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pak_from_renv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Installable Package References from renv.lock for Use with pak — pak_from_renv","text":"","code":"lock_path <- file.path(     \"https://raw.githubusercontent.com/cosname/\",     \"rmarkdown-guide/master/renv.lock\")  (pak_packages <- pak_from_renv(lockfile = lock_path)) #> $pak #>   [1] \"DBI@1.1.2\"               \"DiagrammeR@1.0.9\"        #>   [3] \"MASS@7.3-57\"             \"Matrix@1.4-1\"            #>   [5] \"R6@2.5.1\"                \"RColorBrewer@1.1-3\"      #>   [7] \"RSQLite@2.2.13\"          \"Rcpp@1.0.8.3\"            #>   [9] \"RcppTOML@0.1.7\"          \"askpass@1.1\"             #>  [11] \"assertthat@0.2.1\"        \"babynames@1.0.1\"         #>  [13] \"base64enc@0.1-3\"         \"bit64@4.0.5\"             #>  [15] \"bit@4.0.4\"               \"blob@1.2.3\"              #>  [17] \"bookdown@0.26\"           \"brio@1.1.3\"              #>  [19] \"bslib@0.3.1\"             \"cachem@1.0.6\"            #>  [21] \"callr@3.7.0\"             \"cli@3.3.0\"               #>  [23] \"clipr@0.8.0\"             \"colorspace@2.0-3\"        #>  [25] \"commonmark@1.8.0\"        \"cpp11@0.4.2\"             #>  [27] \"crayon@1.5.1\"            \"crosstalk@1.2.0\"         #>  [29] \"curl@4.3.2\"              \"desc@1.4.1\"              #>  [31] \"diffobj@0.3.5\"           \"digest@0.6.29\"           #>  [33] \"distill@1.3\"             \"downlit@0.4.0\"           #>  [35] \"downloader@0.4\"          \"dplyr@1.0.9\"             #>  [37] \"dygraphs@1.1.1.6\"        \"ellipsis@0.3.2\"          #>  [39] \"evaluate@0.15\"           \"fansi@1.0.3\"             #>  [41] \"farver@2.1.0\"            \"fastmap@1.1.0\"           #>  [43] \"filehash@2.4-3\"          \"flexdashboard@0.5.2\"     #>  [45] \"fontawesome@0.2.2\"       \"formatR@1.12\"            #>  [47] \"fs@1.5.2\"                \"gdtools@0.2.4\"           #>  [49] \"generics@0.1.2\"          \"ggplot2@3.3.5\"           #>  [51] \"ggrepel@0.9.1\"           \"gifski@1.6.6-1\"          #>  [53] \"glue@1.6.2\"              \"gridExtra@2.3\"           #>  [55] \"gtable@0.3.0\"            \"here@1.0.1\"              #>  [57] \"highr@0.9\"               \"hms@1.1.1\"               #>  [59] \"htmltools@0.5.2\"         \"htmlwidgets@1.5.4\"       #>  [61] \"httpuv@1.6.5\"            \"httr@1.4.3\"              #>  [63] \"huxtable@5.4.0\"          \"igraph@1.3.1\"            #>  [65] \"influenceR@0.1.0.1\"      \"isoband@0.2.5\"           #>  [67] \"jquerylib@0.1.4\"         \"jsonlite@1.8.0\"          #>  [69] \"kableExtra@1.3.4\"        \"knitr@1.39\"              #>  [71] \"labeling@0.4.2\"          \"later@1.3.0\"             #>  [73] \"lattice@0.20-45\"         \"lazyeval@0.2.2\"          #>  [75] \"leaflet.providers@1.9.0\" \"leaflet@2.1.1\"           #>  [77] \"lifecycle@1.0.1\"         \"lubridate@1.8.0\"         #>  [79] \"magick@2.7.3\"            \"magrittr@2.0.3\"          #>  [81] \"markdown@1.3\"            \"memoise@2.0.1\"           #>  [83] \"mgcv@1.8-40\"             \"mime@0.12\"               #>  [85] \"munsell@0.5.0\"           \"nlme@3.1-157\"            #>  [87] \"officedown@0.2.4\"        \"officer@0.4.4\"           #>  [89] \"openssl@2.0.4\"           \"pillar@1.7.0\"            #>  [91] \"pkgconfig@2.0.3\"         \"pkgload@1.2.4\"           #>  [93] \"plogr@0.2.0\"             \"png@0.1-7\"               #>  [95] \"praise@1.0.0\"            \"prettydoc@0.4.1\"         #>  [97] \"prettyunits@1.1.1\"       \"processx@3.6.0\"          #>  [99] \"progress@1.2.2\"          \"promises@1.2.0.1\"        #> [101] \"ps@1.7.0\"                \"purrr@0.3.4\"             #> [103] \"r2d3@0.2.6\"              \"rappdirs@0.3.3\"          #> [105] \"raster@3.5-15\"           \"readr@2.1.2\"             #> [107] \"rematch2@2.1.2\"          \"renv@0.15.4\"             #> [109] \"reticulate@1.24\"         \"rgl@0.108.3\"             #> [111] \"rlang@1.0.6\"             \"rmarkdown@2.14\"          #> [113] \"rprojroot@2.0.3\"         \"rstudioapi@0.13\"         #> [115] \"rticles@0.23\"            \"rvest@1.0.2\"             #> [117] \"rvg@0.2.5\"               \"sass@0.4.1\"              #> [119] \"scales@1.2.0\"            \"selectr@0.4-2\"           #> [121] \"servr@0.24\"              \"shiny@1.7.1\"             #> [123] \"sourcetools@0.1.7\"       \"sp@1.4-7\"                #> [125] \"stringi@1.7.6\"           \"stringr@1.4.0\"           #> [127] \"svglite@2.1.0\"           \"sys@3.4\"                 #> [129] \"systemfonts@1.0.4\"       \"terra@1.5-21\"            #> [131] \"testthat@3.1.4\"          \"tibble@3.1.7\"            #> [133] \"tidyr@1.2.0\"             \"tidyselect@1.1.2\"        #> [135] \"tikzDevice@0.12.3.1\"     \"tinytex@0.39\"            #> [137] \"tufte@0.12\"              \"tzdb@0.3.0\"              #> [139] \"utf8@1.2.2\"              \"uuid@1.1-0\"              #> [141] \"vctrs@0.4.1\"             \"viridis@0.6.2\"           #> [143] \"viridisLite@0.4.0\"       \"visNetwork@2.1.0\"        #> [145] \"vroom@1.5.7\"             \"waldo@0.4.0\"             #> [147] \"webshot@0.5.3\"           \"whisker@0.4\"             #> [149] \"withr@2.5.0\"             \"xaringan@0.24\"           #> [151] \"xaringanExtra@0.7.0\"     \"xfun@0.31\"               #> [153] \"xml2@1.3.3\"              \"xtable@1.8-4\"            #> [155] \"xts@0.12.1\"              \"yaml@2.3.5\"              #> [157] \"zip@2.2.0\"               \"zoo@1.8-10\"              #>  #> $tarballs #> character(0) #>  #> $remote #> character(0) #>   # Install packages using pak # pak::pak_install(pak_packages$pak)  # Install all remote packages (latest HEAD, no SHA) # pak::pak_install(pak_packages$remote)  # Install tarballs # pak::pak_install(pak_packages$tarballs)"},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Polygon Geometry with Centroid Point — polygon_centroid","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"Replaces geometry simple feature (sf) polygon object centroid point. Optionally renames geometry column modified sf object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"","code":"polygon_centroid(sf_object = NULL, rename = FALSE, new_name = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"sf_object simple feature (sf) object polygon multipolygon geometry. NULL. rename Logical. Whether rename geometry column. Defaults FALSE. new_name Character. New name geometry column. Must single, non-empty character string rename = TRUE. Defaults NULL.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"modified sf object geometry replaced centroid points original polygon geometries. rename = TRUE, geometry column renamed new_name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/polygon_centroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Polygon Geometry with Centroid Point — polygon_centroid","text":"","code":"load_packages(sf, ggplot2, dplyr)  # example data (nc <- sf::st_read(   dsn = system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE) %>%   dplyr::select(AREA)) #> Simple feature collection with 100 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                       geometry #> 1  0.114 MULTIPOLYGON (((-81.47276 3... #> 2  0.061 MULTIPOLYGON (((-81.23989 3... #> 3  0.143 MULTIPOLYGON (((-80.45634 3... #> 4  0.070 MULTIPOLYGON (((-76.00897 3... #> 5  0.153 MULTIPOLYGON (((-77.21767 3... #> 6  0.097 MULTIPOLYGON (((-76.74506 3... #> 7  0.062 MULTIPOLYGON (((-76.00897 3... #> 8  0.091 MULTIPOLYGON (((-76.56251 3... #> 9  0.118 MULTIPOLYGON (((-78.30876 3... #> 10 0.124 MULTIPOLYGON (((-80.02567 3...  # Replace polygon geometry with centroids (nc_centroid <- polygon_centroid(nc)) #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -84.05986 ymin: 34.07671 xmax: -75.8095 ymax: 36.49111 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                   geometry #> 1  0.114  POINT (-81.49823 36.4314) #> 2  0.061 POINT (-81.12513 36.49111) #> 3  0.143 POINT (-80.68573 36.41252) #> 4  0.070 POINT (-76.02719 36.40714) #> 5  0.153 POINT (-77.41046 36.42236) #> 6  0.097 POINT (-76.99472 36.36142) #> 7  0.062 POINT (-76.23402 36.40122) #> 8  0.091 POINT (-76.70446 36.44428) #> 9  0.118 POINT (-78.11042 36.39693) #> 10 0.124 POINT (-80.23429 36.40042)  ggplot2::ggplot() +   ggplot2::geom_sf(data = nc, aes(fill = NULL)) +   ggplot2::geom_sf(data = nc_centroid, colour = \"red\") +   ggplot2::theme_minimal()   # Rename geometry column (nc_centroid_renamed <- polygon_centroid(   sf_object = nc, rename = TRUE, new_name = \"centroid\")) #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -84.05986 ymin: 34.07671 xmax: -75.8095 ymax: 36.49111 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                   centroid #> 1  0.114  POINT (-81.49823 36.4314) #> 2  0.061 POINT (-81.12513 36.49111) #> 3  0.143 POINT (-80.68573 36.41252) #> 4  0.070 POINT (-76.02719 36.40714) #> 5  0.153 POINT (-77.41046 36.42236) #> 6  0.097 POINT (-76.99472 36.36142) #> 7  0.062 POINT (-76.23402 36.40122) #> 8  0.091 POINT (-76.70446 36.44428) #> 9  0.118 POINT (-78.11042 36.39693) #> 10 0.124 POINT (-80.23429 36.40042)  attr(nc, \"sf_column\") #> [1] \"geometry\" attr(nc_centroid, \"sf_column\") #> [1] \"geometry\" attr(nc_centroid_renamed, \"sf_column\") #> [1] \"centroid\""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress Future Device Warnings and Startup Messages — quiet_device","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"function evaluates expression selectively suppresses: Warnings related device state changes (e.g., opening closing graphical devices) occur inside future parallel workers (e.g., multisession multicore plans). Package startup messages emitted package loading parallel workers (e.g., ggplot2 terra multicore plans).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"","code":"quiet_device(expr)"},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"expr R expression evaluate. code block graphics device warnings startup messages futures might occur.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"result evaluating expr, specific future device warnings package startup messages suppressed.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"using future.apply::future_lapply() similar parallel calls, certain functions— notably ggplot2::ggplotGrob(), cowplot::as_grob(), ggExtra::ggMarginal()—may implicitly trigger graphics device changes (e.g., opening PDF device internally). causes future emit DeviceMisuseFutureWarning, warning devices added, removed, modified within future. Additionally, multicore plans, forked processes may emit startup messages packages (particularly using future.packages argument), cluttering output. function suppresses types output allowing warnings messages pass .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quiet_device.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress Future Device Warnings and Startup Messages — quiet_device","text":"","code":"if (FALSE) { # \\dontrun{   library(future)   library(future.apply)   library(ggplot2)   library(parallelly)    # Use multicore if supported, otherwise fall back to multisession   plan_type <- ifelse(       parallelly::supportsMulticore(), \"multicore\", \"multisession\")   future::plan(plan_type, workers = 2, gc = TRUE)    fun1 <- function(x) {     # Loading ecokit triggers startup messages     library(ecokit)      p <- data.frame(x = rnorm(100), y = rnorm(100)) %>%       ggplot2::ggplot(ggplot2::aes(x, y)) +       ggplot2::geom_point()      # this triggers device warnings     return(grob)   }    # This will trigger device warnings and startup messages   plots <- future.apply::future_lapply(1:5, fun1, future.seed = TRUE)    # Run with suppression of device warnings and startup messages   plots <- future.apply::future_lapply(1:5, fun1, future.seed = TRUE) %>%     quiet_device()   plot(plots[[1]])    future::plan(\"sequential\") } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":null,"dir":"Reference","previous_headings":"","what":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"Evaluates R expression suppressing package startup messages selected warnings messages. default, warnings containing \"built R version\" \"Loading required namespace\" muffled. Additional patterns (regular expressions) can provided via ... suppress matching warnings messages.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"","code":"quietly(expr, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"expr R expression evaluated quietly. can single expression block code wrapped curly brackets. ... Additional character strings. value treated regular expression pattern match warning message text muffle. example, quietly(expr, \"Picked JAVA_TOOL_OPTIONS\", \"Scale [xy] already present\\\\.\").","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"result evaluating expr, specified messages warnings suppressed.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/quietly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quietly Evaluate an Expression with Custom Warning Patterns — quietly","text":"","code":"# Suppress a package startup message and a version warning quietly({   warning(\"This package was built under R version 4.3.1\", call. = FALSE) }) #> Warning: This package was built under R version 4.3.1 #> function (...)  #> capture_output(.f(...)) #> <bytecode: 0x5597695b88f0> #> <environment: 0x5597695b4d98>  # Suppress a custom warning pattern (e.g., JAVA_TOOL_OPTIONS) quietly({  warning(    \"Picked up JAVA_TOOL_OPTIONS: -Djava.util.prefs.userRoot=/tmp/.java1234\",    call. = FALSE) }, \"Picked up JAVA_TOOL_OPTIONS\") #> Error in quietly({    warning(\"Picked up JAVA_TOOL_OPTIONS: -Djava.util.prefs.userRoot=/tmp/.java1234\",         call. = FALSE)}, \"Picked up JAVA_TOOL_OPTIONS\"): unused argument (\"Picked up JAVA_TOOL_OPTIONS\")  # Suppress multiple custom warning patterns quietly({   warning(\"Couldn't flush user prefs\", call. = FALSE)   warning(\"java.util.prefs.FileSystemPreferences error\", call. = FALSE) }, \"Couldn't flush user prefs\", \"java.util.prefs.FileSystemPreferences\") #> Error in quietly({    warning(\"Couldn't flush user prefs\", call. = FALSE)    warning(\"java.util.prefs.FileSystemPreferences error\", call. = FALSE)}, \"Couldn't flush user prefs\", \"java.util.prefs.FileSystemPreferences\"): unused arguments (\"Couldn't flush user prefs\", \"java.util.prefs.FileSystemPreferences\")  # Show that a non-matching warning still prints quietly({   warning(\"This is a normal warning and should be displayed\", call. = FALSE) }, \"Picked up JAVA_TOOL_OPTIONS\") #> Error in quietly({    warning(\"This is a normal warning and should be displayed\",         call. = FALSE)}, \"Picked up JAVA_TOOL_OPTIONS\"): unused argument (\"Picked up JAVA_TOOL_OPTIONS\")  # Use a code block with multiple lines, some of which trigger warnings quietly({   # suppressed by default   warning(\"Loading required namespace: foo\", call. = FALSE)   # suppressed by default   warning(\"was built under R version 4.3.0\", call. = FALSE)   # not suppressed, will be shown   warning(\"Something else\", call. = FALSE) }) #> Warning: Loading required namespace: foo #> Warning: was built under R version 4.3.0 #> Warning: Something else #> function (...)  #> capture_output(.f(...)) #> <bytecode: 0x5597695b88f0> #> <environment: 0x559768eab0a8>  if (FALSE) {   # Error if ... is not character   quietly({ warning(\"test\", call. = FALSE) }, 1L)    # Error if expr is not a language object   quietly(\"not an expression\") }  # Suppress specific messages using regular expression patterns quietly({   message(\"Scale for y is already present.\")   message(\"Scale for x is already present.\")   message(\"TTT\")   warning(\"Something else\") }, \"Scale for [xy] is already present\\\\.\" ) #> Error in quietly({    message(\"Scale for y is already present.\")    message(\"Scale for x is already present.\")    message(\"TTT\")    warning(\"Something else\")}, \"Scale for [xy] is already present\\\\.\"): unused argument (\"Scale for [xy] is already present\\\\.\")"},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"function modifies values input object x based specified conditions. can operate vectors, data.frames, RasterLayer objects. function allows changing values within specified range (), greater equals (greater_than)  less equals (less_than) specified value new value (new_value). option invert selection also available ranges.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"","code":"range_to_new_value(   x = NULL,   between = NULL,   greater_than = NULL,   less_than = NULL,   new_value = NULL,   invert = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"x numeric vector, data.frame, RasterLayer, SpatRaster object whose values modified. Numeric. numeric vector length 2 specifying range values changed kept. specified, greater_than less_than ignored. greater_than, less_than Numeric. Threshold larger equal /less equal values x changed new_value. applied specified. new_value new value assign selected elements x. invert Logical. Whether invert selection specified . TRUE, values outside specified range changed new_value. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"modified object x values changed according specified conditions.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/range_to_new_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Changes values within a specified range, or greater than or less than a specific value to a new value in a vector, data.frame, or raster — range_to_new_value","text":"","code":"ecokit::load_packages(dplyr, raster, terra, tibble, ggplot2, tidyr)  # ---------------------------------------------  # Vector  (VV <- seq_len(10)) #>  [1]  1  2  3  4  5  6  7  8  9 10  range_to_new_value(x = VV, between = c(5, 8), new_value = NA) #>  [1]  1  2  3  4 NA NA NA NA  9 10  range_to_new_value(x = VV, between = c(5, 8), new_value = NA, invert = TRUE) #>  [1] NA NA NA NA  5  6  7  8 NA NA  # greater_than is ignored as `between` is specified range_to_new_value(    x = VV, between = c(5, 8), new_value = NA, greater_than = 4) #>  [1]  1  2  3  4 NA NA NA NA  9 10 range_to_new_value(x = VV, new_value = NA, greater_than = 4) #>  [1]  1  2  3 NA NA NA NA NA NA NA  range_to_new_value(x = VV, new_value = NA, less_than = 4) #>  [1] NA NA NA NA  5  6  7  8  9 10  # `invert` argument works only when `between` is specified range_to_new_value(x = VV, new_value = NA, greater_than = 4, invert = TRUE) #>  [1]  1  2  3 NA NA NA NA NA NA NA  # ---------------------------------------------  # tibble  iris2 <- iris %>%   tibble::as_tibble() %>%   dplyr::slice_head(n = 50) %>%   dplyr::select(-Sepal.Length, -Petal.Length, -Petal.Width) %>%   dplyr::arrange(Sepal.Width)  iris2 %>%  dplyr::mutate(    Sepal.Width.New = range_to_new_value(       x = Sepal.Width, between = c(3, 3.5),       new_value = NA, invert = FALSE),    Sepal.Width.Rev = range_to_new_value(       x = Sepal.Width, between = c(3, 3.5),       new_value = NA, invert = TRUE)) %>%  print(n = 50) #> # A tibble: 50 × 4 #>    Sepal.Width Species Sepal.Width.New Sepal.Width.Rev #>          <dbl> <fct>             <dbl>           <dbl> #>  1         2.3 setosa              2.3            NA   #>  2         2.9 setosa              2.9            NA   #>  3         3   setosa             NA               3   #>  4         3   setosa             NA               3   #>  5         3   setosa             NA               3   #>  6         3   setosa             NA               3   #>  7         3   setosa             NA               3   #>  8         3   setosa             NA               3   #>  9         3.1 setosa             NA               3.1 #> 10         3.1 setosa             NA               3.1 #> 11         3.1 setosa             NA               3.1 #> 12         3.1 setosa             NA               3.1 #> 13         3.2 setosa             NA               3.2 #> 14         3.2 setosa             NA               3.2 #> 15         3.2 setosa             NA               3.2 #> 16         3.2 setosa             NA               3.2 #> 17         3.2 setosa             NA               3.2 #> 18         3.3 setosa             NA               3.3 #> 19         3.3 setosa             NA               3.3 #> 20         3.4 setosa             NA               3.4 #> 21         3.4 setosa             NA               3.4 #> 22         3.4 setosa             NA               3.4 #> 23         3.4 setosa             NA               3.4 #> 24         3.4 setosa             NA               3.4 #> 25         3.4 setosa             NA               3.4 #> 26         3.4 setosa             NA               3.4 #> 27         3.4 setosa             NA               3.4 #> 28         3.4 setosa             NA               3.4 #> 29         3.5 setosa             NA               3.5 #> 30         3.5 setosa             NA               3.5 #> 31         3.5 setosa             NA               3.5 #> 32         3.5 setosa             NA               3.5 #> 33         3.5 setosa             NA               3.5 #> 34         3.5 setosa             NA               3.5 #> 35         3.6 setosa              3.6            NA   #> 36         3.6 setosa              3.6            NA   #> 37         3.6 setosa              3.6            NA   #> 38         3.7 setosa              3.7            NA   #> 39         3.7 setosa              3.7            NA   #> 40         3.7 setosa              3.7            NA   #> 41         3.8 setosa              3.8            NA   #> 42         3.8 setosa              3.8            NA   #> 43         3.8 setosa              3.8            NA   #> 44         3.8 setosa              3.8            NA   #> 45         3.9 setosa              3.9            NA   #> 46         3.9 setosa              3.9            NA   #> 47         4   setosa              4              NA   #> 48         4.1 setosa              4.1            NA   #> 49         4.2 setosa              4.2            NA   #> 50         4.4 setosa              4.4            NA    # ---------------------------------------------  # RasterLayer  grd_file <- system.file(\"external/test.grd\", package = \"raster\") R_raster <- raster::raster(grd_file)  # set the theme for ggplot2 ggplot2::theme_set(   ggplot2::theme_minimal() +   ggplot2::theme(     legend.position = \"right\",     strip.text = ggplot2::element_text(size = 16),     legend.title = ggplot2::element_blank(),     axis.title = ggplot2::element_blank(),     axis.text = ggplot2::element_blank()))  # Convert values less than 500 to NA R_raster2 <- range_to_new_value(   x = R_raster, less_than = 500, new_value = NA) # Convert values greater than 600 to NA R_raster3 <- range_to_new_value(    x = R_raster, greater_than = 600, new_value = NA) (R_rasters <- raster::stack(R_raster, R_raster2, R_raster3)) #> class      : RasterStack  #> dimensions : 115, 80, 9200, 3  (nrow, ncol, ncell, nlayers) #> resolution : 40, 40  (x, y) #> extent     : 178400, 181600, 329400, 334000  (xmin, xmax, ymin, ymax) #> crs        : +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +datum=WGS84 +units=m +no_defs  #> names      :    test.1,    test.2,    test.3  #> min values :  138.7071,  500.1736,  138.7071  #> max values : 1736.0579, 1736.0580,  599.6334  #>    as.data.frame(R_rasters, xy = TRUE, na.rm = FALSE) %>%   stats::setNames(c(\"x\", \"y\", \"R_raster\", \"R_raster2\", \"R_raster3\")) %>%   tidyr::pivot_longer(     cols = -c(\"x\", \"y\"), names_to = \"layer\", values_to = \"value\") %>%   ggplot2::ggplot() +   ggplot2::geom_tile(mapping = ggplot2::aes(x = x, y = y, fill = value)) +   ggplot2::facet_grid(~layer) +   ggplot2::scale_fill_gradientn(     colours = c(\"blue\", \"green\", \"yellow\", \"red\"),     na.value = \"transparent\") +   ggplot2::labs(title = NULL, x = NULL, y = NULL) +   ggplot2::coord_cartesian(expand = FALSE, clip = \"off\")   # ---------------------------------------------  # SpatRaster  R_terra <- terra::rast(grd_file) R_terra2 <- range_to_new_value(x = R_terra, less_than = 500, new_value = NA) R_terra3 <- range_to_new_value(     x = R_terra, greater_than = 600, new_value = NA) (R_terras <- c(R_terra, R_terra2, R_terra3)) #> class       : SpatRaster  #> size        : 115, 80, 3  (nrow, ncol, nlyr) #> resolution  : 40, 40  (x, y) #> extent      : 178400, 181600, 329400, 334000  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=sterea +lat_0=52.1561605555556 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +datum=WGS84 +units=m +no_defs  #> sources     : test.grd   #>               memory   #>               memory   #> varnames    : test  #>               test  #>               test  #> names       :      test,      test,     test  #> min values  :  138.7071,  500.1736, 138.7071  #> max values  : 1736.0579, 1736.0580, 599.6334   as.data.frame(R_terras, xy = TRUE, na.rm = FALSE) %>%   stats::setNames(c(\"x\", \"y\", \"R_terra\", \"R_terra2\", \"R_terra3\")) %>%   tidyr::pivot_longer(     cols = -c(\"x\", \"y\"), names_to = \"layer\", values_to = \"value\") %>%   ggplot2::ggplot() +   ggplot2::geom_tile(mapping = ggplot2::aes(x = x, y = y, fill = value)) +   ggplot2::facet_grid(~layer) +   ggplot2::scale_fill_gradientn(     colours = c(\"blue\", \"green\", \"yellow\", \"red\"),     na.value = \"transparent\") +   ggplot2::labs(title = NULL, x = NULL, y = NULL) +   ggplot2::coord_cartesian(expand = FALSE, clip = \"off\")"},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raster map into binary (1/0) — raster_to_pres_abs","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"function converts raster values binary format positive values set 1 (presence) zeros remain 0 (absence). Additionally, allows conversion NA values 0, /0 values NA, based user's choice.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"","code":"raster_to_pres_abs(raster = NULL, na_to_0 = TRUE, zero_to_na = FALSE)"},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"raster input raster map. must class PackedSpatRaster, RasterLayer, SpatRaster. parameter NULL. na_to_0 logical value indicating whether NA values converted 0. Defaults TRUE. zero_to_na logical value indicating whether 0 values converted NA. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"raster map values converted according specified parameters. object class input object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/raster_to_pres_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raster map into binary (1/0) — raster_to_pres_abs","text":"","code":"ecokit::load_packages(dplyr, raster, ggplot2, tidyterra)  # example data r <- r2 <- raster::raster(   system.file(\"external/test.grd\", package = \"raster\")) # change some values to 0 r[5000:6000] <- 0 r <- raster::mask(r, r2)  ggplot2::ggplot() +   tidyterra::geom_spatraster(data = terra::rast(r), maxcell = Inf) +   ggplot2::theme_minimal() +   ggplot2::theme(axis.text = ggplot2::element_blank())   # ------------------------------------------------------  r_2 <- raster::stack(   # 1) zero remains zero; NA becomes zero   raster_to_pres_abs(raster = r),   # 2) NA is kept as NA   raster_to_pres_abs(raster = r, na_to_0 = FALSE),   # 3) 0 replaced with NA   raster_to_pres_abs(raster = raster_to_pres_abs(r), zero_to_na = TRUE))  ggplot2::ggplot() +   tidyterra::geom_spatraster(     data = terra::as.factor(terra::rast(r_2)), maxcell = Inf) +   ggplot2::facet_wrap(~lyr) +   ggplot2::scale_fill_manual(values = c(\"grey30\", \"red\", \"blue\"),     na.value = \"transparent\") +   ggplot2::theme_minimal() +   ggplot2::theme(axis.text = ggplot2::element_blank())"},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture and record evaluated function arguments — record_arguments","title":"Capture and record evaluated function arguments — record_arguments","text":"record_arguments() utility function captures records evaluated forms arguments passed parent function. returns tibble columns named arguments, containing evaluated values .","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture and record evaluated function arguments — record_arguments","text":"","code":"record_arguments(out_path = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture and record evaluated function arguments — record_arguments","text":"out_path Character. path .RData file output tibble exported. NULL (default), tibble returned without saving. provided, tibble saved specified file NULL returned invisibly.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture and record evaluated function arguments — record_arguments","text":"tibble containing evaluated forms parent function’s arguments additional named arguments passed via ..., columns named arguments (e.g., w, x, y, extra1). Evaluated values presented scalars (e.g., 8) list columns complex objects (e.g., <SpatRaster>). out_path provided, tibble saved specified .RData file NULL returned invisibly.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Capture and record evaluated function arguments — record_arguments","text":"function evaluates arguments grandparent environment (two frames ), fallback global environment evaluation fails. ensures correct evaluation iterative contexts like lapply. handles: Scalars (e.g., numbers, strings) single values. Multi-element vectors complex objects (e.g., SpatRaster) list columns. NULL values converted string \"NULL\". Failed evaluations result NA. Additional named arguments passed via ... parent function also recorded. function must called within another function, relies sys.call(-1) capture parent call.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Capture and record evaluated function arguments — record_arguments","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/record_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture and record evaluated function arguments — record_arguments","text":"","code":"a <- 5 b <- 3 w_values <- 1:3 x_values <- c(a + b, 10, 15) y_values <- c(\"ABCD\", \"XYZ123\", \"TEST\")  Function1 <- function(w = 5, x, y, z = c(1, 2), ...) {   Args <- record_arguments()   return(Args) }  # ---------------------------------------------------- # Example 1: Simple function call with scalar and expression # ----------------------------------------------------  Function1(x = a + b, y = 2) #> # A tibble: 1 × 4 #>       w     x     y z         #>   <dbl> <dbl> <dbl> <list>    #> 1     5     8     2 <dbl [2]>  # ---------------------------------------------------- # Example 2: Using lapply with indexed arguments # ----------------------------------------------------  lapply(   X = 1:3,   FUN = function(Z) {     Function1(       w = w_values[Z],       x = x_values[Z],       y = stringr::str_extract(y_values[Z], \"B.+$\"),       z = Z) }) %>% dplyr::bind_rows() %>% print() #> # A tibble: 3 × 4 #>       w     x y         z #>   <int> <dbl> <chr> <int> #> 1     1     8 BCD       1 #> 2     2    10 NA        2 #> 3     3    15 NA        3  # ---------------------------------------------------- # Example 3: Using pmap with mixed argument types # ----------------------------------------------------  purrr::pmap(   .l = list(w = w_values, x = x_values, y = y_values),   .f = function(w, x, y) {     Function1(       w = w,       x = x,       y = stringr::str_extract(y, \"B.+$\"),       z = terra::rast(system.file(\"ex/elev.tif\", package = \"terra\")))   }) %>%   dplyr::bind_rows() %>%   print() #> # A tibble: 3 × 4 #>       w     x y     z          #>   <int> <dbl> <chr> <list>     #> 1     1     8 BCD   <PckdSptR> #> 2     2    10 NA    <PckdSptR> #> 3     3    15 NA    <PckdSptR>  # ---------------------------------------------------- # Example 4: Using additional arguments via ... # ----------------------------------------------------  Function1(x = a + b, y = \"test\", extra1 = \"hello\", extra2 = 42) #> # A tibble: 1 × 6 #>       w     x y     z         extra1 extra2 #>   <dbl> <dbl> <chr> <list>    <chr>   <dbl> #> 1     5     8 test  <dbl [2]> hello      42"},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload an R package — reload_package","title":"Reload an R package — reload_package","text":"Reloads one specified R packages. package loaded, loaded; already loaded, detached reloaded library location.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload an R package — reload_package","text":"","code":"reload_package(...)"},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload an R package — reload_package","text":"... Unquoted package names (e.g., sf, ncdf4). Must installed packages. Multiple packages can specified.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload an R package — reload_package","text":"Returns invisible(NULL). function used side effect reloading package rather return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reload an R package — reload_package","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/reload_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload an R package — reload_package","text":"","code":"load_packages(sf)  # Reloads sf and ncdf4. terra0 does not exist reload_package(sf, ncdf4, terra0) #> Reloading 'sf' #> Not installed: ncdf4 #> Not installed: terra0"},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Active Geometry Column of an sf Object — rename_geometry","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"Renames active geometry column simple feature (sf) object user-specified name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"","code":"rename_geometry(sf_object = NULL, new_name = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"sf_object sf object active geometry column. NULL. new_name Character. single, non-empty name geometry column. NULL match existing non-geometry column name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"modified sf object geometry column renamed new_name.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"sf_object must valid geometry column, new_name must conflict existing column names.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/rename_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Active Geometry Column of an sf Object — rename_geometry","text":"","code":"load_packages(sf)  # example data (nc <- sf::st_read(   dsn = system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE) %>%   dplyr::select(AREA)) #> Simple feature collection with 100 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                       geometry #> 1  0.114 MULTIPOLYGON (((-81.47276 3... #> 2  0.061 MULTIPOLYGON (((-81.23989 3... #> 3  0.143 MULTIPOLYGON (((-80.45634 3... #> 4  0.070 MULTIPOLYGON (((-76.00897 3... #> 5  0.153 MULTIPOLYGON (((-77.21767 3... #> 6  0.097 MULTIPOLYGON (((-76.74506 3... #> 7  0.062 MULTIPOLYGON (((-76.00897 3... #> 8  0.091 MULTIPOLYGON (((-76.56251 3... #> 9  0.118 MULTIPOLYGON (((-78.30876 3... #> 10 0.124 MULTIPOLYGON (((-80.02567 3...  # Rename geometry column (nc_renamed <- rename_geometry(nc, \"new_geom\")) #> Simple feature collection with 100 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                       new_geom #> 1  0.114 MULTIPOLYGON (((-81.47276 3... #> 2  0.061 MULTIPOLYGON (((-81.23989 3... #> 3  0.143 MULTIPOLYGON (((-80.45634 3... #> 4  0.070 MULTIPOLYGON (((-76.00897 3... #> 5  0.153 MULTIPOLYGON (((-77.21767 3... #> 6  0.097 MULTIPOLYGON (((-76.74506 3... #> 7  0.062 MULTIPOLYGON (((-76.00897 3... #> 8  0.091 MULTIPOLYGON (((-76.56251 3... #> 9  0.118 MULTIPOLYGON (((-78.30876 3... #> 10 0.124 MULTIPOLYGON (((-80.02567 3...  names(nc) #> [1] \"AREA\"     \"geometry\" names(nc_renamed) #> [1] \"AREA\"     \"new_geom\"  attr(nc, \"sf_column\") #> [1] \"geometry\" attr(nc_renamed, \"sf_column\") #> [1] \"new_geom\""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace whitespace with underscores — replace_space","title":"Replace whitespace with underscores — replace_space","text":"Replaces whitespace characters (spaces, tabs, etc.) underscores character vector. wrapper around stringr::str_replace_all() formatting strings contexts whitespace allowed (e.g., file names, variable names). Optionally, custom replacement character can specified.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace whitespace with underscores — replace_space","text":"","code":"replace_space(x, replacement = \"_\")"},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace whitespace with underscores — replace_space","text":"x character vector. element processed replace whitespace underscores. Missing values (NA) preserved. replacement single character string replace whitespace. Defaults \"_\" (underscore). Must length 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace whitespace with underscores — replace_space","text":"character vector length x, whitespace characters replaced replacement. Missing values (NA) returned unchanged.","code":""},{"path":[]},{"path":"https://elgabbas.github.io/ecokit/reference/replace_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace whitespace with underscores — replace_space","text":"","code":"# Basic usage replace_space(\"Genus species\") #> [1] \"Genus_species\"  # Vector input replace_space(c(\"Genus species1\", \"Genus species2\")) #> [1] \"Genus_species1\" \"Genus_species2\" replace_space(c(\"Genus species 1\", \"Genus species 2\")) #> [1] \"Genus_species_1\" \"Genus_species_2\"  # Multiple whitespace types replace_space(\"Genus   species\\tname\") #> [1] \"Genus_species_name\"  # Custom replacement replace_space(\"Genus species\", replacement = \"-\") #> [1] \"Genus-species\"  # Handle missing values replace_space(c(\"Genus species 1\", NA, \"Genus species 2\")) #> [1] \"Genus_species_1\" NA                \"Genus_species_2\"  # Empty strings replace_space(\"\") #> [1] \"\""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an object to a file with a new name — save_as","title":"Save an object to a file with a new name — save_as","text":"function saves R object specified file path potentially new object name. useful renaming objects save process. function supports saving objects RData, qs2, feather, rds formats. format determined extension file path (case-insensitive).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an object to a file with a new name — save_as","text":"","code":"save_as(   object = NULL,   object_name = NULL,   out_path = NULL,   n_threads = 1L,   feather_compression = \"zstd\",   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an object to a file with a new name — save_as","text":"object input object saved. can actual R object character string representing name object. object_name Character. new name saved RData object. name used object loaded back R. Default NULL. required saving RData files. out_path Character. File path (ends either *.RData, *.qs2, feather, rds) object saved. includes directory file name. n_threads Numeric. Number threads use compressing data. See qs2::qs_save. feather_compression Character. compression algorithm use saving object feather format. default \"zstd\". See arrow::write_feather. ... Additional arguments passed respective save functions. base::save RData files; qs2::qs_save qs2 files; arrow::write_feather feather files; base::saveRDS rds files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an object to a file with a new name — save_as","text":"function return value saves object specified file path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save an object to a file with a new name — save_as","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an object to a file with a new name — save_as","text":"","code":"load_packages(fs, tibble)  temp_dir <- fs::path_temp(\"save_as\") fs::dir_create(temp_dir) out_file <- fs::path(temp_dir, \"iris2.RData\") list.files(temp_dir) #> character(0)  # save iris data as `iris2.RData` with `iris2` object name save_as(   object = tibble::tibble(iris), object_name = \"iris2\", out_path = out_file)  list.files(temp_dir, pattern = \"^.+.RData\") #> [1] \"iris2.RData\"  # load the object to global environment. The data is loaded as `iris2` (loaded_name <- load(out_file)) #> [1] \"iris2\"  ecokit::load_as(out_file) #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 140 more rows  # clean up fs::file_delete(out_file)"},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Save multiple objects to their respective .RData files — save_multiple","title":"Save multiple objects to their respective .RData files — save_multiple","text":"function saves specified variables global environment separate .RData files. allows optional file prefixing overwriting existing files.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save multiple objects to their respective .RData files — save_multiple","text":"","code":"save_multiple(   variables = NULL,   out_directory = getwd(),   overwrite = FALSE,   prefix = \"\",   verbose = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save multiple objects to their respective .RData files — save_multiple","text":"variables Character vector. Names variables saved. NULL specified variable exist global environment, function stop error. out_directory Character. Path output folder .RData files saved. Defaults current working directory. overwrite Logical. Whether existing .RData files overwritten. FALSE (Default) files exist, function stop error message. prefix Character. Prefix output file name. Useful organizing saved files avoiding name conflicts. Defaults empty string. verbose Logical. Whether print message upon successful saving files. Defaults FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save multiple objects to their respective .RData files — save_multiple","text":"function used side effect saving files return value.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save multiple objects to their respective .RData files — save_multiple","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save multiple objects to their respective .RData files — save_multiple","text":"","code":"load_packages(fs, purrr)  temp_dir <- fs::path_temp(\"save_multiple\") fs::dir_create(temp_dir)  # ---------------------------------------------- # Save x1 and x2 to disk # ---------------------------------------------- x1 = 10 x2 = 20  save_multiple(   variables = c(\"x1\", \"x2\"), out_directory = temp_dir, verbose = TRUE) #> Saved 2 object(s) to /tmp/RtmpXTVHCP/save_multiple. #> Saved files are: x1.RData, x2.RData.  list.files(path = temp_dir, pattern = \"^.+.RData\") #> [1] \"x1.RData\" \"x2.RData\"  (x1Contents <- ecokit::load_as(fs::path(temp_dir, \"x1.RData\"))) #> [1] 10 (x2Contents <- ecokit::load_as(fs::path(temp_dir, \"x2.RData\"))) #> [1] 20  # ---------------------------------------------- # Use prefix # ---------------------------------------------- save_multiple(   variables = c(\"x1\", \"x2\"), out_directory = temp_dir, prefix = \"A_\")  list.files(path = temp_dir, pattern = \"^.+.RData\") #> [1] \"A_x1.RData\" \"A_x2.RData\" \"x1.RData\"   \"x2.RData\"    # ---------------------------------------------- # File exists, no save # ---------------------------------------------- try(save_multiple(variables = c(\"x1\", \"x2\"), out_directory = temp_dir)) #> One or more files exist; skipping save. Use overwrite = TRUE to force.  # ---------------------------------------------- # overwrite existing file # ---------------------------------------------- x1 = 100; x2 = 200; x3 = 300  save_multiple(   variables = c(\"x1\", \"x2\", \"x3\"),   out_directory = temp_dir, overwrite = TRUE)  (x1Contents <- ecokit::load_as(fs::path(temp_dir, \"x1.RData\"))) #> [1] 100 (x2Contents <- ecokit::load_as(fs::path(temp_dir, \"x2.RData\"))) #> [1] 200 (x3Contents <- ecokit::load_as(fs::path(temp_dir, \"x3.RData\"))) #> [1] 300  # clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Save non-function objects from the global environment to an RData file — save_session","title":"Save non-function objects from the global environment to an RData file — save_session","text":"Saves objects (except functions specified exclusions) global environment named list .RData file. Returns summary saved objects' sizes memory.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save non-function objects from the global environment to an RData file — save_session","text":"","code":"save_session(out_directory = getwd(), exclude_objects = NULL, prefix = \"S\")"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save non-function objects from the global environment to an RData file — save_session","text":"out_directory Character. Directory path .RData file saved. Defaults current working directory base::getwd(). exclude_objects Character vector. Names objects exclude saving. Defaults NULL. prefix Character. Prefix saved file name. Defaults \"S\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save non-function objects from the global environment to an RData file — save_session","text":"tibble columns object (object names) size (size MB, rounded 1 decimal place) saved objects, sorted size descending order.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save non-function objects from the global environment to an RData file — save_session","text":"","code":"load_packages(fs, purrr)  # Create sample objects in the global environment assign(\"df\", data.frame(a = 1:1000), envir = .GlobalEnv) assign(\"vec\", rnorm(1000), envir = .GlobalEnv) assign(\"fun\", function(x) x + 1, envir = .GlobalEnv) ls(.GlobalEnv) #>  [1] \"AA1\"             \"AA2\"             \"R\"               \"chelsa_var_info\" #>  [5] \"df\"              \"envir\"           \"fun\"             \"ifnotfound\"      #>  [9] \"inherits\"        \"mode\"            \"nm\"              \"object\"          #> [13] \"vec\"             \"x\"               \"y\"                # Save objects to a unique temporary directory, excluding \"vec\" temp_dir <- fs::path_temp(\"save_session\") fs::dir_create(temp_dir)  (result <- save_session(out_directory = temp_dir, exclude_objects = \"vec\")) #> Saved objects to: #> /tmp/RtmpXTVHCP/save_session/S_20250819_1433.RData #> # A tibble: 13 × 2 #>    object           size #>    <chr>           <dbl> #>  1 AA1              38.1 #>  2 AA2               0.4 #>  3 R                 0   #>  4 chelsa_var_info   0   #>  5 df                0   #>  6 envir             0   #>  7 ifnotfound        0   #>  8 inherits          0   #>  9 mode              0   #> 10 nm                0   #> 11 object            0   #> 12 x                 0   #> 13 y                 0    # Load saved objects saved_files <- list.files(   temp_dir, pattern = \"S_.+\\\\.RData$\", full.names = TRUE) if (length(saved_files) == 0) {   stop(\"No RData files found in temp_dir\") } # pick the most recent file, if there is more than one file (saved_file <- saved_files[length(saved_files)]) #> [1] \"/tmp/RtmpXTVHCP/save_session/S_20250819_1433.RData\"  saved_objects <- ecokit::load_as(saved_file) #> Error in purrr::map(.x = output_file, .f = ~{    if (inherits(.x, \"PackedSpatRaster\"))         return(\"PackedSpatRaster\")    if (isS4(.x) || length(.x) == 0L || is.null(.x[[1L]])) {        return(character(0L))    }    class(.x[[1L]])}): ℹ In index: 6. #> ℹ With name: envir. #> Caused by error in `.x[[1L]]`: #> ! wrong arguments for subsetting an environment names(saved_objects) #> Error: object 'saved_objects' not found str(saved_objects, 1) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'str': object 'saved_objects' not found  setdiff(   ls(.GlobalEnv),   c(result$object, \"saved_file\", \"result\", \"saved_objects\", \"temp_dir\")) %>%   purrr::map(~ stats::setNames(class(get(.x, envir = .GlobalEnv)), .x)) %>%   unlist() #>        fun        vec  #> \"function\"  \"numeric\"   # Clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Save session information to a text file — save_session_info","title":"Save session information to a text file — save_session_info","text":"Saves R session information, including platform details, package versions, optionally, summary objects session, text file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save session information to a text file — save_session_info","text":"","code":"save_session_info(out_directory = getwd(), session_info = NULL, prefix = \"S\")"},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save session information to a text file — save_session_info","text":"out_directory Character. Directory path output file saved. Defaults current working directory (base::getwd()). session_info optional tibble data frame object details (e.g., save_session()). provided, details objects (e.g., names sizes MB) appended output file. Defaults NULL. prefix Character. Prefix output file name. Defaults \"S\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save session information to a text file — save_session_info","text":"Invisible NULL. Used side effect writing session information file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/save_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save session information to a text file — save_session_info","text":"","code":"load_packages(fs)  # Save session info without object details temp_dir <- fs::path_temp(\"save_session_info\") fs::dir_create(temp_dir)  save_session_info(out_directory = temp_dir) #> Saving session info to: #> /tmp/RtmpXTVHCP/save_session_info/S_20250819_1433.txt  saved_file <- list.files(   temp_dir, pattern = \"S_.+txt$\", full.names = TRUE) %>%   ecokit::normalize_path() (saved_file <- saved_file[length(saved_file)]) #> /tmp/RtmpXTVHCP/save_session_info/S_20250819_1433.txt  cat(readLines(saved_file), sep = \"\\n\") #>  #> -------------------------------------------------- #> Session Info #> -------------------------------------------------- #>  #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en-GB #>  collate  C #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2025-08-19 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  quarto   NA #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package      * version  date (UTC) lib source #>  abind          1.4-8    2024-09-12 [1] RSPM #>  arrow        * 21.0.0.1 2025-08-18 [1] RSPM #>  askpass        1.2.1    2024-10-04 [1] RSPM #>  assertthat     0.2.1    2019-03-21 [1] RSPM #>  bit            4.6.0    2025-03-06 [1] RSPM #>  bit64          4.6.0-1  2025-01-16 [1] RSPM #>  bslib          0.9.0    2025-01-30 [1] RSPM #>  cachem         1.1.0    2024-05-16 [1] RSPM #>  callr          3.7.6    2024-03-25 [1] RSPM #>  car          * 3.1-3    2024-09-27 [1] RSPM #>  carData      * 3.0-5    2022-01-06 [1] RSPM #>  class          7.3-23   2025-01-01 [3] CRAN (R 4.5.1) #>  classInt       0.4-11   2025-01-08 [1] RSPM #>  cli            3.6.5    2025-04-23 [1] RSPM #>  codetools      0.2-20   2024-03-31 [3] CRAN (R 4.5.1) #>  cowplot        1.2.0    2025-07-07 [1] RSPM #>  crayon         1.5.3    2024-06-20 [1] RSPM #>  curl           6.4.0    2025-06-22 [1] RSPM #>  data.table     1.17.8   2025-07-10 [1] RSPM #>  DBI            1.2.3    2024-06-02 [1] RSPM #>  desc           1.4.3    2023-12-10 [1] RSPM #>  devtools       2.4.5    2022-10-11 [1] RSPM #>  digest         0.6.37   2024-08-19 [1] RSPM #>  dismo        * 1.3-16   2024-11-25 [1] RSPM #>  dotCall64      1.2      2024-10-04 [1] RSPM #>  downlit        0.4.4    2024-06-10 [1] RSPM #>  dplyr        * 1.1.4    2023-11-17 [1] RSPM #>  e1071          1.7-16   2024-09-16 [1] RSPM #>  ecokit       * 0.1.0    2025-08-19 [1] local #>  ellipsis       0.3.2    2021-04-29 [1] RSPM #>  evaluate       1.0.4    2025-06-18 [1] RSPM #>  fansi          1.0.6    2023-12-08 [1] RSPM #>  farver         2.1.2    2024-05-13 [1] RSPM #>  fastmap        1.2.0    2024-05-15 [1] RSPM #>  fields         16.3.1   2025-03-08 [1] RSPM #>  fontawesome    0.5.3    2024-11-16 [1] RSPM #>  Formula        1.2-5    2023-02-24 [1] RSPM #>  fs           * 1.6.6    2025-04-12 [1] RSPM #>  future         1.67.0   2025-07-29 [1] RSPM #>  future.apply   1.20.0   2025-06-06 [1] RSPM #>  gdata          3.0.1    2024-10-22 [1] RSPM #>  generics       0.1.4    2025-05-09 [1] RSPM #>  ggplot2      * 3.5.2    2025-04-09 [1] RSPM #>  globals        0.18.0   2025-05-08 [1] RSPM #>  glue           1.8.0    2024-09-30 [1] RSPM #>  gtable         0.3.6    2024-10-25 [1] RSPM #>  gtools         3.9.5    2023-11-20 [1] RSPM #>  htmltools      0.5.8.1  2024-04-04 [1] RSPM #>  htmlwidgets    1.6.4    2023-12-06 [1] RSPM #>  httpuv         1.6.16   2025-04-16 [1] RSPM #>  httr           1.4.7    2023-08-15 [1] RSPM #>  httr2          1.2.1    2025-07-22 [1] RSPM #>  jquerylib      0.1.4    2021-04-26 [1] RSPM #>  jsonlite       2.0.0    2025-03-27 [1] RSPM #>  KernSmooth     2.23-26  2025-01-01 [3] CRAN (R 4.5.1) #>  knitr          1.50     2025-03-16 [1] RSPM #>  labeling       0.4.3    2023-08-29 [1] RSPM #>  later          1.4.2    2025-04-08 [1] RSPM #>  lattice        0.22-7   2025-04-02 [3] CRAN (R 4.5.1) #>  lifecycle      1.0.4    2023-11-07 [1] RSPM #>  listenv        0.9.1    2024-01-29 [1] RSPM #>  lobstr         1.1.2    2022-06-22 [1] RSPM #>  lubridate    * 1.9.4    2024-12-08 [1] RSPM #>  magrittr     * 2.0.3    2022-03-30 [1] RSPM #>  maps           3.4.3    2025-05-26 [1] RSPM #>  MASS           7.3-65   2025-02-28 [3] CRAN (R 4.5.1) #>  memoise        2.0.1    2021-11-26 [1] RSPM #>  mime           0.13     2025-03-17 [1] RSPM #>  miniUI         0.1.2    2025-04-17 [1] RSPM #>  openssl        2.3.3    2025-05-26 [1] RSPM #>  pak            0.9.0    2025-05-27 [1] RSPM #>  parallelly     1.45.1   2025-07-24 [1] RSPM #>  pillar         1.11.0   2025-07-04 [1] RSPM #>  pkgbuild       1.4.8    2025-05-26 [1] RSPM #>  pkgconfig      2.0.3    2019-09-22 [1] RSPM #>  pkgdown        2.1.3    2025-05-25 [1] RSPM #>  pkgload        1.4.0    2024-06-28 [1] RSPM #>  png          * 0.1-8    2022-11-29 [1] RSPM #>  processx       3.8.6    2025-02-21 [1] RSPM #>  profvis        0.4.0    2024-09-20 [1] RSPM #>  promises       1.3.3    2025-05-29 [1] RSPM #>  proxy          0.4-27   2022-06-09 [1] RSPM #>  ps             1.9.1    2025-04-12 [1] RSPM #>  purrr        * 1.1.0    2025-07-10 [1] RSPM #>  qs2          * 0.1.5    2025-03-07 [1] RSPM #>  R6             2.6.1    2025-02-15 [1] RSPM #>  ragg           1.4.0    2025-04-10 [1] RSPM #>  rappdirs       0.3.3    2021-01-31 [1] RSPM #>  raster       * 3.6-32   2025-03-28 [1] RSPM #>  RColorBrewer   1.1-3    2022-04-03 [1] RSPM #>  Rcpp           1.1.0    2025-07-02 [1] RSPM #>  RcppParallel   5.1.10   2025-01-24 [1] RSPM #>  remotes      * 2.5.0    2024-03-17 [1] RSPM #>  rJava        * 1.0-11   2024-01-26 [1] RSPM #>  rlang          1.1.6    2025-04-11 [1] RSPM #>  rmarkdown      2.29     2024-11-04 [1] RSPM #>  RNetCDF        2.11-1   2025-04-30 [1] RSPM #>  rstudioapi     0.17.1   2024-10-22 [1] RSPM #>  rvest          1.0.4    2024-02-12 [1] RSPM #>  rworldmap    * 1.3-8    2023-10-16 [1] RSPM #>  s2             1.1.9    2025-05-23 [1] RSPM #>  sass           0.4.10   2025-04-11 [1] RSPM #>  scales       * 1.4.0    2025-04-24 [1] RSPM #>  selectr        0.4-2    2019-11-20 [1] RSPM #>  sessioninfo    1.2.3    2025-02-05 [1] RSPM #>  sf           * 1.0-21   2025-05-15 [1] RSPM #>  shiny          1.11.1   2025-07-03 [1] RSPM #>  sp           * 2.2-0    2025-02-01 [1] RSPM #>  spam           2.11-1   2025-01-20 [1] RSPM #>  stringfish     0.17.0   2025-07-13 [1] RSPM #>  stringi        1.8.7    2025-03-27 [1] RSPM #>  stringr        1.5.1    2023-11-14 [1] RSPM #>  systemfonts    1.2.3    2025-04-30 [1] RSPM #>  terra        * 1.8-60   2025-07-21 [1] RSPM #>  textshaping    1.0.1    2025-05-01 [1] RSPM #>  tibble       * 3.3.0    2025-06-08 [1] RSPM #>  tidyr        * 1.3.1    2024-01-24 [1] RSPM #>  tidyselect     1.2.1    2024-03-11 [1] RSPM #>  tidyterra    * 0.7.2    2025-04-14 [1] RSPM #>  timechange     0.3.0    2024-01-18 [1] RSPM #>  units          0.8-7    2025-03-11 [1] RSPM #>  urlchecker     1.0.1    2021-11-30 [1] RSPM #>  usethis        3.1.0    2024-11-26 [1] RSPM #>  utf8           1.2.6    2025-06-08 [1] RSPM #>  vctrs          0.6.5    2023-12-01 [1] RSPM #>  viridisLite    0.4.2    2023-05-02 [1] RSPM #>  whisker        0.4.1    2022-12-05 [1] RSPM #>  withr          3.0.2    2024-10-28 [1] RSPM #>  wk             0.9.4    2024-10-11 [1] RSPM #>  xfun           0.53     2025-08-19 [1] RSPM #>  xml2           1.3.8    2025-03-14 [1] RSPM #>  xtable         1.8-4    2019-04-21 [1] RSPM #>  yaml           2.3.10   2024-07-26 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.5.1/lib/R/site-library #>  [3] /opt/R/4.5.1/lib/R/library #>  * ── Packages attached to the search path. #>  #> ──────────────────────────────────────────────────────────────────────────────  # |||||||||||||||||||||||||||||||||||||||||||||||||  # Save session info with object details # Create sample objects df <- data.frame(a = 1:1000) vec <- rnorm(1000)  # Simulate output from save_session() session_data <- tibble::tibble(object = c(\"df\", \"vec\"), size = c(0.1, 0.1)) save_session_info(out_directory = temp_dir, session_info = session_data) #> Saving session info to: #> /tmp/RtmpXTVHCP/save_session_info/S_20250819_1433.txt  saved_file <- list.files(   temp_dir, pattern = \"S_.+txt$\", full.names = TRUE) %>%   ecokit::normalize_path() (saved_file <- saved_file[length(saved_file)]) #> /tmp/RtmpXTVHCP/save_session_info/S_20250819_1433.txt  cat(readLines(saved_file), sep = \"\\n\") #>  #> -------------------------------------------------- #> Session Info #> -------------------------------------------------- #>  #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en-GB #>  collate  C #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2025-08-19 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  quarto   NA #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package      * version  date (UTC) lib source #>  abind          1.4-8    2024-09-12 [1] RSPM #>  arrow        * 21.0.0.1 2025-08-18 [1] RSPM #>  askpass        1.2.1    2024-10-04 [1] RSPM #>  assertthat     0.2.1    2019-03-21 [1] RSPM #>  bit            4.6.0    2025-03-06 [1] RSPM #>  bit64          4.6.0-1  2025-01-16 [1] RSPM #>  bslib          0.9.0    2025-01-30 [1] RSPM #>  cachem         1.1.0    2024-05-16 [1] RSPM #>  callr          3.7.6    2024-03-25 [1] RSPM #>  car          * 3.1-3    2024-09-27 [1] RSPM #>  carData      * 3.0-5    2022-01-06 [1] RSPM #>  class          7.3-23   2025-01-01 [3] CRAN (R 4.5.1) #>  classInt       0.4-11   2025-01-08 [1] RSPM #>  cli            3.6.5    2025-04-23 [1] RSPM #>  codetools      0.2-20   2024-03-31 [3] CRAN (R 4.5.1) #>  cowplot        1.2.0    2025-07-07 [1] RSPM #>  crayon         1.5.3    2024-06-20 [1] RSPM #>  curl           6.4.0    2025-06-22 [1] RSPM #>  data.table     1.17.8   2025-07-10 [1] RSPM #>  DBI            1.2.3    2024-06-02 [1] RSPM #>  desc           1.4.3    2023-12-10 [1] RSPM #>  devtools       2.4.5    2022-10-11 [1] RSPM #>  digest         0.6.37   2024-08-19 [1] RSPM #>  dismo        * 1.3-16   2024-11-25 [1] RSPM #>  dotCall64      1.2      2024-10-04 [1] RSPM #>  downlit        0.4.4    2024-06-10 [1] RSPM #>  dplyr        * 1.1.4    2023-11-17 [1] RSPM #>  e1071          1.7-16   2024-09-16 [1] RSPM #>  ecokit       * 0.1.0    2025-08-19 [1] local #>  ellipsis       0.3.2    2021-04-29 [1] RSPM #>  evaluate       1.0.4    2025-06-18 [1] RSPM #>  fansi          1.0.6    2023-12-08 [1] RSPM #>  farver         2.1.2    2024-05-13 [1] RSPM #>  fastmap        1.2.0    2024-05-15 [1] RSPM #>  fields         16.3.1   2025-03-08 [1] RSPM #>  fontawesome    0.5.3    2024-11-16 [1] RSPM #>  Formula        1.2-5    2023-02-24 [1] RSPM #>  fs           * 1.6.6    2025-04-12 [1] RSPM #>  future         1.67.0   2025-07-29 [1] RSPM #>  future.apply   1.20.0   2025-06-06 [1] RSPM #>  gdata          3.0.1    2024-10-22 [1] RSPM #>  generics       0.1.4    2025-05-09 [1] RSPM #>  ggplot2      * 3.5.2    2025-04-09 [1] RSPM #>  globals        0.18.0   2025-05-08 [1] RSPM #>  glue           1.8.0    2024-09-30 [1] RSPM #>  gtable         0.3.6    2024-10-25 [1] RSPM #>  gtools         3.9.5    2023-11-20 [1] RSPM #>  htmltools      0.5.8.1  2024-04-04 [1] RSPM #>  htmlwidgets    1.6.4    2023-12-06 [1] RSPM #>  httpuv         1.6.16   2025-04-16 [1] RSPM #>  httr           1.4.7    2023-08-15 [1] RSPM #>  httr2          1.2.1    2025-07-22 [1] RSPM #>  jquerylib      0.1.4    2021-04-26 [1] RSPM #>  jsonlite       2.0.0    2025-03-27 [1] RSPM #>  KernSmooth     2.23-26  2025-01-01 [3] CRAN (R 4.5.1) #>  knitr          1.50     2025-03-16 [1] RSPM #>  labeling       0.4.3    2023-08-29 [1] RSPM #>  later          1.4.2    2025-04-08 [1] RSPM #>  lattice        0.22-7   2025-04-02 [3] CRAN (R 4.5.1) #>  lifecycle      1.0.4    2023-11-07 [1] RSPM #>  listenv        0.9.1    2024-01-29 [1] RSPM #>  lobstr         1.1.2    2022-06-22 [1] RSPM #>  lubridate    * 1.9.4    2024-12-08 [1] RSPM #>  magrittr     * 2.0.3    2022-03-30 [1] RSPM #>  maps           3.4.3    2025-05-26 [1] RSPM #>  MASS           7.3-65   2025-02-28 [3] CRAN (R 4.5.1) #>  memoise        2.0.1    2021-11-26 [1] RSPM #>  mime           0.13     2025-03-17 [1] RSPM #>  miniUI         0.1.2    2025-04-17 [1] RSPM #>  openssl        2.3.3    2025-05-26 [1] RSPM #>  pak            0.9.0    2025-05-27 [1] RSPM #>  parallelly     1.45.1   2025-07-24 [1] RSPM #>  pillar         1.11.0   2025-07-04 [1] RSPM #>  pkgbuild       1.4.8    2025-05-26 [1] RSPM #>  pkgconfig      2.0.3    2019-09-22 [1] RSPM #>  pkgdown        2.1.3    2025-05-25 [1] RSPM #>  pkgload        1.4.0    2024-06-28 [1] RSPM #>  png          * 0.1-8    2022-11-29 [1] RSPM #>  processx       3.8.6    2025-02-21 [1] RSPM #>  profvis        0.4.0    2024-09-20 [1] RSPM #>  promises       1.3.3    2025-05-29 [1] RSPM #>  proxy          0.4-27   2022-06-09 [1] RSPM #>  ps             1.9.1    2025-04-12 [1] RSPM #>  purrr        * 1.1.0    2025-07-10 [1] RSPM #>  qs2          * 0.1.5    2025-03-07 [1] RSPM #>  R6             2.6.1    2025-02-15 [1] RSPM #>  ragg           1.4.0    2025-04-10 [1] RSPM #>  rappdirs       0.3.3    2021-01-31 [1] RSPM #>  raster       * 3.6-32   2025-03-28 [1] RSPM #>  RColorBrewer   1.1-3    2022-04-03 [1] RSPM #>  Rcpp           1.1.0    2025-07-02 [1] RSPM #>  RcppParallel   5.1.10   2025-01-24 [1] RSPM #>  remotes      * 2.5.0    2024-03-17 [1] RSPM #>  rJava        * 1.0-11   2024-01-26 [1] RSPM #>  rlang          1.1.6    2025-04-11 [1] RSPM #>  rmarkdown      2.29     2024-11-04 [1] RSPM #>  RNetCDF        2.11-1   2025-04-30 [1] RSPM #>  rstudioapi     0.17.1   2024-10-22 [1] RSPM #>  rvest          1.0.4    2024-02-12 [1] RSPM #>  rworldmap    * 1.3-8    2023-10-16 [1] RSPM #>  s2             1.1.9    2025-05-23 [1] RSPM #>  sass           0.4.10   2025-04-11 [1] RSPM #>  scales       * 1.4.0    2025-04-24 [1] RSPM #>  selectr        0.4-2    2019-11-20 [1] RSPM #>  sessioninfo    1.2.3    2025-02-05 [1] RSPM #>  sf           * 1.0-21   2025-05-15 [1] RSPM #>  shiny          1.11.1   2025-07-03 [1] RSPM #>  sp           * 2.2-0    2025-02-01 [1] RSPM #>  spam           2.11-1   2025-01-20 [1] RSPM #>  stringfish     0.17.0   2025-07-13 [1] RSPM #>  stringi        1.8.7    2025-03-27 [1] RSPM #>  stringr        1.5.1    2023-11-14 [1] RSPM #>  systemfonts    1.2.3    2025-04-30 [1] RSPM #>  terra        * 1.8-60   2025-07-21 [1] RSPM #>  textshaping    1.0.1    2025-05-01 [1] RSPM #>  tibble       * 3.3.0    2025-06-08 [1] RSPM #>  tidyr        * 1.3.1    2024-01-24 [1] RSPM #>  tidyselect     1.2.1    2024-03-11 [1] RSPM #>  tidyterra    * 0.7.2    2025-04-14 [1] RSPM #>  timechange     0.3.0    2024-01-18 [1] RSPM #>  units          0.8-7    2025-03-11 [1] RSPM #>  urlchecker     1.0.1    2021-11-30 [1] RSPM #>  usethis        3.1.0    2024-11-26 [1] RSPM #>  utf8           1.2.6    2025-06-08 [1] RSPM #>  vctrs          0.6.5    2023-12-01 [1] RSPM #>  viridisLite    0.4.2    2023-05-02 [1] RSPM #>  whisker        0.4.1    2022-12-05 [1] RSPM #>  withr          3.0.2    2024-10-28 [1] RSPM #>  wk             0.9.4    2024-10-11 [1] RSPM #>  xfun           0.53     2025-08-19 [1] RSPM #>  xml2           1.3.8    2025-03-14 [1] RSPM #>  xtable         1.8-4    2019-04-21 [1] RSPM #>  yaml           2.3.10   2024-07-26 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.5.1/lib/R/site-library #>  [3] /opt/R/4.5.1/lib/R/library #>  * ── Packages attached to the search path. #>  #> ────────────────────────────────────────────────────────────────────────────── #>  #> -------------------------------------------------- #> Objects in the current session #> (except functions and pre-selected objects; Size in megabytes) #> -------------------------------------------------- #>  #>  object size #>      df  0.1 #>     vec  0.1  # clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"Scales values SpatRaster (terra package), Raster* (raster package), raster file loaded via terra::rast() range 0 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"","code":"scale_0_1(raster)"},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"raster SpatRaster, RasterLayer, RasterStack, RasterBrick object, character string specifying path raster file can loaded terra::rast() (e.g., GeoTIFF, NetCDF).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"SpatRaster object values scaled 0 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"function accepts SpatRaster, Raster* object, file path. Raster* objects coerced SpatRaster using terra::rast(), file paths loaded SpatRaster. calculates minimum maximum values scales values 0 1.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scale_0_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale a raster object’s values to a range between 0 and 1 — scale_0_1","text":"","code":"ecokit::load_packages(terra, raster, fs, ggplot2, tidyterra)  # Setup temporary directory temp_dir <- fs::path_temp(\"scale_0_1\") fs::dir_create(temp_dir)  # Example with SpatRaster r <- terra::rast(ncols = 10, nrows = 10) terra::values(r) <- rnorm(terra::ncell(r)) r_scaled <- scale_0_1(r) c(r, r_scaled) #> class       : SpatRaster  #> size        : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #> source(s)   : memory #> names       :     lyr.1, lyr.1  #> min values  : -2.389476,     0  #> max values  :  2.537697,     1   # Example with RasterLayer r_raster <- raster::raster(ncol = 10, nrow = 10) raster::values(r_raster) <- rnorm(raster::ncell(r_raster)) r_raster_scaled <- scale_0_1(r_raster) c(r_raster, r_raster_scaled) #> [[1]] #> class      : RasterLayer  #> dimensions : 10, 10, 100  (nrow, ncol, ncell) #> resolution : 36, 18  (x, y) #> extent     : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : layer  #> values     : -2.938117, 2.710497  (min, max) #>  #>  #> [[2]] #> class       : SpatRaster  #> size        : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=longlat +datum=WGS84 +no_defs  #> source(s)   : memory #> name        : lyr.1  #> min value   :     0  #> max value   :     1  #>   # Example with file path r_file <- fs::path(temp_dir, \"raster.tif\") terra::writeRaster(r, r_file, overwrite = TRUE) r_file_scaled <- scale_0_1(r_file) c(terra::rast(r_file), r_file_scaled) #> class       : SpatRaster  #> size        : 10, 10, 2  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> sources     : raster.tif   #>               memory   #> names       :     lyr.1, lyr.1  #> min values  : -2.389476,     0  #> max values  :  2.537697,     1   # Visualize results ggplot2::ggplot() +   tidyterra::geom_spatraster(data = r, maxcell = Inf) +   ggplot2::theme_minimal()   ggplot2::ggplot() +   tidyterra::geom_spatraster(data = r_scaled, maxcell = Inf) +   ggplot2::theme_minimal()   # clean up fs::dir_delete(temp_dir)"},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts link texts and URLs from a web page — scrape_link","title":"Extracts link texts and URLs from a web page — scrape_link","text":"function scrapes web page links (<> tags) extracts URLs link text.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts link texts and URLs from a web page — scrape_link","text":"","code":"scrape_link(url, sort_by = c(\"link\", \"link_text\"))"},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts link texts and URLs from a web page — scrape_link","text":"url Character. URL web page scrape. URL also used resolve relative links absolute URLs <base> tag found. sort_by Character vector length 1 2. columns arrange output . default c(\"link\", \"link_text\").","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts link texts and URLs from a web page — scrape_link","text":"tibble two columns: link_text containing text link, link containing absolute URL link. tibble sorted link link text, unique links included.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/scrape_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts link texts and URLs from a web page — scrape_link","text":"","code":"head(scrape_link(url = \"https://github.com/tidyverse/dplyr\")) #> # A tibble: 6 × 2 #>   link_text          link                                                        #>   <chr>              <chr>                                                       #> 1 Acero              https://arrow.apache.org/docs/cpp/streaming_execution.html  #> 2 arrow              https://arrow.apache.org/docs/r/                            #> 3 dbplyr             https://dbplyr.tidyverse.org/                               #> 4 Documentation      https://docs.github.com                                     #> 5 Docs               https://docs.github.com/                                    #> 6 Search syntax tips https://docs.github.com/search-github/github-code-search/u…  head(   scrape_link(     url = \"https://github.com/tidyverse/dplyr\", sort_by = \"link_text\")) #> # A tibble: 6 × 2 #>   link_text          link                                                       #>   <chr>              <chr>                                                      #> 1 + 257 contributors https://github.com/tidyverse/dplyr/graphs/contributors     #> 2 + 42 releases      https://github.com/tidyverse/dplyr/releases                #> 3 .Rbuildignore      https://github.com/tidyverse/dplyr/blob/main/.Rbuildignore #> 4 .github            https://github.com/tidyverse/dplyr/tree/main/.github       #> 5 .gitignore         https://github.com/tidyverse/dplyr/blob/main/.gitignore    #> 6 .vscode            https://github.com/tidyverse/dplyr/tree/main/.vscode        # This will give an \"Invalid url\" error if (FALSE) { # \\dontrun{  scrape_link(url = \"https://github50.com\") } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the location of the current R script. — script_location","title":"Retrieve the location of the current R script. — script_location","text":"function determines file path currently executing R script. checks command line arguments (e.g., via Rscript) script path, interactive sessions, examines call stack recently sourced file, falling back rstudioapi (available RStudio running) sourcing context exists. location determined, returns NA.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the location of the current R script. — script_location","text":"","code":"script_location()"},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retrieve the location of the current R script. — script_location","text":"source code function adapted stackoverflow question.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the location of the current R script. — script_location","text":"character string representing file path current R script, NA_character_ path determined (e.g., unsourced interactive session without script context).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve the location of the current R script. — script_location","text":"function follows priority order: Command line arguments (--file) executed via Rscript. recent ofile attribute call stack sourced interactively R environment, supporting nested sourcing scenarios. RStudio's active editor context via rstudioapi available, RStudio running, sourcing context found. Returns NA_character_ unsourced interactive sessions non-interactive execution without script path.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/script_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the location of the current R script. — script_location","text":"","code":"if (FALSE) { # \\dontrun{   # in an interactive mode, use   script_location()    # add script_location() to your script; e.g. \"my_script.R\"   # Run: Rscript my_script.R   # Output: absolute path of the script } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"Sets active geometry column simple feature (sf) object specified column, designed use data processing pipelines (e.g., %>%). Ensures spatial operations use correct geometry column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"","code":"set_geometry(sf_object = NULL, geometry_column = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"sf_object sf object least one geometry (sfc) column. NULL non-sf. geometry_column Character. Name existing sfc geometry column sf_object set active geometry. Must single, non-empty character string.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"modified sf object active geometry column set geometry_column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"geometry_column must existing sfc column sf_object. Use caution avoid overwriting active geometry unintentionally.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Geometry Column of an sf Object in a Pipeline — set_geometry","text":"","code":"load_packages(sf, dplyr, ggplot2)  # example data with multiple geometry columns nc <- sf::st_read(   dsn = system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE) %>%   dplyr::select(AREA) # add a new geometry column nc$centroid <- sf::st_centroid(st_geometry(nc)) nc #> Simple feature collection with 100 features and 1 field #> Active geometry column: geometry #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                       geometry                   centroid #> 1  0.114 MULTIPOLYGON (((-81.47276 3...  POINT (-81.49823 36.4314) #> 2  0.061 MULTIPOLYGON (((-81.23989 3... POINT (-81.12513 36.49111) #> 3  0.143 MULTIPOLYGON (((-80.45634 3... POINT (-80.68573 36.41252) #> 4  0.070 MULTIPOLYGON (((-76.00897 3... POINT (-76.02719 36.40714) #> 5  0.153 MULTIPOLYGON (((-77.21767 3... POINT (-77.41046 36.42236) #> 6  0.097 MULTIPOLYGON (((-76.74506 3... POINT (-76.99472 36.36142) #> 7  0.062 MULTIPOLYGON (((-76.00897 3... POINT (-76.23402 36.40122) #> 8  0.091 MULTIPOLYGON (((-76.56251 3... POINT (-76.70446 36.44428) #> 9  0.118 MULTIPOLYGON (((-78.30876 3... POINT (-78.11042 36.39693) #> 10 0.124 MULTIPOLYGON (((-80.02567 3... POINT (-80.23429 36.40042)  # set centroid as active geometry in a pipeline nc_modified <- set_geometry(nc, \"centroid\") nc_modified #> Simple feature collection with 100 features and 1 field #> Active geometry column: centroid #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -84.05986 ymin: 34.07671 xmax: -75.8095 ymax: 36.49111 #> Geodetic CRS:  NAD27 #> First 10 features: #>     AREA                       geometry                   centroid #> 1  0.114 MULTIPOLYGON (((-81.47276 3...  POINT (-81.49823 36.4314) #> 2  0.061 MULTIPOLYGON (((-81.23989 3... POINT (-81.12513 36.49111) #> 3  0.143 MULTIPOLYGON (((-80.45634 3... POINT (-80.68573 36.41252) #> 4  0.070 MULTIPOLYGON (((-76.00897 3... POINT (-76.02719 36.40714) #> 5  0.153 MULTIPOLYGON (((-77.21767 3... POINT (-77.41046 36.42236) #> 6  0.097 MULTIPOLYGON (((-76.74506 3... POINT (-76.99472 36.36142) #> 7  0.062 MULTIPOLYGON (((-76.00897 3... POINT (-76.23402 36.40122) #> 8  0.091 MULTIPOLYGON (((-76.56251 3... POINT (-76.70446 36.44428) #> 9  0.118 MULTIPOLYGON (((-78.30876 3... POINT (-78.11042 36.39693) #> 10 0.124 MULTIPOLYGON (((-80.02567 3... POINT (-80.23429 36.40042)  attr(nc, \"sf_column\") #> [1] \"geometry\" attr(nc_modified, \"sf_column\") #> [1] \"centroid\"  ggplot2::ggplot() +   ggplot2::geom_sf(data = nc, aes(fill = NULL)) +   ggplot2::geom_sf(data = nc_modified, colour = \"red\") +   ggplot2::theme_minimal()"},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up or stop parallel processing plan — set_parallel","title":"Set up or stop parallel processing plan — set_parallel","text":"Configures parallel processing future::plan() stops existing plan. stopping, resets sequential mode.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up or stop parallel processing plan — set_parallel","text":"","code":"set_parallel(   n_cores = 1L,   strategy = \"multisession\",   stop_cluster = FALSE,   show_log = TRUE,   future_max_size = 500L,   cat_timestamp = FALSE,   ... )"},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up or stop parallel processing plan — set_parallel","text":"n_cores Integer. Number cores use. NULL, defaults sequential mode. Default 1. strategy Character. parallel processing strategy use. Valid options \"sequential\", \"multisession\" (default), \"multicore\", \"cluster\". See future::plan() set_parallel() details. stop_cluster Logical. TRUE, stops parallel cluster resets sequential mode. FALSE (default), sets new plan. show_log Logical. TRUE (default), logs messages via cat_time(). future_max_size Numeric. Maximum allowed total size (megabytes) global variables identified. See future.globals.maxSize argument future::future.options details. Default 500L 500 MB. cat_timestamp logical; whether include time timestamp. Default TRUE. FALSE, text printed. See cat_time(). ... Additional arguments pass cat_time.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set up or stop parallel processing plan — set_parallel","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up or stop parallel processing plan — set_parallel","text":"","code":"load_packages(future)  # number of workers available future::nbrOfWorkers() #> [1] 1  # --------------------------------------------- # `multisession` # ---------------------------------------------  # Prepare working in parallel set_parallel(n_cores = 2) #> Setting up parallel processing using 2 cores (`multisession`) future::plan(\"list\") #> List of future strategies: #> 1. multisession: #>    - args: function (..., workers = 2L, gc = TRUE) #>    - tweaked: TRUE #>    - call: future::plan(strategy = strategy, workers = n_cores, gc = TRUE) future::nbrOfWorkers() #> [1] 2  # Stopping parallel processing set_parallel(stop_cluster = TRUE) #> Stopping parallel processing future::plan(\"list\") #> List of future strategies: #> 1. sequential: #>    - args: function (..., gc = TRUE, envir = parent.frame(), workers = \"<NULL>\") #>    - tweaked: TRUE #>    - call: future::plan(strategy = \"sequential\", gc = TRUE) future::nbrOfWorkers() #> [1] 1  # --------------------------------------------- # `cluster` # ---------------------------------------------  # Prepare working in parallel set_parallel(n_cores = 2, strategy = \"cluster\") #> Setting up parallel processing using 2 cores (`cluster`) future::plan(\"list\") #> List of future strategies: #> 1. cluster: #>    - args: function (..., workers = 2L, gc = TRUE) #>    - tweaked: TRUE #>    - call: future::plan(strategy = strategy, workers = n_cores, gc = TRUE) future::nbrOfWorkers() #> [1] 2  # Stopping parallel processing set_parallel(stop_cluster = TRUE) #> Stopping parallel processing future::plan(\"list\") #> List of future strategies: #> 1. sequential: #>    - args: function (..., gc = TRUE, envir = parent.frame(), workers = \"<NULL>\") #>    - tweaked: TRUE #>    - call: future::plan(strategy = \"sequential\", gc = TRUE) future::nbrOfWorkers() #> [1] 1  # --------------------------------------------- # `multicore` # ---------------------------------------------  # Prepare working in parallel set_parallel(n_cores = 2, strategy = \"multicore\") #> Setting up parallel processing using 2 cores (`multicore`) future::plan(\"list\") #> List of future strategies: #> 1. multicore: #>    - args: function (..., workers = 2L, gc = TRUE) #>    - tweaked: TRUE #>    - call: future::plan(strategy = strategy, workers = n_cores, gc = TRUE) future::nbrOfWorkers() #> [1] 2 #> attr(,\"class\") #> [1] \"integer\"  # Stopping parallel processing set_parallel(stop_cluster = TRUE) #> Stopping parallel processing future::plan(\"list\") #> List of future strategies: #> 1. sequential: #>    - args: function (..., gc = TRUE, envir = parent.frame(), workers = \"<NULL>\") #>    - tweaked: TRUE #>    - call: future::plan(strategy = \"sequential\", gc = TRUE) future::nbrOfWorkers() #> [1] 1  # --------------------------------------------- # `sequential` # ---------------------------------------------  set_parallel(n_cores = 1, strategy = \"sequential\") future::nbrOfWorkers() #> [1] 1"},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"Sets coordinate reference system (CRS) SpatRaster object using specified CRS string, designed use data processing pipelines (e.g., %>%). Wraps terra::crs<- assign valid CRS, EPSG code.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"","code":"set_raster_crs(raster = NULL, crs = NULL)"},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"raster SpatRaster object whose CRS set. NULL non-SpatRaster. crs Character. valid CRS string (e.g., EPSG code, WKT, PROJ4) set raster.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"modified SpatRaster object updated CRS.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/set_raster_CRS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set CRS for a SpatRaster in a Pipeline — set_raster_crs","text":"","code":"load_packages(terra)  # Create a sample SpatRaster, with missing CRS r <- terra::rast(nrows = 10, ncols = 10, vals = 1:100) terra::crs(r) <- NULL print(r) #> class       : SpatRaster  #> size        : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : lyr.1  #> min value   :     1  #> max value   :   100   terra::crs(r, describe = TRUE)$code #> [1] NA   # Set CRS to EPSG:4326 (r_modified <- set_raster_crs(r, \"epsg:4326\")) #> class       : SpatRaster  #> size        : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 36, 18  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        : lyr.1  #> min value   :     1  #> max value   :   100  terra::crs(r_modified, describe = TRUE)$code #> [1] \"4326\""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add longitude and latitude coordinates to an sf object — sf_add_coords","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"Add longitude latitude coordinates new columns sf object (sf_object). extracts coordinates sf object, converts tibble, appends original sf object new columns. name_x name_y, provided arguments respectively, already exist sf object, function either  1) overwrites columns overwrite set TRUE 2) appends suffix new column names avoid overwrite overwrite set FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"","code":"sf_add_coords(   sf_object,   name_x = \"Long\",   name_y = \"Lat\",   overwrite = FALSE,   suffix = \"_NEW\" )"},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"sf_object sf object longitude latitude columns added. name_x, name_y Character. Name longitude column added. Defaults Long Lat. overwrite Logical. Whether overwrite existing columns names specified name_x name_y. FALSE columns names exist, new columns appended suffix. Defaults FALSE. suffix Character. Suffix appended new column names cases conflict overwrite FALSE. Defaults _NEW.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"sf object added longitude latitude columns.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"overwrite parameter FALSE (default) columns specified names already exist, function issue warning append suffix names new columns avoid overwriting.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/sf_add_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add longitude and latitude coordinates to an sf object — sf_add_coords","text":"","code":"load_packages(sf)  # Example sf object pt1 = sf::st_point(c(0, 1)) pt2 = sf::st_point(c(1, 1)) d = data.frame(a = c(1, 2)) d$geom = sf::st_sfc(pt1, pt2) (df = sf::st_as_sf(d)) #> Simple feature collection with 2 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a        geom #> 1 1 POINT (0 1) #> 2 2 POINT (1 1)  # |||||||||||||||||||||||||||||||||||||||||||  # add coordinates to the sf object and overwrite existing object (df <- sf_add_coords(df)) #> Simple feature collection with 2 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat        geom #> 1 1    0   1 POINT (0 1) #> 2 2    1   1 POINT (1 1)  # add coordinates again sf_add_coords(df) #> Warning: long/lat column names already exist in the data: _NEW is used as suffix #> Simple feature collection with 2 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat Long_NEW Lat_NEW        geom #> 1 1    0   1        0       1 POINT (0 1) #> 2 2    1   1        1       1 POINT (1 1)  # add coordinates again, using custom suffix sf_add_coords(df, suffix = \"new\") #> Warning: long/lat column names already exist in the data: _new is used as suffix #> Simple feature collection with 2 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 1 xmax: 1 ymax: 1 #> CRS:           NA #>   a Long Lat Long_new Lat_new        geom #> 1 1    0   1        0       1 POINT (0 1) #> 2 2    1   1        1       1 POINT (1 1)  # |||||||||||||||||||||||||||||||||||||||||||  # jitter the coordinates a little set.seed(100) (df2 <- sf::st_jitter(df, amount = 0.1)) #> Simple feature collection with 2 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.03844678 ymin: 0.9112766 xmax: 1.010464 ymax: 0.9515345 #> CRS:           NA #>   a Long Lat                          geom #> 1 1    0   1 POINT (-0.03844678 0.9515345) #> 2 2    1   1    POINT (1.010464 0.9112766)  sf_add_coords(df2, overwrite = FALSE) #> Warning: long/lat column names already exist in the data: _NEW is used as suffix #> Simple feature collection with 2 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.03844678 ymin: 0.9112766 xmax: 1.010464 ymax: 0.9515345 #> CRS:           NA #>   a Long Lat    Long_NEW   Lat_NEW                          geom #> 1 1    0   1 -0.03844678 0.9515345 POINT (-0.03844678 0.9515345) #> 2 2    1   1  1.01046449 0.9112766    POINT (1.010464 0.9112766)  sf_add_coords(df2, overwrite = TRUE) #> Warning: long/lat column names already exist in the data: overwritten #> Simple feature collection with 2 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.03844678 ymin: 0.9112766 xmax: 1.010464 ymax: 0.9515345 #> CRS:           NA #>   a        Long       Lat                          geom #> 1 1 -0.03844678 0.9515345 POINT (-0.03844678 0.9515345) #> 2 2  1.01046449 0.9112766    POINT (1.010464 0.9112766)"},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":null,"dir":"Reference","previous_headings":"","what":"Silently source R script with optional message and warning suppression — source_silent","title":"Silently source R script with optional message and warning suppression — source_silent","text":"Sources R script file options suppress messages /warnings. Useful running scripts generate unwanted console output.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silently source R script with optional message and warning suppression — source_silent","text":"","code":"source_silent(file = NULL, messages = TRUE, warnings = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silently source R script with optional message and warning suppression — source_silent","text":"file Character. Path R script file sourced. messages Logical. TRUE (default), messages shown. FALSE, messages suppressed. warnings Logical. TRUE (default), warnings shown. FALSE, warnings suppressed. ... Additional arguments passed base::source().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Silently source R script with optional message and warning suppression — source_silent","text":"Invisible NULL. Used side effect sourcing file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Silently source R script with optional message and warning suppression — source_silent","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/source_silent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Silently source R script with optional message and warning suppression — source_silent","text":"","code":"# Create a temporary R script script_file <- tempfile(fileext = \".R\") writeLines(   c(\"message('This is a message')\", \"warning('This is a warning')\",     \"print('Output')\"),     script_file)  # -------------------------------------------  # source with default settings (show messages and warnings) source_silent(script_file) #> This is a message #> Warning: This is a warning  # suppress messages only source_silent(script_file, messages = FALSE) #> Warning: This is a warning  # suppress warnings only source_silent(script_file, warnings = FALSE) #> This is a message  # suppress both messages and warnings source_silent(script_file, messages = FALSE, warnings = FALSE)  # clean up fs::file_delete(script_file)"},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a data.frame into smaller chunks — split_df_to_chunks","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"function divides data.frame smaller chunks based specified number rows per chunk (chunk_size) specified number chunks (n_chunks). neither provided, defaults splitting data.frame  minimum 5 chunks less data.frame fewer 5 rows. function ensures data evenly distributed among chunks much possible.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"","code":"split_df_to_chunks(   data = NULL,   chunk_size = NULL,   n_chunks = NULL,   prefix = \"Chunk\" )"},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"data data.frame. data.frame split chunks. chunk_size Integer. Number rows chunk contain. must positive integer less number rows data. n_chunks Integer. Number chunks split data.frame . must positive integer. prefix Character. Prefix names chunks. Default \"Chunk\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"list data.frames, data.frame represents chunk original data.frame. names list elements constructed using prefix parameter followed underscore chunk number (e.g., \"Chunk_1\", \"Chunk_2\", ...).","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_df_to_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a data.frame into smaller chunks — split_df_to_chunks","text":"","code":"split_df_to_chunks(mtcars, chunk_size = 16) #> $Chunk_1 #> # A tibble: 16 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #> 12  16.4     8  276.   180  3.07  4.07  17.4     0     0     3     3 #> 13  17.3     8  276.   180  3.07  3.73  17.6     0     0     3     3 #> 14  15.2     8  276.   180  3.07  3.78  18       0     0     3     3 #> 15  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4 #> 16  10.4     8  460    215  3     5.42  17.8     0     0     3     4 #>  #> $Chunk_2 #> # A tibble: 16 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  2  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  3  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  4  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #>  5  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #>  6  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  7  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  8  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  9  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #> 10  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #> 11  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #> 12  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #> 13  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #> 14  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #> 15  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 16  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>   # -------------------------------------------  split_df_to_chunks(mtcars, n_chunks = 3) #> $Chunk_1 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #>  #> $Chunk_2 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  16.4     8 276.    180  3.07  4.07  17.4     0     0     3     3 #>  2  17.3     8 276.    180  3.07  3.73  17.6     0     0     3     3 #>  3  15.2     8 276.    180  3.07  3.78  18       0     0     3     3 #>  4  10.4     8 472     205  2.93  5.25  18.0     0     0     3     4 #>  5  10.4     8 460     215  3     5.42  17.8     0     0     3     4 #>  6  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  7  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  8  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  9  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #> 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #> 11  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  #> $Chunk_3 #> # A tibble: 10 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  2  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  3  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #>  4  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #>  5  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #>  6  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #>  7  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #>  8  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #>  9  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 10  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>   # -------------------------------------------  split_df_to_chunks(mtcars, n_chunks = 3, prefix = \"T\") #> $T_1 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> 11  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 #>  #> $T_2 #> # A tibble: 11 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  16.4     8 276.    180  3.07  4.07  17.4     0     0     3     3 #>  2  17.3     8 276.    180  3.07  3.73  17.6     0     0     3     3 #>  3  15.2     8 276.    180  3.07  3.78  18       0     0     3     3 #>  4  10.4     8 472     205  2.93  5.25  18.0     0     0     3     4 #>  5  10.4     8 460     215  3     5.42  17.8     0     0     3     4 #>  6  14.7     8 440     230  3.23  5.34  17.4     0     0     3     4 #>  7  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #>  8  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #>  9  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1 #> 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1 #> 11  15.5     8 318     150  2.76  3.52  16.9     0     0     3     2 #>  #> $T_3 #> # A tibble: 10 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #>  2  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #>  3  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #>  4  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #>  5  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #>  6  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #>  7  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #>  8  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #>  9  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #> 10  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>"},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a raster object into a list of smaller rasters — split_raster","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Split raster object list smaller rasters based specified numbers rows columns. can optionally save resulting rasters disk, plot , return just extents.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a raster object into a list of smaller rasters — split_raster","text":"","code":"split_raster(   raster = NULL,   n_columns = 4L,   n_rows = 4L,   save = FALSE,   save_path = \"\",   plot = FALSE,   extent_only = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a raster object into a list of smaller rasters — split_raster","text":"raster raster object split. NULL (default), function execute. n_columns, n_rows Integer. desired number columns rows split raster . Default 4 columns 4 rows. save Logical. Whether save split rasters disk. Default FALSE. save_path Character. Directory path split rasters saved save TRUE. directory exist, created. plot Logical. Whether plot split rasters. Default FALSE. extent_only Logical. TRUE, function returns extents split rasters instead raster data. Default FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a raster object into a list of smaller rasters — split_raster","text":"list raster objects extents split rasters, depending value extent_only parameter.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Click ","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a raster object into a list of smaller rasters — split_raster","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a raster object into a list of smaller rasters — split_raster","text":"","code":"load_packages(raster, ggplot2, purrr)  # set ggplot2 theme ggplot2::theme_set(   ggplot2::theme_minimal(base_size = 12) +   ggplot2::theme(     legend.position = \"none\",     axis.title = ggplot2::element_blank(),     axis.text = ggplot2::element_blank(),     axis.ticks = ggplot2::element_blank()))  # example raster logo <- raster::raster(system.file(\"external/rlogo.grd\", package = \"raster\"))  ggplot2::ggplot() +  ggplot2::geom_raster(     data = as.data.frame(logo, xy = TRUE),     ggplot2::aes(x = x, y = y, fill = red)) +  ggplot2::scale_fill_gradient()   # --------------------------------------------------  # Split into 2 rows and 2 columns logo_split <- split_raster(   raster = logo, n_columns = 2, n_rows = 2, plot = FALSE)  # plotting plot_df <- purrr::map_dfr(   .x = seq_len(length(logo_split)),   .f = ~ {   as.data.frame(logo_split[[.x]], xy = TRUE) %>%     dplyr::mutate(tile = .x)   })  ggplot2::ggplot() +  ggplot2::geom_raster(    data = plot_df, ggplot2::aes(x = x, y = y, fill = red)) +    ggplot2::facet_wrap(~tile, scales = \"free\") +    ggplot2::scale_fill_gradient()   # --------------------------------------------------  # Merging split maps again logo_split$fun <- mean logo_split$na.rm <- TRUE logo_split2 <- do.call(mosaic, logo_split)  # Plotting ggplot2::ggplot() +  ggplot2::geom_raster(     data = as.data.frame(logo_split2, xy = TRUE),     ggplot2::aes(x = x, y = y, fill = layer)) +  ggplot2::scale_fill_gradient() +  ggplot2::theme_minimal()   # No value difference! print({logo_split2 - logo}) #> class      : RasterLayer  #> dimensions : 77, 101, 7777  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 101, 0, 77  (xmin, xmax, ymin, ymax) #> crs        : +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #> source     : memory #> names      : layer  #> values     : 0, 0  (min, max) #>   # --------------------------------------------------  (logo_extents <- split_raster(   logo, n_columns = 2, n_rows = 2, extent_only = TRUE)) #> [[1]] #> class      : Extent  #> xmin       : 0  #> xmax       : 51  #> ymin       : 38  #> ymax       : 77  #>  #> [[2]] #> class      : Extent  #> xmin       : 51  #> xmax       : 102  #> ymin       : 38  #> ymax       : 77  #>  #> [[3]] #> class      : Extent  #> xmin       : 0  #> xmax       : 51  #> ymin       : -1  #> ymax       : 38  #>  #> [[4]] #> class      : Extent  #> xmin       : 51  #> xmax       : 102  #> ymin       : -1  #> ymax       : 38  #>   # plotting ext_rect <- purrr::map_dfr(   .x = seq_len(length(logo_extents)),   .f = ~ {       ext <- logo_extents[[.x]]       data.frame(           xmin = ext@xmin, xmax = ext@xmax,           ymin = ext@ymin, ymax = ext@ymax,           tile = .x, color = colors()[.x])    }) ggplot2::ggplot() +   ggplot2::geom_raster(     data = as.data.frame(logo, xy = TRUE),     mapping = ggplot2::aes(x = x, y = y, fill = red)) +  ggplot2::geom_rect(     data = ext_rect,     mapping = ggplot2::aes(       xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax,       group = tile, color = color),    fill = NA, linewidth = 1.4, linetype = \"dashed\")"},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a vector into smaller chunks — split_vector","title":"Split a vector into smaller chunks — split_vector","text":"function divides given vector specified number smaller chunks. useful partitioning data manageable pieces parallel processing tasks.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a vector into smaller chunks — split_vector","text":"","code":"split_vector(vector = NULL, n_splits = NULL, prefix = \"Chunk\")"},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a vector into smaller chunks — split_vector","text":"vector numeric character vector want split. n_splits Integer. Number chunks split vector . must exceed length vector. prefix Character. prefix names chunks returned list. Defaults \"Chunk\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a vector into smaller chunks — split_vector","text":"list vectors, vector represents chunk original vector. names list elements generated using specified prefix followed underscore chunk number.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a vector into smaller chunks — split_vector","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/split_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a vector into smaller chunks — split_vector","text":"","code":"split_vector(vector = seq_len(100), n_splits = 3) #> $Chunk_1 #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 #>  #> $Chunk_2 #>  [1] 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #> [26] 60 61 62 63 64 65 66 67 #>  #> $Chunk_3 #>  [1]  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86 #> [20]  87  88  89  90  91  92  93  94  95  96  97  98  99 100 #>   # -------------------------------------------  split_vector(vector = seq_len(100), n_splits = 2, prefix = \"T\") #> $T_1 #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #>  #> $T_2 #>  [1]  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69 #> [20]  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88 #> [39]  89  90  91  92  93  94  95  96  97  98  99 100 #>"},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"Signals errors rich context, wrapping rlang::abort(). includes: calling function name (applicable). User-defined metadata (e.g., vectors, lists, data frames, tibbles, SpatRaster, RasterLayer, RasterStack, RasterBrick, sf objects, regression models, ggplot objects, S4 objects). Optional timestamps/dates. Optional backtraces aid debugging.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"","code":"stop_ctx(   message,   ...,   class = NULL,   call = NULL,   parent = NULL,   include_backtrace = FALSE,   cat_timestamp = TRUE,   cat_date = FALSE )"},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"message Character. primary error message display. ... Named R objects include metadata. can various types, vectors, lists, data frames, tibbles, SpatRaster, RasterLayer, RasterStack, RasterBrick, sf objects, regression models (e.g., lm, glm), ggplot objects, S4 objects, . Unnamed arguments cause error due .named = TRUE rlang::enquos(). NULL values displayed \"NULL\". class Character NULL. Subclass(es) error condition. Defaults NULL. See rlang::abort details. call Call NULL. call causing error. Defaults caller's expression.  See rlang::abort details. parent Condition NULL. Parent error nesting. Defaults NULL. See rlang::abort details. include_backtrace Logical. TRUE, includes compact backtrace. Default: FALSE. cat_timestamp Logical. TRUE, prepends timestamp (HH:MM:SS). Default: TRUE. cat_date Logical. TRUE, prepends date (YYYY-MM-DD). Default: FALSE.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"return; throws error via rlang::abort().","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"metadata-output","dir":"Reference","previous_headings":"","what":"Metadata Output","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"metadata section error message displays provided object name, verbatim expression used, class, value: Object Name: name argument (e.g., file). Verbatim Expression: expression passed (e.g., \"data.csv\"). Class: class object, multiple classes concatenated using + (e.g., <tbl_df + tbl + data.frame>). Value: formatted output object, using methods like print(), summary(), glimpse(), str(), depending object type. example: Complex objects, data frames raster layers, display structure summary appropriate.","code":"----- Metadata -----   file [\"data.csv\"]: <character>   \"data.csv\"    type [\"missing_input\"]: <character>   \"missing_input\""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/stop_ctx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signal structured errors with metadata, timestamps, and backtraces — stop_ctx","text":"","code":"# loading packages load_packages(dplyr, sf, terra, raster)  # -------------------------------------------------------------------  # Basic error with metadata and backtrace try(   stop_ctx(     message = \"File not found\", file = \"data.csv\",     type = \"missing_input\", foo = 1:3, include_backtrace = TRUE)) #> Error in try(stop_ctx(message = \"File not found\", file = \"data.csv\", type = \"missing_input\",  :  #>   File not found - 14:33:39 #>  #> ----- Metadata ----- #>  #> file [\"data.csv\"]: <character> #> data.csv #>  #> type [\"missing_input\"]: <character> #> missing_input #>  #> foo [1:3]: <integer> #> 1, 2, 3 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir)  # -------------------------------------------------------------------  # Include date in error message; no backtrace try(   stop_ctx(     message = \"File not found\", file = \"data.csv\",     type = \"missing_input\", cat_date = TRUE)) #> Error in try(stop_ctx(message = \"File not found\", file = \"data.csv\", type = \"missing_input\",  :  #>   File not found - 19/08/2025 14:33:39 #>  #> ----- Metadata ----- #>  #> file [\"data.csv\"]: <character> #> data.csv #>  #> type [\"missing_input\"]: <character> #> missing_input  # -------------------------------------------------------------------  # Complex objects as metadata terra_obj <- terra::rast() raster_obj <- raster::raster() sf_obj <- sf::st_point(c(0,0)) lm_obj <- lm(mpg ~ wt, data = mtcars) try(   stop_ctx(     message = \"File not found\", raster = raster_obj, terra = terra_obj,     data_frame = iris, matrix = as.matrix(iris), sf_obj = sf_obj,     lm_obj = lm_obj)) #> Error in try(stop_ctx(message = \"File not found\", raster = raster_obj,  :  #>   File not found - 14:33:39 #>  #> ----- Metadata ----- #>  #> raster [raster_obj]: <RasterLayer> #> class      : RasterLayer  #> dimensions : 180, 360, 64800  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #>  #> terra [terra_obj]: <SpatRaster> #> class       : SpatRaster  #> size        : 180, 360, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)  #>  #> data_frame [iris]: <data.frame> #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s… #>  #> matrix [as.matrix(iris)]: <matrix + array> #>  chr [1:150, 1:5] \"5.1\" \"4.9\" \"4.7\" \"4.6\" \"5.0\" \"5.4\" \"4.6\" \"5.0\" \"4.4\" ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : NULL #>   ..$ : chr [1:5] \"Sepal.Length\" \"Sepal.Width\" \"Petal.Length\" \"Petal.Width\" ... #>  #> sf_obj [sf_obj]: <XY + POINT + sfg> #> 0, 0 #>  #> lm_obj [lm_obj]: <lm> #> Call: #> lm(formula = mpg ~ wt, data = mtcars) #> Coefficients: #> (Intercept)           wt   #>      37.285       -5.344    # -------------------------------------------------------------------  # S4 object as metadata setClass(\"Student\", slots = list(name = \"character\", age = \"numeric\")) student <- new(\"Student\", name = \"John Doe\", age = 23) try(   stop_ctx(     message = \"Student record error\",     metadata = student, type = \"invalid_data\", include_backtrace = FALSE)) #> Error in try(stop_ctx(message = \"Student record error\", metadata = student,  :  #>   Student record error - 14:33:39 #>  #> ----- Metadata ----- #>  #> metadata [student]: <Student> #>  Length   Class    Mode  #>       1 Student      S4  #>  #> type [\"invalid_data\"]: <character> #> invalid_data  # -------------------------------------------------------------------  # Nested function error with backtrace f3 <- function(x) {   stop_ctx(\"Non-numeric input in f3()\", input = x, include_backtrace = TRUE) } f2 <- function(y) f3(y + 1) f1 <- function(z) f2(z * 3)  # Output includes: \"Calling Function: f1\" before metadata try(f1(\"not a number\")) #> Error in value[[3L]](cond) :  #>   Error evaluating argument 'input': non-numeric argument to binary operator - 14:33:39 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             ├─base::try(f1(\"not a number\")) #>  34.                             │ └─base::tryCatch(...) #>  35.                             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler) #>  38.                             └─f1(\"not a number\") #>  39.                               └─f2(z * 3) #>  40.                                 └─f3(y + 1) #>  41.                                   └─ecokit::stop_ctx(\"Non-numeric input in f3()\", input = x, include_backtrace = TRUE) #>  42.                                     └─base::tryCatch(...) #>  43.                                       └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  44.                                         └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  45.                                           └─value[[3L]](cond) #> Caused by error in `z * 3`: #> ! non-numeric argument to binary operator  # -------------------------------------------------------------------  # Nested function error without metadata f3 <- function() {   stop_ctx(message = \"Error in f3()\", include_backtrace = TRUE) } f2 <- function(y) f3() f1 <- function(z) f2()  # Output includes: \"Calling Function: f1\" before metadata try(f1()) #> Error in f3() : Error in f3() - 14:33:39 #>  #> ----- Backtrace ----- #>   1. └─pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>   2.   └─pkgdown::build_site(...) #>   3.     └─pkgdown:::build_site_local(...) #>   4.       └─pkgdown::build_reference(...) #>   5.         ├─pkgdown:::unwrap_purrr_error(...) #>   6.         │ └─base::withCallingHandlers(...) #>   7.         └─purrr::map(...) #>   8.           └─purrr:::map_(\"list\", .x, .f, ..., .progress = .progress) #>   9.             ├─purrr:::with_indexed_errors(...) #>  10.             │ └─base::withCallingHandlers(...) #>  11.             ├─purrr:::call_with_cleanup(...) #>  12.             └─pkgdown (local) .f(.x[[i]], ...) #>  13.               ├─base::withCallingHandlers(...) #>  14.               └─pkgdown:::data_reference_topic(...) #>  15.                 └─pkgdown:::run_examples(...) #>  16.                   └─pkgdown:::highlight_examples(code, topic, env = env) #>  17.                     └─downlit::evaluate_and_highlight(...) #>  18.                       └─evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  19.                         ├─base::withRestarts(...) #>  20.                         │ └─base (local) withRestartList(expr, restarts) #>  21.                         │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]]) #>  22.                         │   │ └─base (local) doWithOneRestart(return(expr), restart) #>  23.                         │   └─base (local) withRestartList(expr, restarts[-nr]) #>  24.                         │     └─base (local) withOneRestart(expr, restarts[[1L]]) #>  25.                         │       └─base (local) doWithOneRestart(return(expr), restart) #>  26.                         ├─evaluate:::with_handlers(...) #>  27.                         │ ├─base::eval(call) #>  28.                         │ │ └─base::eval(call) #>  29.                         │ └─base::withCallingHandlers(...) #>  30.                         ├─base::withVisible(eval(expr, envir)) #>  31.                         └─base::eval(expr, envir) #>  32.                           └─base::eval(expr, envir) #>  33.                             ├─base::try(f1()) #>  34.                             │ └─base::tryCatch(...) #>  35.                             │   └─base (local) tryCatchList(expr, classes, parentenv, handlers) #>  36.                             │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  37.                             │       └─base (local) doTryCatch(return(expr), name, parentenv, handler) #>  38.                             └─f1() #>  39.                               └─f2() #>  40.                                 └─f3()  # -------------------------------------------------------------------  if (FALSE) { # \\dontrun{   # Unnamed arguments will cause an error   stop_ctx(\"A\", \"X\") } # }"},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a system command in a cross-platform manner — system_command","title":"Run a system command in a cross-platform manner — system_command","text":"function executes system command, using either shell Windows system Linux. allows output command captured R object.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a system command in a cross-platform manner — system_command","text":"","code":"system_command(command, r_object = TRUE, ...)"},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a system command in a cross-platform manner — system_command","text":"command Character. bash command executed. r_object Logical. Whether capture output command R object. TRUE (Default), output captured; FALSE, output printed console. ... Additional arguments passed either shell system function, depending operating system.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a system command in a cross-platform manner — system_command","text":"Depending value r_object, either output executed command R object NULL r_object FALSE output printed console.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run a system command in a cross-platform manner — system_command","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/system_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a system command in a cross-platform manner — system_command","text":"","code":"# print working directory system_command(\"pwd\") #> [1] \"/home/runner/work/ecokit/ecokit/docs/reference\" system_command(\"pwd\", r_object = FALSE) #> /home/runner/work/ecokit/ecokit/docs/reference  # first 5 files on the working directory (A <- system_command(\"ls | head -n 5\")) #> [1] \"OS.html\"                      \"add_geometric_features-1.png\" #> [3] \"add_geometric_features-2.png\" \"add_geometric_features.html\"  #> [5] \"add_image_to_plot-1.png\"       B <- system_command(\"ls | head -n 5\", r_object = FALSE) #> OS.html #> add_geometric_features-1.png #> add_geometric_features-2.png #> add_geometric_features.html #> add_image_to_plot-1.png B #> NULL"},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract longitude and latitude from string — text_to_coordinates","title":"Extract longitude and latitude from string — text_to_coordinates","text":"Extract longitude latitude string representing geographical point format \"POINT (longitude latitude)\" converts two-column tibble containing longitude latitude numeric values. names columns resulting tibble can customized. default names longitude latitude columns \"Longitude\" \"Latitude\", respectively.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract longitude and latitude from string — text_to_coordinates","text":"","code":"text_to_coordinates(text = NULL, name_x = \"Longitude\", name_y = \"Latitude\")"},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract longitude and latitude from string — text_to_coordinates","text":"text Character. Coordinates format \"POINT (longitude latitude)\". parameter required NULL. name_x, name_y Character. Name used longitude Longitude columns output tibble. Defaults \"Longitude\" \"Latitude\".","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract longitude and latitude from string — text_to_coordinates","text":"tibble two columns containing longitude latitude values extracted input string. names columns determined name_x name_y parameters. names provided, default names (\"Longitude\" \"Latitude\") used.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract longitude and latitude from string — text_to_coordinates","text":"Ahmed El-Gabbas","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/text_to_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract longitude and latitude from string — text_to_coordinates","text":"","code":"c(\"POINT (11.761 46.286)\", \"POINT (14.8336 42.0422)\",   \"POINT (16.179999 38.427214)\") %>%  purrr::map(text_to_coordinates) %>%  dplyr::bind_rows() #> # A tibble: 3 × 2 #>   Longitude Latitude #>       <dbl>    <dbl> #> 1      11.8     46.3 #> 2      14.8     42.0 #> 3      16.2     38.4  c(\"POINT (11.761 46.286)\", \"POINT (14.8336 42.0422)\",   \"POINT (16.179999 38.427214)\") %>%  purrr::map(text_to_coordinates, name_x = \"Long\", name_y = \"Lat\") %>%  dplyr::bind_rows() #> # A tibble: 3 × 2 #>    Long   Lat #>   <dbl> <dbl> #> 1  11.8  46.3 #> 2  14.8  42.0 #> 3  16.2  38.4"},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Column Sizes in a Tibble — tibble_column_size","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"function calculates memory size column tibble data frame returns summary tibble containing column indices, names, classes, sizes.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"","code":"tibble_column_size(tibble)"},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"tibble tibble data frame least one row one column.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"tibble following columns (sorted col_size descending order): col_index: Integer; original column index. col_name: Character; name column. col_class: Character; class(es) column, collapsed single string. col_size: Numeric; memory size column bytes, calculated lobstr::obj_size.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"memory size computed using lobstr::obj_size, includes overhead column's vector structure. Columns complex data (e.g., lists) may larger sizes due structure.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/tibble_column_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Column Sizes in a Tibble — tibble_column_size","text":"","code":"# Load required packages ecokit::load_packages(tibble, dplyr, purrr, lobstr, terra)  # # --------------------------------------------------------------- # Generate a moderately sized tibble with various column types # # ---------------------------------------------------------------  # Create a moderately sized tibble (100 rows) n_rows <- 100  # Simple columns set.seed(123) species_data <- tibble::tibble(   species_id = seq_len(n_rows),   species_name = paste0(\"Species_\", sprintf(\"%03d\", seq_len(n_rows))),   n_cells = sample(10:500, n_rows, replace = TRUE),   habitat = factor(     sample(c(\"Forest\", \"Grassland\", \"Wetland\"), n_rows, replace = TRUE)))  # List column: Observations per species (vectors of random coordinates) obs_coords <- purrr::map(seq_len(n_rows), ~ runif(sample(5:20, 1), 0, 100)) species_data$obs_coords <- obs_coords  # Nested tibble column: Species traits set.seed(123) traits <- purrr::map(   .x = seq_len(n_rows),   .f = ~ tibble::tibble(     trait_name = c(\"height_cm\", \"seed_count\", \"growth_rate\"),     value = runif(3, 0, 100),     unit = c(\"cm\", \"count\", \"cm/day\"))) species_data$traits <- traits  # SpatRaster column: Small raster maps for each species # Create a template raster (10x10 grid) template_raster <- terra::rast(   nrows = 10, ncols = 10, xmin = 0, xmax = 100, ymin = 0, ymax = 100) set.seed(123) rasters <- purrr::map(   .x = seq_len(n_rows),   .f = ~ {     r <- template_raster     # Random presence/absence values     terra::values(r) <- runif(terra::ncell(r), 0, 1)     r   }) species_data$raster_map <- rasters  # Verify the tibble dplyr::glimpse(species_data, 1) #> Rows: 100 #> Columns: 7 #> $ species_id   <int> … #> $ species_name <chr> … #> $ n_cells      <int> … #> $ habitat      <fct> … #> $ obs_coords   <list> … #> $ traits       <list> … #> $ raster_map   <list> …  # # --------------------------------------------------------------- # Calculate column sizes # # ---------------------------------------------------------------  tibble_column_size(species_data) #> # A tibble: 7 × 4 #>   col_index col_name     col_class               col_size   #>       <int> <chr>        <chr>                   <lbstr_by> #> 1         7 raster_map   SpatRaster              10.88 MB   #> 2         6 traits       tbl_df, tbl, data.frame 72.13 kB   #> 3         5 obs_coords   numeric                 17.12 kB   #> 4         2 species_name character                7.25 kB   #> 5         1 species_id   integer                  1.13 kB   #> 6         4 habitat      factor                   1.04 kB   #> 7         3 n_cells      integer                    448 B"},{"path":"https://elgabbas.github.io/ecokit/reference/used_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract package names used with :: in an R script — used_packages","title":"Extract package names used with :: in an R script — used_packages","text":"Reads R script file extracts unique package names used :: operator (e.g., dplyr dplyr::arrange). Ignores entire lines comments (starting #, ignoring whitespace) text # within lines.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/used_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract package names used with :: in an R script — used_packages","text":"","code":"used_packages(file_path)"},{"path":"https://elgabbas.github.io/ecokit/reference/used_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract package names used with :: in an R script — used_packages","text":"file_path Character string specifying path R script file.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/used_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract package names used with :: in an R script — used_packages","text":"character vector unique package names used ::. Returns character(0) none found.","code":""},{"path":"https://elgabbas.github.io/ecokit/reference/used_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract package names used with :: in an R script — used_packages","text":"","code":"# Example with a script from GitHub dplyr_select_url <- paste0(   \"https://raw.githubusercontent.com/elgabbas/ecokit/\",   \"refs/heads/main/R/spat_split_raster.R\") example_script <- fs::file_temp(\"Example_script_\", ext = \"R\") download.file(dplyr_select_url, destfile = example_script, quiet = TRUE)  used_packages(example_script) #> [1] \"ecokit\"   \"fs\"       \"graphics\" \"raster\"    # cleanup fs::file_delete(example_script)"}]
